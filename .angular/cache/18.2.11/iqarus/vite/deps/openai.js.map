{
  "version": 3,
  "sources": ["../../../../../../node_modules/openai/error.mjs", "../../../../../../node_modules/openai/version.mjs", "../../../../../../node_modules/openai/_shims/registry.mjs", "../../../../../../node_modules/openai/_shims/MultipartBody.mjs", "../../../../../../node_modules/openai/_shims/web-runtime.mjs", "../../../../../../node_modules/openai/_shims/index.mjs", "../../../../../../node_modules/openai/internal/decoders/line.mjs", "../../../../../../node_modules/openai/streaming.mjs", "../../../../../../node_modules/openai/uploads.mjs", "../../../../../../node_modules/openai/core.mjs", "../../../../../../node_modules/openai/internal/qs/formats.mjs", "../../../../../../node_modules/openai/internal/qs/utils.mjs", "../../../../../../node_modules/openai/internal/qs/stringify.mjs", "../../../../../../node_modules/openai/pagination.mjs", "../../../../../../node_modules/openai/resource.mjs", "../../../../../../node_modules/openai/resources/chat/completions.mjs", "../../../../../../node_modules/openai/resources/chat/chat.mjs", "../../../../../../node_modules/openai/resources/audio/speech.mjs", "../../../../../../node_modules/openai/resources/audio/transcriptions.mjs", "../../../../../../node_modules/openai/resources/audio/translations.mjs", "../../../../../../node_modules/openai/resources/audio/audio.mjs", "../../../../../../node_modules/openai/resources/batches.mjs", "../../../../../../node_modules/openai/resources/beta/assistants.mjs", "../../../../../../node_modules/openai/lib/RunnableFunction.mjs", "../../../../../../node_modules/openai/lib/chatCompletionUtils.mjs", "../../../../../../node_modules/openai/lib/EventStream.mjs", "../../../../../../node_modules/openai/lib/parser.mjs", "../../../../../../node_modules/openai/lib/AbstractChatCompletionRunner.mjs", "../../../../../../node_modules/openai/lib/ChatCompletionRunner.mjs", "../../../../../../node_modules/openai/_vendor/partial-json-parser/parser.mjs", "../../../../../../node_modules/openai/lib/ChatCompletionStream.mjs", "../../../../../../node_modules/openai/lib/ChatCompletionStreamingRunner.mjs", "../../../../../../node_modules/openai/resources/beta/chat/completions.mjs", "../../../../../../node_modules/openai/resources/beta/chat/chat.mjs", "../../../../../../node_modules/openai/lib/AssistantStream.mjs", "../../../../../../node_modules/openai/resources/beta/threads/messages.mjs", "../../../../../../node_modules/openai/resources/beta/threads/runs/steps.mjs", "../../../../../../node_modules/openai/resources/beta/threads/runs/runs.mjs", "../../../../../../node_modules/openai/resources/beta/threads/threads.mjs", "../../../../../../node_modules/openai/lib/Util.mjs", "../../../../../../node_modules/openai/resources/beta/vector-stores/files.mjs", "../../../../../../node_modules/openai/resources/beta/vector-stores/file-batches.mjs", "../../../../../../node_modules/openai/resources/beta/vector-stores/vector-stores.mjs", "../../../../../../node_modules/openai/resources/beta/beta.mjs", "../../../../../../node_modules/openai/resources/completions.mjs", "../../../../../../node_modules/openai/resources/embeddings.mjs", "../../../../../../node_modules/openai/resources/files.mjs", "../../../../../../node_modules/openai/resources/fine-tuning/jobs/checkpoints.mjs", "../../../../../../node_modules/openai/resources/fine-tuning/jobs/jobs.mjs", "../../../../../../node_modules/openai/resources/fine-tuning/fine-tuning.mjs", "../../../../../../node_modules/openai/resources/images.mjs", "../../../../../../node_modules/openai/resources/models.mjs", "../../../../../../node_modules/openai/resources/moderations.mjs", "../../../../../../node_modules/openai/resources/uploads/parts.mjs", "../../../../../../node_modules/openai/resources/uploads/uploads.mjs", "../../../../../../node_modules/openai/index.mjs"],
  "sourcesContent": ["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { castToError } from \"./core.mjs\";\nexport class OpenAIError extends Error {}\nexport class APIError extends OpenAIError {\n  constructor(status, error, message, headers) {\n    super(`${APIError.makeMessage(status, error, message)}`);\n    this.status = status;\n    this.headers = headers;\n    this.request_id = headers?.['x-request-id'];\n    const data = error;\n    this.error = data;\n    this.code = data?.['code'];\n    this.param = data?.['param'];\n    this.type = data?.['type'];\n  }\n  static makeMessage(status, error, message) {\n    const msg = error?.message ? typeof error.message === 'string' ? error.message : JSON.stringify(error.message) : error ? JSON.stringify(error) : message;\n    if (status && msg) {\n      return `${status} ${msg}`;\n    }\n    if (status) {\n      return `${status} status code (no body)`;\n    }\n    if (msg) {\n      return msg;\n    }\n    return '(no status code or body)';\n  }\n  static generate(status, errorResponse, message, headers) {\n    if (!status) {\n      return new APIConnectionError({\n        message,\n        cause: castToError(errorResponse)\n      });\n    }\n    const error = errorResponse?.['error'];\n    if (status === 400) {\n      return new BadRequestError(status, error, message, headers);\n    }\n    if (status === 401) {\n      return new AuthenticationError(status, error, message, headers);\n    }\n    if (status === 403) {\n      return new PermissionDeniedError(status, error, message, headers);\n    }\n    if (status === 404) {\n      return new NotFoundError(status, error, message, headers);\n    }\n    if (status === 409) {\n      return new ConflictError(status, error, message, headers);\n    }\n    if (status === 422) {\n      return new UnprocessableEntityError(status, error, message, headers);\n    }\n    if (status === 429) {\n      return new RateLimitError(status, error, message, headers);\n    }\n    if (status >= 500) {\n      return new InternalServerError(status, error, message, headers);\n    }\n    return new APIError(status, error, message, headers);\n  }\n}\nexport class APIUserAbortError extends APIError {\n  constructor({\n    message\n  } = {}) {\n    super(undefined, undefined, message || 'Request was aborted.', undefined);\n    this.status = undefined;\n  }\n}\nexport class APIConnectionError extends APIError {\n  constructor({\n    message,\n    cause\n  }) {\n    super(undefined, undefined, message || 'Connection error.', undefined);\n    this.status = undefined;\n    // in some environments the 'cause' property is already declared\n    // @ts-ignore\n    if (cause) this.cause = cause;\n  }\n}\nexport class APIConnectionTimeoutError extends APIConnectionError {\n  constructor({\n    message\n  } = {}) {\n    super({\n      message: message ?? 'Request timed out.'\n    });\n  }\n}\nexport class BadRequestError extends APIError {\n  constructor() {\n    super(...arguments);\n    this.status = 400;\n  }\n}\nexport class AuthenticationError extends APIError {\n  constructor() {\n    super(...arguments);\n    this.status = 401;\n  }\n}\nexport class PermissionDeniedError extends APIError {\n  constructor() {\n    super(...arguments);\n    this.status = 403;\n  }\n}\nexport class NotFoundError extends APIError {\n  constructor() {\n    super(...arguments);\n    this.status = 404;\n  }\n}\nexport class ConflictError extends APIError {\n  constructor() {\n    super(...arguments);\n    this.status = 409;\n  }\n}\nexport class UnprocessableEntityError extends APIError {\n  constructor() {\n    super(...arguments);\n    this.status = 422;\n  }\n}\nexport class RateLimitError extends APIError {\n  constructor() {\n    super(...arguments);\n    this.status = 429;\n  }\n}\nexport class InternalServerError extends APIError {}\nexport class LengthFinishReasonError extends OpenAIError {\n  constructor() {\n    super(`Could not parse response content as the length limit was reached`);\n  }\n}\nexport class ContentFilterFinishReasonError extends OpenAIError {\n  constructor() {\n    super(`Could not parse response content as the request was rejected by the content filter`);\n  }\n}\n", "export const VERSION = '4.69.0'; // x-release-please-version\n", "export let auto = false;\nexport let kind = undefined;\nexport let fetch = undefined;\nexport let Request = undefined;\nexport let Response = undefined;\nexport let Headers = undefined;\nexport let FormData = undefined;\nexport let Blob = undefined;\nexport let File = undefined;\nexport let ReadableStream = undefined;\nexport let getMultipartRequestOptions = undefined;\nexport let getDefaultAgent = undefined;\nexport let fileFromPath = undefined;\nexport let isFsReadStream = undefined;\nexport function setShims(shims, options = {\n  auto: false\n}) {\n  if (auto) {\n    throw new Error(`you must \\`import 'openai/shims/${shims.kind}'\\` before importing anything else from openai`);\n  }\n  if (kind) {\n    throw new Error(`can't \\`import 'openai/shims/${shims.kind}'\\` after \\`import 'openai/shims/${kind}'\\``);\n  }\n  auto = options.auto;\n  kind = shims.kind;\n  fetch = shims.fetch;\n  Request = shims.Request;\n  Response = shims.Response;\n  Headers = shims.Headers;\n  FormData = shims.FormData;\n  Blob = shims.Blob;\n  File = shims.File;\n  ReadableStream = shims.ReadableStream;\n  getMultipartRequestOptions = shims.getMultipartRequestOptions;\n  getDefaultAgent = shims.getDefaultAgent;\n  fileFromPath = shims.fileFromPath;\n  isFsReadStream = shims.isFsReadStream;\n}\n", "/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nexport class MultipartBody {\n  constructor(body) {\n    this.body = body;\n  }\n  get [Symbol.toStringTag]() {\n    return 'MultipartBody';\n  }\n}\n", "import { MultipartBody } from \"./MultipartBody.mjs\";\nexport function getRuntime({\n  manuallyImported\n} = {}) {\n  const recommendation = manuallyImported ? `You may need to use polyfills` : `Add one of these imports before your first \\`import â€¦ from 'openai'\\`:\n- \\`import 'openai/shims/node'\\` (if you're running on Node)\n- \\`import 'openai/shims/web'\\` (otherwise)\n`;\n  let _fetch, _Request, _Response, _Headers;\n  try {\n    // @ts-ignore\n    _fetch = fetch;\n    // @ts-ignore\n    _Request = Request;\n    // @ts-ignore\n    _Response = Response;\n    // @ts-ignore\n    _Headers = Headers;\n  } catch (error) {\n    throw new Error(`this environment is missing the following Web Fetch API type: ${error.message}. ${recommendation}`);\n  }\n  return {\n    kind: 'web',\n    fetch: _fetch,\n    Request: _Request,\n    Response: _Response,\n    Headers: _Headers,\n    FormData:\n    // @ts-ignore\n    typeof FormData !== 'undefined' ? FormData : class FormData {\n      // @ts-ignore\n      constructor() {\n        throw new Error(`file uploads aren't supported in this environment yet as 'FormData' is undefined. ${recommendation}`);\n      }\n    },\n    Blob: typeof Blob !== 'undefined' ? Blob : class Blob {\n      constructor() {\n        throw new Error(`file uploads aren't supported in this environment yet as 'Blob' is undefined. ${recommendation}`);\n      }\n    },\n    File:\n    // @ts-ignore\n    typeof File !== 'undefined' ? File : class File {\n      // @ts-ignore\n      constructor() {\n        throw new Error(`file uploads aren't supported in this environment yet as 'File' is undefined. ${recommendation}`);\n      }\n    },\n    ReadableStream:\n    // @ts-ignore\n    typeof ReadableStream !== 'undefined' ? ReadableStream : class ReadableStream {\n      // @ts-ignore\n      constructor() {\n        throw new Error(`streaming isn't supported in this environment yet as 'ReadableStream' is undefined. ${recommendation}`);\n      }\n    },\n    getMultipartRequestOptions: async (\n    // @ts-ignore\n    form, opts) => ({\n      ...opts,\n      body: new MultipartBody(form)\n    }),\n    getDefaultAgent: url => undefined,\n    fileFromPath: () => {\n      throw new Error('The `fileFromPath` function is only supported in Node. See the README for more details: https://www.github.com/openai/openai-node#file-uploads');\n    },\n    isFsReadStream: value => false\n  };\n}\n", "/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nimport * as shims from './registry.mjs';\nimport * as auto from 'openai/_shims/auto/runtime';\nif (!shims.kind) shims.setShims(auto.getRuntime(), {\n  auto: true\n});\nexport * from './registry.mjs';", "import { OpenAIError } from \"../../error.mjs\";\n/**\n * A re-implementation of httpx's `LineDecoder` in Python that handles incrementally\n * reading lines from text.\n *\n * https://github.com/encode/httpx/blob/920333ea98118e9cf617f246905d7b202510941c/httpx/_decoders.py#L258\n */\nexport class LineDecoder {\n  constructor() {\n    this.buffer = [];\n    this.trailingCR = false;\n  }\n  decode(chunk) {\n    let text = this.decodeText(chunk);\n    if (this.trailingCR) {\n      text = '\\r' + text;\n      this.trailingCR = false;\n    }\n    if (text.endsWith('\\r')) {\n      this.trailingCR = true;\n      text = text.slice(0, -1);\n    }\n    if (!text) {\n      return [];\n    }\n    const trailingNewline = LineDecoder.NEWLINE_CHARS.has(text[text.length - 1] || '');\n    let lines = text.split(LineDecoder.NEWLINE_REGEXP);\n    // if there is a trailing new line then the last entry will be an empty\n    // string which we don't care about\n    if (trailingNewline) {\n      lines.pop();\n    }\n    if (lines.length === 1 && !trailingNewline) {\n      this.buffer.push(lines[0]);\n      return [];\n    }\n    if (this.buffer.length > 0) {\n      lines = [this.buffer.join('') + lines[0], ...lines.slice(1)];\n      this.buffer = [];\n    }\n    if (!trailingNewline) {\n      this.buffer = [lines.pop() || ''];\n    }\n    return lines;\n  }\n  decodeText(bytes) {\n    if (bytes == null) return '';\n    if (typeof bytes === 'string') return bytes;\n    // Node:\n    if (typeof Buffer !== 'undefined') {\n      if (bytes instanceof Buffer) {\n        return bytes.toString();\n      }\n      if (bytes instanceof Uint8Array) {\n        return Buffer.from(bytes).toString();\n      }\n      throw new OpenAIError(`Unexpected: received non-Uint8Array (${bytes.constructor.name}) stream chunk in an environment with a global \"Buffer\" defined, which this library assumes to be Node. Please report this error.`);\n    }\n    // Browser\n    if (typeof TextDecoder !== 'undefined') {\n      if (bytes instanceof Uint8Array || bytes instanceof ArrayBuffer) {\n        this.textDecoder ?? (this.textDecoder = new TextDecoder('utf8'));\n        return this.textDecoder.decode(bytes);\n      }\n      throw new OpenAIError(`Unexpected: received non-Uint8Array/ArrayBuffer (${bytes.constructor.name}) in a web platform. Please report this error.`);\n    }\n    throw new OpenAIError(`Unexpected: neither Buffer nor TextDecoder are available as globals. Please report this error.`);\n  }\n  flush() {\n    if (!this.buffer.length && !this.trailingCR) {\n      return [];\n    }\n    const lines = [this.buffer.join('')];\n    this.buffer = [];\n    this.trailingCR = false;\n    return lines;\n  }\n}\n// prettier-ignore\nLineDecoder.NEWLINE_CHARS = new Set(['\\n', '\\r']);\nLineDecoder.NEWLINE_REGEXP = /\\r\\n|[\\n\\r]/g;\n", "import { ReadableStream } from \"./_shims/index.mjs\";\nimport { OpenAIError } from \"./error.mjs\";\nimport { LineDecoder } from \"./internal/decoders/line.mjs\";\nimport { APIError } from 'openai/error';\nexport class Stream {\n  constructor(iterator, controller) {\n    this.iterator = iterator;\n    this.controller = controller;\n  }\n  static fromSSEResponse(response, controller) {\n    let consumed = false;\n    async function* iterator() {\n      if (consumed) {\n        throw new Error('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n      }\n      consumed = true;\n      let done = false;\n      try {\n        for await (const sse of _iterSSEMessages(response, controller)) {\n          if (done) continue;\n          if (sse.data.startsWith('[DONE]')) {\n            done = true;\n            continue;\n          }\n          if (sse.event === null) {\n            let data;\n            try {\n              data = JSON.parse(sse.data);\n            } catch (e) {\n              console.error(`Could not parse message into JSON:`, sse.data);\n              console.error(`From chunk:`, sse.raw);\n              throw e;\n            }\n            if (data && data.error) {\n              throw new APIError(undefined, data.error, undefined, undefined);\n            }\n            yield data;\n          } else {\n            let data;\n            try {\n              data = JSON.parse(sse.data);\n            } catch (e) {\n              console.error(`Could not parse message into JSON:`, sse.data);\n              console.error(`From chunk:`, sse.raw);\n              throw e;\n            }\n            // TODO: Is this where the error should be thrown?\n            if (sse.event == 'error') {\n              throw new APIError(undefined, data.error, data.message, undefined);\n            }\n            yield {\n              event: sse.event,\n              data: data\n            };\n          }\n        }\n        done = true;\n      } catch (e) {\n        // If the user calls `stream.controller.abort()`, we should exit without throwing.\n        if (e instanceof Error && e.name === 'AbortError') return;\n        throw e;\n      } finally {\n        // If the user `break`s, abort the ongoing request.\n        if (!done) controller.abort();\n      }\n    }\n    return new Stream(iterator, controller);\n  }\n  /**\n   * Generates a Stream from a newline-separated ReadableStream\n   * where each item is a JSON value.\n   */\n  static fromReadableStream(readableStream, controller) {\n    let consumed = false;\n    async function* iterLines() {\n      const lineDecoder = new LineDecoder();\n      const iter = readableStreamAsyncIterable(readableStream);\n      for await (const chunk of iter) {\n        for (const line of lineDecoder.decode(chunk)) {\n          yield line;\n        }\n      }\n      for (const line of lineDecoder.flush()) {\n        yield line;\n      }\n    }\n    async function* iterator() {\n      if (consumed) {\n        throw new Error('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n      }\n      consumed = true;\n      let done = false;\n      try {\n        for await (const line of iterLines()) {\n          if (done) continue;\n          if (line) yield JSON.parse(line);\n        }\n        done = true;\n      } catch (e) {\n        // If the user calls `stream.controller.abort()`, we should exit without throwing.\n        if (e instanceof Error && e.name === 'AbortError') return;\n        throw e;\n      } finally {\n        // If the user `break`s, abort the ongoing request.\n        if (!done) controller.abort();\n      }\n    }\n    return new Stream(iterator, controller);\n  }\n  [Symbol.asyncIterator]() {\n    return this.iterator();\n  }\n  /**\n   * Splits the stream into two streams which can be\n   * independently read from at different speeds.\n   */\n  tee() {\n    const left = [];\n    const right = [];\n    const iterator = this.iterator();\n    const teeIterator = queue => {\n      return {\n        next: () => {\n          if (queue.length === 0) {\n            const result = iterator.next();\n            left.push(result);\n            right.push(result);\n          }\n          return queue.shift();\n        }\n      };\n    };\n    return [new Stream(() => teeIterator(left), this.controller), new Stream(() => teeIterator(right), this.controller)];\n  }\n  /**\n   * Converts this stream to a newline-separated ReadableStream of\n   * JSON stringified values in the stream\n   * which can be turned back into a Stream with `Stream.fromReadableStream()`.\n   */\n  toReadableStream() {\n    const self = this;\n    let iter;\n    const encoder = new TextEncoder();\n    return new ReadableStream({\n      async start() {\n        iter = self[Symbol.asyncIterator]();\n      },\n      async pull(ctrl) {\n        try {\n          const {\n            value,\n            done\n          } = await iter.next();\n          if (done) return ctrl.close();\n          const bytes = encoder.encode(JSON.stringify(value) + '\\n');\n          ctrl.enqueue(bytes);\n        } catch (err) {\n          ctrl.error(err);\n        }\n      },\n      async cancel() {\n        await iter.return?.();\n      }\n    });\n  }\n}\nexport async function* _iterSSEMessages(response, controller) {\n  if (!response.body) {\n    controller.abort();\n    throw new OpenAIError(`Attempted to iterate over a response with no body`);\n  }\n  const sseDecoder = new SSEDecoder();\n  const lineDecoder = new LineDecoder();\n  const iter = readableStreamAsyncIterable(response.body);\n  for await (const sseChunk of iterSSEChunks(iter)) {\n    for (const line of lineDecoder.decode(sseChunk)) {\n      const sse = sseDecoder.decode(line);\n      if (sse) yield sse;\n    }\n  }\n  for (const line of lineDecoder.flush()) {\n    const sse = sseDecoder.decode(line);\n    if (sse) yield sse;\n  }\n}\n/**\n * Given an async iterable iterator, iterates over it and yields full\n * SSE chunks, i.e. yields when a double new-line is encountered.\n */\nasync function* iterSSEChunks(iterator) {\n  let data = new Uint8Array();\n  for await (const chunk of iterator) {\n    if (chunk == null) {\n      continue;\n    }\n    const binaryChunk = chunk instanceof ArrayBuffer ? new Uint8Array(chunk) : typeof chunk === 'string' ? new TextEncoder().encode(chunk) : chunk;\n    let newData = new Uint8Array(data.length + binaryChunk.length);\n    newData.set(data);\n    newData.set(binaryChunk, data.length);\n    data = newData;\n    let patternIndex;\n    while ((patternIndex = findDoubleNewlineIndex(data)) !== -1) {\n      yield data.slice(0, patternIndex);\n      data = data.slice(patternIndex);\n    }\n  }\n  if (data.length > 0) {\n    yield data;\n  }\n}\nfunction findDoubleNewlineIndex(buffer) {\n  // This function searches the buffer for the end patterns (\\r\\r, \\n\\n, \\r\\n\\r\\n)\n  // and returns the index right after the first occurrence of any pattern,\n  // or -1 if none of the patterns are found.\n  const newline = 0x0a; // \\n\n  const carriage = 0x0d; // \\r\n  for (let i = 0; i < buffer.length - 2; i++) {\n    if (buffer[i] === newline && buffer[i + 1] === newline) {\n      // \\n\\n\n      return i + 2;\n    }\n    if (buffer[i] === carriage && buffer[i + 1] === carriage) {\n      // \\r\\r\n      return i + 2;\n    }\n    if (buffer[i] === carriage && buffer[i + 1] === newline && i + 3 < buffer.length && buffer[i + 2] === carriage && buffer[i + 3] === newline) {\n      // \\r\\n\\r\\n\n      return i + 4;\n    }\n  }\n  return -1;\n}\nclass SSEDecoder {\n  constructor() {\n    this.event = null;\n    this.data = [];\n    this.chunks = [];\n  }\n  decode(line) {\n    if (line.endsWith('\\r')) {\n      line = line.substring(0, line.length - 1);\n    }\n    if (!line) {\n      // empty line and we didn't previously encounter any messages\n      if (!this.event && !this.data.length) return null;\n      const sse = {\n        event: this.event,\n        data: this.data.join('\\n'),\n        raw: this.chunks\n      };\n      this.event = null;\n      this.data = [];\n      this.chunks = [];\n      return sse;\n    }\n    this.chunks.push(line);\n    if (line.startsWith(':')) {\n      return null;\n    }\n    let [fieldname, _, value] = partition(line, ':');\n    if (value.startsWith(' ')) {\n      value = value.substring(1);\n    }\n    if (fieldname === 'event') {\n      this.event = value;\n    } else if (fieldname === 'data') {\n      this.data.push(value);\n    }\n    return null;\n  }\n}\n/** This is an internal helper function that's just used for testing */\nexport function _decodeChunks(chunks) {\n  const decoder = new LineDecoder();\n  const lines = [];\n  for (const chunk of chunks) {\n    lines.push(...decoder.decode(chunk));\n  }\n  return lines;\n}\nfunction partition(str, delimiter) {\n  const index = str.indexOf(delimiter);\n  if (index !== -1) {\n    return [str.substring(0, index), delimiter, str.substring(index + delimiter.length)];\n  }\n  return [str, '', ''];\n}\n/**\n * Most browsers don't yet have async iterable support for ReadableStream,\n * and Node has a very different way of reading bytes from its \"ReadableStream\".\n *\n * This polyfill was pulled from https://github.com/MattiasBuelens/web-streams-polyfill/pull/122#issuecomment-1627354490\n */\nexport function readableStreamAsyncIterable(stream) {\n  if (stream[Symbol.asyncIterator]) return stream;\n  const reader = stream.getReader();\n  return {\n    async next() {\n      try {\n        const result = await reader.read();\n        if (result?.done) reader.releaseLock(); // release lock when stream becomes closed\n        return result;\n      } catch (e) {\n        reader.releaseLock(); // release lock when stream becomes errored\n        throw e;\n      }\n    },\n    async return() {\n      const cancelPromise = reader.cancel();\n      reader.releaseLock();\n      await cancelPromise;\n      return {\n        done: true,\n        value: undefined\n      };\n    },\n    [Symbol.asyncIterator]() {\n      return this;\n    }\n  };\n}\n", "import { FormData, File, getMultipartRequestOptions, isFsReadStream } from \"./_shims/index.mjs\";\nexport { fileFromPath } from \"./_shims/index.mjs\";\nexport const isResponseLike = value => value != null && typeof value === 'object' && typeof value.url === 'string' && typeof value.blob === 'function';\nexport const isFileLike = value => value != null && typeof value === 'object' && typeof value.name === 'string' && typeof value.lastModified === 'number' && isBlobLike(value);\n/**\n * The BlobLike type omits arrayBuffer() because @types/node-fetch@^2.6.4 lacks it; but this check\n * adds the arrayBuffer() method type because it is available and used at runtime\n */\nexport const isBlobLike = value => value != null && typeof value === 'object' && typeof value.size === 'number' && typeof value.type === 'string' && typeof value.text === 'function' && typeof value.slice === 'function' && typeof value.arrayBuffer === 'function';\nexport const isUploadable = value => {\n  return isFileLike(value) || isResponseLike(value) || isFsReadStream(value);\n};\n/**\n * Helper for creating a {@link File} to pass to an SDK upload method from a variety of different data formats\n * @param value the raw content of the file.  Can be an {@link Uploadable}, {@link BlobLikePart}, or {@link AsyncIterable} of {@link BlobLikePart}s\n * @param {string=} name the name of the file. If omitted, toFile will try to determine a file name from bits if possible\n * @param {Object=} options additional properties\n * @param {string=} options.type the MIME type of the content\n * @param {number=} options.lastModified the last modified timestamp\n * @returns a {@link File} with the given properties\n */\nexport async function toFile(value, name, options) {\n  // If it's a promise, resolve it.\n  value = await value;\n  // If we've been given a `File` we don't need to do anything\n  if (isFileLike(value)) {\n    return value;\n  }\n  if (isResponseLike(value)) {\n    const blob = await value.blob();\n    name || (name = new URL(value.url).pathname.split(/[\\\\/]/).pop() ?? 'unknown_file');\n    // we need to convert the `Blob` into an array buffer because the `Blob` class\n    // that `node-fetch` defines is incompatible with the web standard which results\n    // in `new File` interpreting it as a string instead of binary data.\n    const data = isBlobLike(blob) ? [await blob.arrayBuffer()] : [blob];\n    return new File(data, name, options);\n  }\n  const bits = await getBytes(value);\n  name || (name = getName(value) ?? 'unknown_file');\n  if (!options?.type) {\n    const type = bits[0]?.type;\n    if (typeof type === 'string') {\n      options = {\n        ...options,\n        type\n      };\n    }\n  }\n  return new File(bits, name, options);\n}\nasync function getBytes(value) {\n  let parts = [];\n  if (typeof value === 'string' || ArrayBuffer.isView(value) ||\n  // includes Uint8Array, Buffer, etc.\n  value instanceof ArrayBuffer) {\n    parts.push(value);\n  } else if (isBlobLike(value)) {\n    parts.push(await value.arrayBuffer());\n  } else if (isAsyncIterableIterator(value) // includes Readable, ReadableStream, etc.\n  ) {\n    for await (const chunk of value) {\n      parts.push(chunk); // TODO, consider validating?\n    }\n  } else {\n    throw new Error(`Unexpected data type: ${typeof value}; constructor: ${value?.constructor?.name}; props: ${propsForError(value)}`);\n  }\n  return parts;\n}\nfunction propsForError(value) {\n  const props = Object.getOwnPropertyNames(value);\n  return `[${props.map(p => `\"${p}\"`).join(', ')}]`;\n}\nfunction getName(value) {\n  return getStringFromMaybeBuffer(value.name) || getStringFromMaybeBuffer(value.filename) ||\n  // For fs.ReadStream\n  getStringFromMaybeBuffer(value.path)?.split(/[\\\\/]/).pop();\n}\nconst getStringFromMaybeBuffer = x => {\n  if (typeof x === 'string') return x;\n  if (typeof Buffer !== 'undefined' && x instanceof Buffer) return String(x);\n  return undefined;\n};\nconst isAsyncIterableIterator = value => value != null && typeof value === 'object' && typeof value[Symbol.asyncIterator] === 'function';\nexport const isMultipartBody = body => body && typeof body === 'object' && body.body && body[Symbol.toStringTag] === 'MultipartBody';\n/**\n * Returns a multipart/form-data request if any part of the given request body contains a File / Blob value.\n * Otherwise returns the request as is.\n */\nexport const maybeMultipartFormRequestOptions = async opts => {\n  if (!hasUploadableValue(opts.body)) return opts;\n  const form = await createForm(opts.body);\n  return getMultipartRequestOptions(form, opts);\n};\nexport const multipartFormRequestOptions = async opts => {\n  const form = await createForm(opts.body);\n  return getMultipartRequestOptions(form, opts);\n};\nexport const createForm = async body => {\n  const form = new FormData();\n  await Promise.all(Object.entries(body || {}).map(([key, value]) => addFormValue(form, key, value)));\n  return form;\n};\nconst hasUploadableValue = value => {\n  if (isUploadable(value)) return true;\n  if (Array.isArray(value)) return value.some(hasUploadableValue);\n  if (value && typeof value === 'object') {\n    for (const k in value) {\n      if (hasUploadableValue(value[k])) return true;\n    }\n  }\n  return false;\n};\nconst addFormValue = async (form, key, value) => {\n  if (value === undefined) return;\n  if (value == null) {\n    throw new TypeError(`Received null for \"${key}\"; to pass null in FormData, you must use the string 'null'`);\n  }\n  // TODO: make nested formats configurable\n  if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n    form.append(key, String(value));\n  } else if (isUploadable(value)) {\n    const file = await toFile(value);\n    form.append(key, file);\n  } else if (Array.isArray(value)) {\n    await Promise.all(value.map(entry => addFormValue(form, key + '[]', entry)));\n  } else if (typeof value === 'object') {\n    await Promise.all(Object.entries(value).map(([name, prop]) => addFormValue(form, `${key}[${name}]`, prop)));\n  } else {\n    throw new TypeError(`Invalid value given to form, expected a string, number, boolean, object, Array, File or Blob but got ${value} instead`);\n  }\n};\n", "var __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AbstractPage_client;\nimport { VERSION } from \"./version.mjs\";\nimport { Stream } from \"./streaming.mjs\";\nimport { OpenAIError, APIError, APIConnectionError, APIConnectionTimeoutError, APIUserAbortError } from \"./error.mjs\";\nimport { kind as shimsKind, getDefaultAgent, fetch } from \"./_shims/index.mjs\";\nimport { isBlobLike, isMultipartBody } from \"./uploads.mjs\";\nexport { maybeMultipartFormRequestOptions, multipartFormRequestOptions, createForm } from \"./uploads.mjs\";\nasync function defaultParseResponse(props) {\n  const {\n    response\n  } = props;\n  if (props.options.stream) {\n    debug('response', response.status, response.url, response.headers, response.body);\n    // Note: there is an invariant here that isn't represented in the type system\n    // that if you set `stream: true` the response type must also be `Stream<T>`\n    if (props.options.__streamClass) {\n      return props.options.__streamClass.fromSSEResponse(response, props.controller);\n    }\n    return Stream.fromSSEResponse(response, props.controller);\n  }\n  // fetch refuses to read the body when the status code is 204.\n  if (response.status === 204) {\n    return null;\n  }\n  if (props.options.__binaryResponse) {\n    return response;\n  }\n  const contentType = response.headers.get('content-type');\n  const isJSON = contentType?.includes('application/json') || contentType?.includes('application/vnd.api+json');\n  if (isJSON) {\n    const json = await response.json();\n    debug('response', response.status, response.url, response.headers, json);\n    return _addRequestID(json, response);\n  }\n  const text = await response.text();\n  debug('response', response.status, response.url, response.headers, text);\n  // TODO handle blob, arraybuffer, other content types, etc.\n  return text;\n}\nfunction _addRequestID(value, response) {\n  if (!value || typeof value !== 'object' || Array.isArray(value)) {\n    return value;\n  }\n  return Object.defineProperty(value, '_request_id', {\n    value: response.headers.get('x-request-id'),\n    enumerable: false\n  });\n}\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */\nexport class APIPromise extends Promise {\n  constructor(responsePromise, parseResponse = defaultParseResponse) {\n    super(resolve => {\n      // this is maybe a bit weird but this has to be a no-op to not implicitly\n      // parse the response body; instead .then, .catch, .finally are overridden\n      // to parse the response\n      resolve(null);\n    });\n    this.responsePromise = responsePromise;\n    this.parseResponse = parseResponse;\n  }\n  _thenUnwrap(transform) {\n    return new APIPromise(this.responsePromise, async props => _addRequestID(transform(await this.parseResponse(props), props), props.response));\n  }\n  /**\n   * Gets the raw `Response` instance instead of parsing the response\n   * data.\n   *\n   * If you want to parse the response body but still get the `Response`\n   * instance, you can use {@link withResponse()}.\n   *\n   * ðŸ‘‹ Getting the wrong TypeScript type for `Response`?\n   * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n   * or add one of these imports before your first `import â€¦ from 'openai'`:\n   * - `import 'openai/shims/node'` (if you're running on Node)\n   * - `import 'openai/shims/web'` (otherwise)\n   */\n  asResponse() {\n    return this.responsePromise.then(p => p.response);\n  }\n  /**\n   * Gets the parsed response data, the raw `Response` instance and the ID of the request,\n   * returned via the X-Request-ID header which is useful for debugging requests and reporting\n   * issues to OpenAI.\n   *\n   * If you just want to get the raw `Response` instance without parsing it,\n   * you can use {@link asResponse()}.\n   *\n   *\n   * ðŸ‘‹ Getting the wrong TypeScript type for `Response`?\n   * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n   * or add one of these imports before your first `import â€¦ from 'openai'`:\n   * - `import 'openai/shims/node'` (if you're running on Node)\n   * - `import 'openai/shims/web'` (otherwise)\n   */\n  async withResponse() {\n    const [data, response] = await Promise.all([this.parse(), this.asResponse()]);\n    return {\n      data,\n      response,\n      request_id: response.headers.get('x-request-id')\n    };\n  }\n  parse() {\n    if (!this.parsedPromise) {\n      this.parsedPromise = this.responsePromise.then(this.parseResponse);\n    }\n    return this.parsedPromise;\n  }\n  then(onfulfilled, onrejected) {\n    return this.parse().then(onfulfilled, onrejected);\n  }\n  catch(onrejected) {\n    return this.parse().catch(onrejected);\n  }\n  finally(onfinally) {\n    return this.parse().finally(onfinally);\n  }\n}\nexport class APIClient {\n  constructor({\n    baseURL,\n    maxRetries = 2,\n    timeout = 600000,\n    // 10 minutes\n    httpAgent,\n    fetch: overridenFetch\n  }) {\n    this.baseURL = baseURL;\n    this.maxRetries = validatePositiveInteger('maxRetries', maxRetries);\n    this.timeout = validatePositiveInteger('timeout', timeout);\n    this.httpAgent = httpAgent;\n    this.fetch = overridenFetch ?? fetch;\n  }\n  authHeaders(opts) {\n    return {};\n  }\n  /**\n   * Override this to add your own default headers, for example:\n   *\n   *  {\n   *    ...super.defaultHeaders(),\n   *    Authorization: 'Bearer 123',\n   *  }\n   */\n  defaultHeaders(opts) {\n    return {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      'User-Agent': this.getUserAgent(),\n      ...getPlatformHeaders(),\n      ...this.authHeaders(opts)\n    };\n  }\n  /**\n   * Override this to add your own headers validation:\n   */\n  validateHeaders(headers, customHeaders) {}\n  defaultIdempotencyKey() {\n    return `stainless-node-retry-${uuid4()}`;\n  }\n  get(path, opts) {\n    return this.methodRequest('get', path, opts);\n  }\n  post(path, opts) {\n    return this.methodRequest('post', path, opts);\n  }\n  patch(path, opts) {\n    return this.methodRequest('patch', path, opts);\n  }\n  put(path, opts) {\n    return this.methodRequest('put', path, opts);\n  }\n  delete(path, opts) {\n    return this.methodRequest('delete', path, opts);\n  }\n  methodRequest(method, path, opts) {\n    return this.request(Promise.resolve(opts).then(async opts => {\n      const body = opts && isBlobLike(opts?.body) ? new DataView(await opts.body.arrayBuffer()) : opts?.body instanceof DataView ? opts.body : opts?.body instanceof ArrayBuffer ? new DataView(opts.body) : opts && ArrayBuffer.isView(opts?.body) ? new DataView(opts.body.buffer) : opts?.body;\n      return {\n        method,\n        path,\n        ...opts,\n        body\n      };\n    }));\n  }\n  getAPIList(path, Page, opts) {\n    return this.requestAPIList(Page, {\n      method: 'get',\n      path,\n      ...opts\n    });\n  }\n  calculateContentLength(body) {\n    if (typeof body === 'string') {\n      if (typeof Buffer !== 'undefined') {\n        return Buffer.byteLength(body, 'utf8').toString();\n      }\n      if (typeof TextEncoder !== 'undefined') {\n        const encoder = new TextEncoder();\n        const encoded = encoder.encode(body);\n        return encoded.length.toString();\n      }\n    } else if (ArrayBuffer.isView(body)) {\n      return body.byteLength.toString();\n    }\n    return null;\n  }\n  buildRequest(options, {\n    retryCount = 0\n  } = {}) {\n    const {\n      method,\n      path,\n      query,\n      headers = {}\n    } = options;\n    const body = ArrayBuffer.isView(options.body) || options.__binaryRequest && typeof options.body === 'string' ? options.body : isMultipartBody(options.body) ? options.body.body : options.body ? JSON.stringify(options.body, null, 2) : null;\n    const contentLength = this.calculateContentLength(body);\n    const url = this.buildURL(path, query);\n    if ('timeout' in options) validatePositiveInteger('timeout', options.timeout);\n    const timeout = options.timeout ?? this.timeout;\n    const httpAgent = options.httpAgent ?? this.httpAgent ?? getDefaultAgent(url);\n    const minAgentTimeout = timeout + 1000;\n    if (typeof httpAgent?.options?.timeout === 'number' && minAgentTimeout > (httpAgent.options.timeout ?? 0)) {\n      // Allow any given request to bump our agent active socket timeout.\n      // This may seem strange, but leaking active sockets should be rare and not particularly problematic,\n      // and without mutating agent we would need to create more of them.\n      // This tradeoff optimizes for performance.\n      httpAgent.options.timeout = minAgentTimeout;\n    }\n    if (this.idempotencyHeader && method !== 'get') {\n      if (!options.idempotencyKey) options.idempotencyKey = this.defaultIdempotencyKey();\n      headers[this.idempotencyHeader] = options.idempotencyKey;\n    }\n    const reqHeaders = this.buildHeaders({\n      options,\n      headers,\n      contentLength,\n      retryCount\n    });\n    const req = {\n      method,\n      ...(body && {\n        body: body\n      }),\n      headers: reqHeaders,\n      ...(httpAgent && {\n        agent: httpAgent\n      }),\n      // @ts-ignore node-fetch uses a custom AbortSignal type that is\n      // not compatible with standard web types\n      signal: options.signal ?? null\n    };\n    return {\n      req,\n      url,\n      timeout\n    };\n  }\n  buildHeaders({\n    options,\n    headers,\n    contentLength,\n    retryCount\n  }) {\n    const reqHeaders = {};\n    if (contentLength) {\n      reqHeaders['content-length'] = contentLength;\n    }\n    const defaultHeaders = this.defaultHeaders(options);\n    applyHeadersMut(reqHeaders, defaultHeaders);\n    applyHeadersMut(reqHeaders, headers);\n    // let builtin fetch set the Content-Type for multipart bodies\n    if (isMultipartBody(options.body) && shimsKind !== 'node') {\n      delete reqHeaders['content-type'];\n    }\n    // Don't set the retry count header if it was already set or removed through default headers or by the\n    // caller. We check `defaultHeaders` and `headers`, which can contain nulls, instead of `reqHeaders` to\n    // account for the removal case.\n    if (getHeader(defaultHeaders, 'x-stainless-retry-count') === undefined && getHeader(headers, 'x-stainless-retry-count') === undefined) {\n      reqHeaders['x-stainless-retry-count'] = String(retryCount);\n    }\n    this.validateHeaders(reqHeaders, headers);\n    return reqHeaders;\n  }\n  /**\n   * Used as a callback for mutating the given `FinalRequestOptions` object.\n   */\n  async prepareOptions(options) {}\n  /**\n   * Used as a callback for mutating the given `RequestInit` object.\n   *\n   * This is useful for cases where you want to add certain headers based off of\n   * the request properties, e.g. `method` or `url`.\n   */\n  async prepareRequest(request, {\n    url,\n    options\n  }) {}\n  parseHeaders(headers) {\n    return !headers ? {} : Symbol.iterator in headers ? Object.fromEntries(Array.from(headers).map(header => [...header])) : {\n      ...headers\n    };\n  }\n  makeStatusError(status, error, message, headers) {\n    return APIError.generate(status, error, message, headers);\n  }\n  request(options, remainingRetries = null) {\n    return new APIPromise(this.makeRequest(options, remainingRetries));\n  }\n  async makeRequest(optionsInput, retriesRemaining) {\n    const options = await optionsInput;\n    const maxRetries = options.maxRetries ?? this.maxRetries;\n    if (retriesRemaining == null) {\n      retriesRemaining = maxRetries;\n    }\n    await this.prepareOptions(options);\n    const {\n      req,\n      url,\n      timeout\n    } = this.buildRequest(options, {\n      retryCount: maxRetries - retriesRemaining\n    });\n    await this.prepareRequest(req, {\n      url,\n      options\n    });\n    debug('request', url, options, req.headers);\n    if (options.signal?.aborted) {\n      throw new APIUserAbortError();\n    }\n    const controller = new AbortController();\n    const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(castToError);\n    if (response instanceof Error) {\n      if (options.signal?.aborted) {\n        throw new APIUserAbortError();\n      }\n      if (retriesRemaining) {\n        return this.retryRequest(options, retriesRemaining);\n      }\n      if (response.name === 'AbortError') {\n        throw new APIConnectionTimeoutError();\n      }\n      throw new APIConnectionError({\n        cause: response\n      });\n    }\n    const responseHeaders = createResponseHeaders(response.headers);\n    if (!response.ok) {\n      if (retriesRemaining && this.shouldRetry(response)) {\n        const retryMessage = `retrying, ${retriesRemaining} attempts remaining`;\n        debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders);\n        return this.retryRequest(options, retriesRemaining, responseHeaders);\n      }\n      const errText = await response.text().catch(e => castToError(e).message);\n      const errJSON = safeJSON(errText);\n      const errMessage = errJSON ? undefined : errText;\n      const retryMessage = retriesRemaining ? `(error; no more retries left)` : `(error; not retryable)`;\n      debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders, errMessage);\n      const err = this.makeStatusError(response.status, errJSON, errMessage, responseHeaders);\n      throw err;\n    }\n    return {\n      response,\n      options,\n      controller\n    };\n  }\n  requestAPIList(Page, options) {\n    const request = this.makeRequest(options, null);\n    return new PagePromise(this, request, Page);\n  }\n  buildURL(path, query) {\n    const url = isAbsoluteURL(path) ? new URL(path) : new URL(this.baseURL + (this.baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\n    const defaultQuery = this.defaultQuery();\n    if (!isEmptyObj(defaultQuery)) {\n      query = {\n        ...defaultQuery,\n        ...query\n      };\n    }\n    if (typeof query === 'object' && query && !Array.isArray(query)) {\n      url.search = this.stringifyQuery(query);\n    }\n    return url.toString();\n  }\n  stringifyQuery(query) {\n    return Object.entries(query).filter(([_, value]) => typeof value !== 'undefined').map(([key, value]) => {\n      if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n      }\n      if (value === null) {\n        return `${encodeURIComponent(key)}=`;\n      }\n      throw new OpenAIError(`Cannot stringify type ${typeof value}; Expected string, number, boolean, or null. If you need to pass nested query parameters, you can manually encode them, e.g. { query: { 'foo[key1]': value1, 'foo[key2]': value2 } }, and please open a GitHub issue requesting better support for your use case.`);\n    }).join('&');\n  }\n  async fetchWithTimeout(url, init, ms, controller) {\n    const {\n      signal,\n      ...options\n    } = init || {};\n    if (signal) signal.addEventListener('abort', () => controller.abort());\n    const timeout = setTimeout(() => controller.abort(), ms);\n    return this.getRequestClient()\n    // use undefined this binding; fetch errors if bound to something else in browser/cloudflare\n    .fetch.call(undefined, url, {\n      signal: controller.signal,\n      ...options\n    }).finally(() => {\n      clearTimeout(timeout);\n    });\n  }\n  getRequestClient() {\n    return {\n      fetch: this.fetch\n    };\n  }\n  shouldRetry(response) {\n    // Note this is not a standard header.\n    const shouldRetryHeader = response.headers.get('x-should-retry');\n    // If the server explicitly says whether or not to retry, obey.\n    if (shouldRetryHeader === 'true') return true;\n    if (shouldRetryHeader === 'false') return false;\n    // Retry on request timeouts.\n    if (response.status === 408) return true;\n    // Retry on lock timeouts.\n    if (response.status === 409) return true;\n    // Retry on rate limits.\n    if (response.status === 429) return true;\n    // Retry internal errors.\n    if (response.status >= 500) return true;\n    return false;\n  }\n  async retryRequest(options, retriesRemaining, responseHeaders) {\n    let timeoutMillis;\n    // Note the `retry-after-ms` header may not be standard, but is a good idea and we'd like proactive support for it.\n    const retryAfterMillisHeader = responseHeaders?.['retry-after-ms'];\n    if (retryAfterMillisHeader) {\n      const timeoutMs = parseFloat(retryAfterMillisHeader);\n      if (!Number.isNaN(timeoutMs)) {\n        timeoutMillis = timeoutMs;\n      }\n    }\n    // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n    const retryAfterHeader = responseHeaders?.['retry-after'];\n    if (retryAfterHeader && !timeoutMillis) {\n      const timeoutSeconds = parseFloat(retryAfterHeader);\n      if (!Number.isNaN(timeoutSeconds)) {\n        timeoutMillis = timeoutSeconds * 1000;\n      } else {\n        timeoutMillis = Date.parse(retryAfterHeader) - Date.now();\n      }\n    }\n    // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n    // just do what it says, but otherwise calculate a default\n    if (!(timeoutMillis && 0 <= timeoutMillis && timeoutMillis < 60 * 1000)) {\n      const maxRetries = options.maxRetries ?? this.maxRetries;\n      timeoutMillis = this.calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries);\n    }\n    await sleep(timeoutMillis);\n    return this.makeRequest(options, retriesRemaining - 1);\n  }\n  calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries) {\n    const initialRetryDelay = 0.5;\n    const maxRetryDelay = 8.0;\n    const numRetries = maxRetries - retriesRemaining;\n    // Apply exponential backoff, but not more than the max.\n    const sleepSeconds = Math.min(initialRetryDelay * Math.pow(2, numRetries), maxRetryDelay);\n    // Apply some jitter, take up to at most 25 percent of the retry time.\n    const jitter = 1 - Math.random() * 0.25;\n    return sleepSeconds * jitter * 1000;\n  }\n  getUserAgent() {\n    return `${this.constructor.name}/JS ${VERSION}`;\n  }\n}\nexport class AbstractPage {\n  constructor(client, response, body, options) {\n    _AbstractPage_client.set(this, void 0);\n    __classPrivateFieldSet(this, _AbstractPage_client, client, \"f\");\n    this.options = options;\n    this.response = response;\n    this.body = body;\n  }\n  hasNextPage() {\n    const items = this.getPaginatedItems();\n    if (!items.length) return false;\n    return this.nextPageInfo() != null;\n  }\n  async getNextPage() {\n    const nextInfo = this.nextPageInfo();\n    if (!nextInfo) {\n      throw new OpenAIError('No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.');\n    }\n    const nextOptions = {\n      ...this.options\n    };\n    if ('params' in nextInfo && typeof nextOptions.query === 'object') {\n      nextOptions.query = {\n        ...nextOptions.query,\n        ...nextInfo.params\n      };\n    } else if ('url' in nextInfo) {\n      const params = [...Object.entries(nextOptions.query || {}), ...nextInfo.url.searchParams.entries()];\n      for (const [key, value] of params) {\n        nextInfo.url.searchParams.set(key, value);\n      }\n      nextOptions.query = undefined;\n      nextOptions.path = nextInfo.url.toString();\n    }\n    return await __classPrivateFieldGet(this, _AbstractPage_client, \"f\").requestAPIList(this.constructor, nextOptions);\n  }\n  async *iterPages() {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let page = this;\n    yield page;\n    while (page.hasNextPage()) {\n      page = await page.getNextPage();\n      yield page;\n    }\n  }\n  async *[(_AbstractPage_client = new WeakMap(), Symbol.asyncIterator)]() {\n    for await (const page of this.iterPages()) {\n      for (const item of page.getPaginatedItems()) {\n        yield item;\n      }\n    }\n  }\n}\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */\nexport class PagePromise extends APIPromise {\n  constructor(client, request, Page) {\n    super(request, async props => new Page(client, props.response, await defaultParseResponse(props), props.options));\n  }\n  /**\n   * Allow auto-paginating iteration on an unawaited list call, eg:\n   *\n   *    for await (const item of client.items.list()) {\n   *      console.log(item)\n   *    }\n   */\n  async *[Symbol.asyncIterator]() {\n    const page = await this;\n    for await (const item of page) {\n      yield item;\n    }\n  }\n}\nexport const createResponseHeaders = headers => {\n  return new Proxy(Object.fromEntries(\n  // @ts-ignore\n  headers.entries()), {\n    get(target, name) {\n      const key = name.toString();\n      return target[key.toLowerCase()] || target[key];\n    }\n  });\n};\n// This is required so that we can determine if a given object matches the RequestOptions\n// type at runtime. While this requires duplication, it is enforced by the TypeScript\n// compiler such that any missing / extraneous keys will cause an error.\nconst requestOptionsKeys = {\n  method: true,\n  path: true,\n  query: true,\n  body: true,\n  headers: true,\n  maxRetries: true,\n  stream: true,\n  timeout: true,\n  httpAgent: true,\n  signal: true,\n  idempotencyKey: true,\n  __binaryRequest: true,\n  __binaryResponse: true,\n  __streamClass: true\n};\nexport const isRequestOptions = obj => {\n  return typeof obj === 'object' && obj !== null && !isEmptyObj(obj) && Object.keys(obj).every(k => hasOwn(requestOptionsKeys, k));\n};\nconst getPlatformProperties = () => {\n  if (typeof Deno !== 'undefined' && Deno.build != null) {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': normalizePlatform(Deno.build.os),\n      'X-Stainless-Arch': normalizeArch(Deno.build.arch),\n      'X-Stainless-Runtime': 'deno',\n      'X-Stainless-Runtime-Version': typeof Deno.version === 'string' ? Deno.version : Deno.version?.deno ?? 'unknown'\n    };\n  }\n  if (typeof EdgeRuntime !== 'undefined') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': 'Unknown',\n      'X-Stainless-Arch': `other:${EdgeRuntime}`,\n      'X-Stainless-Runtime': 'edge',\n      'X-Stainless-Runtime-Version': process.version\n    };\n  }\n  // Check if Node.js\n  if (Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': normalizePlatform(process.platform),\n      'X-Stainless-Arch': normalizeArch(process.arch),\n      'X-Stainless-Runtime': 'node',\n      'X-Stainless-Runtime-Version': process.version\n    };\n  }\n  const browserInfo = getBrowserInfo();\n  if (browserInfo) {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': 'Unknown',\n      'X-Stainless-Arch': 'unknown',\n      'X-Stainless-Runtime': `browser:${browserInfo.browser}`,\n      'X-Stainless-Runtime-Version': browserInfo.version\n    };\n  }\n  // TODO add support for Cloudflare workers, etc.\n  return {\n    'X-Stainless-Lang': 'js',\n    'X-Stainless-Package-Version': VERSION,\n    'X-Stainless-OS': 'Unknown',\n    'X-Stainless-Arch': 'unknown',\n    'X-Stainless-Runtime': 'unknown',\n    'X-Stainless-Runtime-Version': 'unknown'\n  };\n};\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo() {\n  if (typeof navigator === 'undefined' || !navigator) {\n    return null;\n  }\n  // NOTE: The order matters here!\n  const browserPatterns = [{\n    key: 'edge',\n    pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'ie',\n    pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'ie',\n    pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'chrome',\n    pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'firefox',\n    pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'safari',\n    pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/\n  }];\n  // Find the FIRST matching browser\n  for (const {\n    key,\n    pattern\n  } of browserPatterns) {\n    const match = pattern.exec(navigator.userAgent);\n    if (match) {\n      const major = match[1] || 0;\n      const minor = match[2] || 0;\n      const patch = match[3] || 0;\n      return {\n        browser: key,\n        version: `${major}.${minor}.${patch}`\n      };\n    }\n  }\n  return null;\n}\nconst normalizeArch = arch => {\n  // Node docs:\n  // - https://nodejs.org/api/process.html#processarch\n  // Deno docs:\n  // - https://doc.deno.land/deno/stable/~/Deno.build\n  if (arch === 'x32') return 'x32';\n  if (arch === 'x86_64' || arch === 'x64') return 'x64';\n  if (arch === 'arm') return 'arm';\n  if (arch === 'aarch64' || arch === 'arm64') return 'arm64';\n  if (arch) return `other:${arch}`;\n  return 'unknown';\n};\nconst normalizePlatform = platform => {\n  // Node platforms:\n  // - https://nodejs.org/api/process.html#processplatform\n  // Deno platforms:\n  // - https://doc.deno.land/deno/stable/~/Deno.build\n  // - https://github.com/denoland/deno/issues/14799\n  platform = platform.toLowerCase();\n  // NOTE: this iOS check is untested and may not work\n  // Node does not work natively on IOS, there is a fork at\n  // https://github.com/nodejs-mobile/nodejs-mobile\n  // however it is unknown at the time of writing how to detect if it is running\n  if (platform.includes('ios')) return 'iOS';\n  if (platform === 'android') return 'Android';\n  if (platform === 'darwin') return 'MacOS';\n  if (platform === 'win32') return 'Windows';\n  if (platform === 'freebsd') return 'FreeBSD';\n  if (platform === 'openbsd') return 'OpenBSD';\n  if (platform === 'linux') return 'Linux';\n  if (platform) return `Other:${platform}`;\n  return 'Unknown';\n};\nlet _platformHeaders;\nconst getPlatformHeaders = () => {\n  return _platformHeaders ?? (_platformHeaders = getPlatformProperties());\n};\nexport const safeJSON = text => {\n  try {\n    return JSON.parse(text);\n  } catch (err) {\n    return undefined;\n  }\n};\n// https://stackoverflow.com/a/19709846\nconst startsWithSchemeRegexp = new RegExp('^(?:[a-z]+:)?//', 'i');\nconst isAbsoluteURL = url => {\n  return startsWithSchemeRegexp.test(url);\n};\nexport const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\nconst validatePositiveInteger = (name, n) => {\n  if (typeof n !== 'number' || !Number.isInteger(n)) {\n    throw new OpenAIError(`${name} must be an integer`);\n  }\n  if (n < 0) {\n    throw new OpenAIError(`${name} must be a positive integer`);\n  }\n  return n;\n};\nexport const castToError = err => {\n  if (err instanceof Error) return err;\n  if (typeof err === 'object' && err !== null) {\n    try {\n      return new Error(JSON.stringify(err));\n    } catch {}\n  }\n  return new Error(err);\n};\nexport const ensurePresent = value => {\n  if (value == null) throw new OpenAIError(`Expected a value to be given but received ${value} instead.`);\n  return value;\n};\n/**\n * Read an environment variable.\n *\n * Trims beginning and trailing whitespace.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */\nexport const readEnv = env => {\n  if (typeof process !== 'undefined') {\n    return process.env?.[env]?.trim() ?? undefined;\n  }\n  if (typeof Deno !== 'undefined') {\n    return Deno.env?.get?.(env)?.trim();\n  }\n  return undefined;\n};\nexport const coerceInteger = value => {\n  if (typeof value === 'number') return Math.round(value);\n  if (typeof value === 'string') return parseInt(value, 10);\n  throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceFloat = value => {\n  if (typeof value === 'number') return value;\n  if (typeof value === 'string') return parseFloat(value);\n  throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceBoolean = value => {\n  if (typeof value === 'boolean') return value;\n  if (typeof value === 'string') return value === 'true';\n  return Boolean(value);\n};\nexport const maybeCoerceInteger = value => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceInteger(value);\n};\nexport const maybeCoerceFloat = value => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceFloat(value);\n};\nexport const maybeCoerceBoolean = value => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceBoolean(value);\n};\n// https://stackoverflow.com/a/34491287\nexport function isEmptyObj(obj) {\n  if (!obj) return true;\n  for (const _k in obj) return false;\n  return true;\n}\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nexport function hasOwn(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n/**\n * Copies headers from \"newHeaders\" onto \"targetHeaders\",\n * using lower-case for all properties,\n * ignoring any keys with undefined values,\n * and deleting any keys with null values.\n */\nfunction applyHeadersMut(targetHeaders, newHeaders) {\n  for (const k in newHeaders) {\n    if (!hasOwn(newHeaders, k)) continue;\n    const lowerKey = k.toLowerCase();\n    if (!lowerKey) continue;\n    const val = newHeaders[k];\n    if (val === null) {\n      delete targetHeaders[lowerKey];\n    } else if (val !== undefined) {\n      targetHeaders[lowerKey] = val;\n    }\n  }\n}\nexport function debug(action, ...args) {\n  if (typeof process !== 'undefined' && process?.env?.['DEBUG'] === 'true') {\n    console.log(`OpenAI:DEBUG:${action}`, ...args);\n  }\n}\n/**\n * https://stackoverflow.com/a/2117523\n */\nconst uuid4 = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = Math.random() * 16 | 0;\n    const v = c === 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n};\nexport const isRunningInBrowser = () => {\n  return (\n    // @ts-ignore\n    typeof window !== 'undefined' &&\n    // @ts-ignore\n    typeof window.document !== 'undefined' &&\n    // @ts-ignore\n    typeof navigator !== 'undefined'\n  );\n};\nexport const isHeadersProtocol = headers => {\n  return typeof headers?.get === 'function';\n};\nexport const getRequiredHeader = (headers, header) => {\n  const foundHeader = getHeader(headers, header);\n  if (foundHeader === undefined) {\n    throw new Error(`Could not find ${header} header`);\n  }\n  return foundHeader;\n};\nexport const getHeader = (headers, header) => {\n  const lowerCasedHeader = header.toLowerCase();\n  if (isHeadersProtocol(headers)) {\n    // to deal with the case where the header looks like Stainless-Event-Id\n    const intercapsHeader = header[0]?.toUpperCase() + header.substring(1).replace(/([^\\w])(\\w)/g, (_m, g1, g2) => g1 + g2.toUpperCase());\n    for (const key of [header, lowerCasedHeader, header.toUpperCase(), intercapsHeader]) {\n      const value = headers.get(key);\n      if (value) {\n        return value;\n      }\n    }\n  }\n  for (const [key, value] of Object.entries(headers)) {\n    if (key.toLowerCase() === lowerCasedHeader) {\n      if (Array.isArray(value)) {\n        if (value.length <= 1) return value[0];\n        console.warn(`Received ${value.length} entries for the ${header} header, using the first entry.`);\n        return value[0];\n      }\n      return value;\n    }\n  }\n  return undefined;\n};\n/**\n * Encodes a string to Base64 format.\n */\nexport const toBase64 = str => {\n  if (!str) return '';\n  if (typeof Buffer !== 'undefined') {\n    return Buffer.from(str).toString('base64');\n  }\n  if (typeof btoa !== 'undefined') {\n    return btoa(str);\n  }\n  throw new OpenAIError('Cannot generate b64 string; Expected `Buffer` or `btoa` to be defined');\n};\nexport function isObj(obj) {\n  return obj != null && typeof obj === 'object' && !Array.isArray(obj);\n}\n", "export const default_format = 'RFC3986';\nexport const formatters = {\n  RFC1738: v => String(v).replace(/%20/g, '+'),\n  RFC3986: v => String(v)\n};\nexport const RFC1738 = 'RFC1738';\nexport const RFC3986 = 'RFC3986';\n", "import { RFC1738 } from \"./formats.mjs\";\nconst has = Object.prototype.hasOwnProperty;\nconst is_array = Array.isArray;\nconst hex_table = (() => {\n  const array = [];\n  for (let i = 0; i < 256; ++i) {\n    array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n  }\n  return array;\n})();\nfunction compact_queue(queue) {\n  while (queue.length > 1) {\n    const item = queue.pop();\n    if (!item) continue;\n    const obj = item.obj[item.prop];\n    if (is_array(obj)) {\n      const compacted = [];\n      for (let j = 0; j < obj.length; ++j) {\n        if (typeof obj[j] !== 'undefined') {\n          compacted.push(obj[j]);\n        }\n      }\n      // @ts-ignore\n      item.obj[item.prop] = compacted;\n    }\n  }\n}\nfunction array_to_object(source, options) {\n  const obj = options && options.plainObjects ? Object.create(null) : {};\n  for (let i = 0; i < source.length; ++i) {\n    if (typeof source[i] !== 'undefined') {\n      obj[i] = source[i];\n    }\n  }\n  return obj;\n}\nexport function merge(target, source, options = {}) {\n  if (!source) {\n    return target;\n  }\n  if (typeof source !== 'object') {\n    if (is_array(target)) {\n      target.push(source);\n    } else if (target && typeof target === 'object') {\n      if (options && (options.plainObjects || options.allowPrototypes) || !has.call(Object.prototype, source)) {\n        target[source] = true;\n      }\n    } else {\n      return [target, source];\n    }\n    return target;\n  }\n  if (!target || typeof target !== 'object') {\n    return [target].concat(source);\n  }\n  let mergeTarget = target;\n  if (is_array(target) && !is_array(source)) {\n    // @ts-ignore\n    mergeTarget = array_to_object(target, options);\n  }\n  if (is_array(target) && is_array(source)) {\n    source.forEach(function (item, i) {\n      if (has.call(target, i)) {\n        const targetItem = target[i];\n        if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n          target[i] = merge(targetItem, item, options);\n        } else {\n          target.push(item);\n        }\n      } else {\n        target[i] = item;\n      }\n    });\n    return target;\n  }\n  return Object.keys(source).reduce(function (acc, key) {\n    const value = source[key];\n    if (has.call(acc, key)) {\n      acc[key] = merge(acc[key], value, options);\n    } else {\n      acc[key] = value;\n    }\n    return acc;\n  }, mergeTarget);\n}\nexport function assign_single_source(target, source) {\n  return Object.keys(source).reduce(function (acc, key) {\n    acc[key] = source[key];\n    return acc;\n  }, target);\n}\nexport function decode(str, _, charset) {\n  const strWithoutPlus = str.replace(/\\+/g, ' ');\n  if (charset === 'iso-8859-1') {\n    // unescape never throws, no try...catch needed:\n    return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n  }\n  // utf-8\n  try {\n    return decodeURIComponent(strWithoutPlus);\n  } catch (e) {\n    return strWithoutPlus;\n  }\n}\nconst limit = 1024;\nexport const encode = (str, _defaultEncoder, charset, _kind, format) => {\n  // This code was originally written by Brian White for the io.js core querystring library.\n  // It has been adapted here for stricter adherence to RFC 3986\n  if (str.length === 0) {\n    return str;\n  }\n  let string = str;\n  if (typeof str === 'symbol') {\n    string = Symbol.prototype.toString.call(str);\n  } else if (typeof str !== 'string') {\n    string = String(str);\n  }\n  if (charset === 'iso-8859-1') {\n    return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n      return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n    });\n  }\n  let out = '';\n  for (let j = 0; j < string.length; j += limit) {\n    const segment = string.length >= limit ? string.slice(j, j + limit) : string;\n    const arr = [];\n    for (let i = 0; i < segment.length; ++i) {\n      let c = segment.charCodeAt(i);\n      if (c === 0x2d ||\n      // -\n      c === 0x2e ||\n      // .\n      c === 0x5f ||\n      // _\n      c === 0x7e ||\n      // ~\n      c >= 0x30 && c <= 0x39 ||\n      // 0-9\n      c >= 0x41 && c <= 0x5a ||\n      // a-z\n      c >= 0x61 && c <= 0x7a ||\n      // A-Z\n      format === RFC1738 && (c === 0x28 || c === 0x29) // ( )\n      ) {\n        arr[arr.length] = segment.charAt(i);\n        continue;\n      }\n      if (c < 0x80) {\n        arr[arr.length] = hex_table[c];\n        continue;\n      }\n      if (c < 0x800) {\n        arr[arr.length] = hex_table[0xc0 | c >> 6] + hex_table[0x80 | c & 0x3f];\n        continue;\n      }\n      if (c < 0xd800 || c >= 0xe000) {\n        arr[arr.length] = hex_table[0xe0 | c >> 12] + hex_table[0x80 | c >> 6 & 0x3f] + hex_table[0x80 | c & 0x3f];\n        continue;\n      }\n      i += 1;\n      c = 0x10000 + ((c & 0x3ff) << 10 | segment.charCodeAt(i) & 0x3ff);\n      arr[arr.length] = hex_table[0xf0 | c >> 18] + hex_table[0x80 | c >> 12 & 0x3f] + hex_table[0x80 | c >> 6 & 0x3f] + hex_table[0x80 | c & 0x3f];\n    }\n    out += arr.join('');\n  }\n  return out;\n};\nexport function compact(value) {\n  const queue = [{\n    obj: {\n      o: value\n    },\n    prop: 'o'\n  }];\n  const refs = [];\n  for (let i = 0; i < queue.length; ++i) {\n    const item = queue[i];\n    // @ts-ignore\n    const obj = item.obj[item.prop];\n    const keys = Object.keys(obj);\n    for (let j = 0; j < keys.length; ++j) {\n      const key = keys[j];\n      const val = obj[key];\n      if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n        queue.push({\n          obj: obj,\n          prop: key\n        });\n        refs.push(val);\n      }\n    }\n  }\n  compact_queue(queue);\n  return value;\n}\nexport function is_regexp(obj) {\n  return Object.prototype.toString.call(obj) === '[object RegExp]';\n}\nexport function is_buffer(obj) {\n  if (!obj || typeof obj !== 'object') {\n    return false;\n  }\n  return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n}\nexport function combine(a, b) {\n  return [].concat(a, b);\n}\nexport function maybe_map(val, fn) {\n  if (is_array(val)) {\n    const mapped = [];\n    for (let i = 0; i < val.length; i += 1) {\n      mapped.push(fn(val[i]));\n    }\n    return mapped;\n  }\n  return fn(val);\n}\n", "import { encode, is_buffer, maybe_map } from \"./utils.mjs\";\nimport { default_format, formatters } from \"./formats.mjs\";\nconst has = Object.prototype.hasOwnProperty;\nconst array_prefix_generators = {\n  brackets(prefix) {\n    return String(prefix) + '[]';\n  },\n  comma: 'comma',\n  indices(prefix, key) {\n    return String(prefix) + '[' + key + ']';\n  },\n  repeat(prefix) {\n    return String(prefix);\n  }\n};\nconst is_array = Array.isArray;\nconst push = Array.prototype.push;\nconst push_to_array = function (arr, value_or_array) {\n  push.apply(arr, is_array(value_or_array) ? value_or_array : [value_or_array]);\n};\nconst to_ISO = Date.prototype.toISOString;\nconst defaults = {\n  addQueryPrefix: false,\n  allowDots: false,\n  allowEmptyArrays: false,\n  arrayFormat: 'indices',\n  charset: 'utf-8',\n  charsetSentinel: false,\n  delimiter: '&',\n  encode: true,\n  encodeDotInKeys: false,\n  encoder: encode,\n  encodeValuesOnly: false,\n  format: default_format,\n  formatter: formatters[default_format],\n  /** @deprecated */\n  indices: false,\n  serializeDate(date) {\n    return to_ISO.call(date);\n  },\n  skipNulls: false,\n  strictNullHandling: false\n};\nfunction is_non_nullish_primitive(v) {\n  return typeof v === 'string' || typeof v === 'number' || typeof v === 'boolean' || typeof v === 'symbol' || typeof v === 'bigint';\n}\nconst sentinel = {};\nfunction inner_stringify(object, prefix, generateArrayPrefix, commaRoundTrip, allowEmptyArrays, strictNullHandling, skipNulls, encodeDotInKeys, encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, sideChannel) {\n  let obj = object;\n  let tmp_sc = sideChannel;\n  let step = 0;\n  let find_flag = false;\n  while ((tmp_sc = tmp_sc.get(sentinel)) !== void undefined && !find_flag) {\n    // Where object last appeared in the ref tree\n    const pos = tmp_sc.get(object);\n    step += 1;\n    if (typeof pos !== 'undefined') {\n      if (pos === step) {\n        throw new RangeError('Cyclic object value');\n      } else {\n        find_flag = true; // Break while\n      }\n    }\n    if (typeof tmp_sc.get(sentinel) === 'undefined') {\n      step = 0;\n    }\n  }\n  if (typeof filter === 'function') {\n    obj = filter(prefix, obj);\n  } else if (obj instanceof Date) {\n    obj = serializeDate?.(obj);\n  } else if (generateArrayPrefix === 'comma' && is_array(obj)) {\n    obj = maybe_map(obj, function (value) {\n      if (value instanceof Date) {\n        return serializeDate?.(value);\n      }\n      return value;\n    });\n  }\n  if (obj === null) {\n    if (strictNullHandling) {\n      return encoder && !encodeValuesOnly ?\n      // @ts-expect-error\n      encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;\n    }\n    obj = '';\n  }\n  if (is_non_nullish_primitive(obj) || is_buffer(obj)) {\n    if (encoder) {\n      const key_value = encodeValuesOnly ? prefix\n      // @ts-expect-error\n      : encoder(prefix, defaults.encoder, charset, 'key', format);\n      return [formatter?.(key_value) + '=' +\n      // @ts-expect-error\n      formatter?.(encoder(obj, defaults.encoder, charset, 'value', format))];\n    }\n    return [formatter?.(prefix) + '=' + formatter?.(String(obj))];\n  }\n  const values = [];\n  if (typeof obj === 'undefined') {\n    return values;\n  }\n  let obj_keys;\n  if (generateArrayPrefix === 'comma' && is_array(obj)) {\n    // we need to join elements in\n    if (encodeValuesOnly && encoder) {\n      // @ts-expect-error values only\n      obj = maybe_map(obj, encoder);\n    }\n    obj_keys = [{\n      value: obj.length > 0 ? obj.join(',') || null : void undefined\n    }];\n  } else if (is_array(filter)) {\n    obj_keys = filter;\n  } else {\n    const keys = Object.keys(obj);\n    obj_keys = sort ? keys.sort(sort) : keys;\n  }\n  const encoded_prefix = encodeDotInKeys ? String(prefix).replace(/\\./g, '%2E') : String(prefix);\n  const adjusted_prefix = commaRoundTrip && is_array(obj) && obj.length === 1 ? encoded_prefix + '[]' : encoded_prefix;\n  if (allowEmptyArrays && is_array(obj) && obj.length === 0) {\n    return adjusted_prefix + '[]';\n  }\n  for (let j = 0; j < obj_keys.length; ++j) {\n    const key = obj_keys[j];\n    const value =\n    // @ts-ignore\n    typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\n    if (skipNulls && value === null) {\n      continue;\n    }\n    // @ts-ignore\n    const encoded_key = allowDots && encodeDotInKeys ? key.replace(/\\./g, '%2E') : key;\n    const key_prefix = is_array(obj) ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(adjusted_prefix, encoded_key) : adjusted_prefix : adjusted_prefix + (allowDots ? '.' + encoded_key : '[' + encoded_key + ']');\n    sideChannel.set(object, step);\n    const valueSideChannel = new WeakMap();\n    valueSideChannel.set(sentinel, sideChannel);\n    push_to_array(values, inner_stringify(value, key_prefix, generateArrayPrefix, commaRoundTrip, allowEmptyArrays, strictNullHandling, skipNulls, encodeDotInKeys,\n    // @ts-ignore\n    generateArrayPrefix === 'comma' && encodeValuesOnly && is_array(obj) ? null : encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, valueSideChannel));\n  }\n  return values;\n}\nfunction normalize_stringify_options(opts = defaults) {\n  if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n    throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n  }\n  if (typeof opts.encodeDotInKeys !== 'undefined' && typeof opts.encodeDotInKeys !== 'boolean') {\n    throw new TypeError('`encodeDotInKeys` option can only be `true` or `false`, when provided');\n  }\n  if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n    throw new TypeError('Encoder has to be a function.');\n  }\n  const charset = opts.charset || defaults.charset;\n  if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n    throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n  }\n  let format = default_format;\n  if (typeof opts.format !== 'undefined') {\n    if (!has.call(formatters, opts.format)) {\n      throw new TypeError('Unknown format option provided.');\n    }\n    format = opts.format;\n  }\n  const formatter = formatters[format];\n  let filter = defaults.filter;\n  if (typeof opts.filter === 'function' || is_array(opts.filter)) {\n    filter = opts.filter;\n  }\n  let arrayFormat;\n  if (opts.arrayFormat && opts.arrayFormat in array_prefix_generators) {\n    arrayFormat = opts.arrayFormat;\n  } else if ('indices' in opts) {\n    arrayFormat = opts.indices ? 'indices' : 'repeat';\n  } else {\n    arrayFormat = defaults.arrayFormat;\n  }\n  if ('commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n    throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n  }\n  const allowDots = typeof opts.allowDots === 'undefined' ? !!opts.encodeDotInKeys === true ? true : defaults.allowDots : !!opts.allowDots;\n  return {\n    addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n    // @ts-ignore\n    allowDots: allowDots,\n    allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n    arrayFormat: arrayFormat,\n    charset: charset,\n    charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n    commaRoundTrip: !!opts.commaRoundTrip,\n    delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n    encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n    encodeDotInKeys: typeof opts.encodeDotInKeys === 'boolean' ? opts.encodeDotInKeys : defaults.encodeDotInKeys,\n    encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n    encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n    filter: filter,\n    format: format,\n    formatter: formatter,\n    serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n    skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n    // @ts-ignore\n    sort: typeof opts.sort === 'function' ? opts.sort : null,\n    strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n  };\n}\nexport function stringify(object, opts = {}) {\n  let obj = object;\n  const options = normalize_stringify_options(opts);\n  let obj_keys;\n  let filter;\n  if (typeof options.filter === 'function') {\n    filter = options.filter;\n    obj = filter('', obj);\n  } else if (is_array(options.filter)) {\n    filter = options.filter;\n    obj_keys = filter;\n  }\n  const keys = [];\n  if (typeof obj !== 'object' || obj === null) {\n    return '';\n  }\n  const generateArrayPrefix = array_prefix_generators[options.arrayFormat];\n  const commaRoundTrip = generateArrayPrefix === 'comma' && options.commaRoundTrip;\n  if (!obj_keys) {\n    obj_keys = Object.keys(obj);\n  }\n  if (options.sort) {\n    obj_keys.sort(options.sort);\n  }\n  const sideChannel = new WeakMap();\n  for (let i = 0; i < obj_keys.length; ++i) {\n    const key = obj_keys[i];\n    if (options.skipNulls && obj[key] === null) {\n      continue;\n    }\n    push_to_array(keys, inner_stringify(obj[key], key,\n    // @ts-expect-error\n    generateArrayPrefix, commaRoundTrip, options.allowEmptyArrays, options.strictNullHandling, options.skipNulls, options.encodeDotInKeys, options.encode ? options.encoder : null, options.filter, options.sort, options.allowDots, options.serializeDate, options.format, options.formatter, options.encodeValuesOnly, options.charset, sideChannel));\n  }\n  const joined = keys.join(options.delimiter);\n  let prefix = options.addQueryPrefix === true ? '?' : '';\n  if (options.charsetSentinel) {\n    if (options.charset === 'iso-8859-1') {\n      // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n      prefix += 'utf8=%26%2310003%3B&';\n    } else {\n      // encodeURIComponent('âœ“')\n      prefix += 'utf8=%E2%9C%93&';\n    }\n  }\n  return joined.length > 0 ? prefix + joined : '';\n}\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { AbstractPage } from \"./core.mjs\";\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class Page extends AbstractPage {\n  constructor(client, response, body, options) {\n    super(client, response, body, options);\n    this.data = body.data || [];\n    this.object = body.object;\n  }\n  getPaginatedItems() {\n    return this.data ?? [];\n  }\n  // @deprecated Please use `nextPageInfo()` instead\n  /**\n   * This page represents a response that isn't actually paginated at the API level\n   * so there will never be any next page params.\n   */\n  nextPageParams() {\n    return null;\n  }\n  nextPageInfo() {\n    return null;\n  }\n}\nexport class CursorPage extends AbstractPage {\n  constructor(client, response, body, options) {\n    super(client, response, body, options);\n    this.data = body.data || [];\n  }\n  getPaginatedItems() {\n    return this.data ?? [];\n  }\n  // @deprecated Please use `nextPageInfo()` instead\n  nextPageParams() {\n    const info = this.nextPageInfo();\n    if (!info) return null;\n    if ('params' in info) return info.params;\n    const params = Object.fromEntries(info.url.searchParams);\n    if (!Object.keys(params).length) return null;\n    return params;\n  }\n  nextPageInfo() {\n    const data = this.getPaginatedItems();\n    if (!data.length) {\n      return null;\n    }\n    const id = data[data.length - 1]?.id;\n    if (!id) {\n      return null;\n    }\n    return {\n      params: {\n        after: id\n      }\n    };\n  }\n}\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nexport class APIResource {\n  constructor(client) {\n    this._client = client;\n  }\n}\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nexport class Completions extends APIResource {\n  create(body, options) {\n    return this._client.post('/chat/completions', {\n      body,\n      ...options,\n      stream: body.stream ?? false\n    });\n  }\n}\n(function (Completions) {})(Completions || (Completions = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as CompletionsAPI from \"./completions.mjs\";\nexport class Chat extends APIResource {\n  constructor() {\n    super(...arguments);\n    this.completions = new CompletionsAPI.Completions(this._client);\n  }\n}\n(function (Chat) {\n  Chat.Completions = CompletionsAPI.Completions;\n})(Chat || (Chat = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nexport class Speech extends APIResource {\n  /**\n   * Generates audio from the input text.\n   */\n  create(body, options) {\n    return this._client.post('/audio/speech', {\n      body,\n      ...options,\n      __binaryResponse: true\n    });\n  }\n}\n(function (Speech) {})(Speech || (Speech = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as Core from \"../../core.mjs\";\nexport class Transcriptions extends APIResource {\n  create(body, options) {\n    return this._client.post('/audio/transcriptions', Core.multipartFormRequestOptions({\n      body,\n      ...options\n    }));\n  }\n}\n(function (Transcriptions) {})(Transcriptions || (Transcriptions = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as Core from \"../../core.mjs\";\nexport class Translations extends APIResource {\n  create(body, options) {\n    return this._client.post('/audio/translations', Core.multipartFormRequestOptions({\n      body,\n      ...options\n    }));\n  }\n}\n(function (Translations) {})(Translations || (Translations = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as SpeechAPI from \"./speech.mjs\";\nimport * as TranscriptionsAPI from \"./transcriptions.mjs\";\nimport * as TranslationsAPI from \"./translations.mjs\";\nexport class Audio extends APIResource {\n  constructor() {\n    super(...arguments);\n    this.transcriptions = new TranscriptionsAPI.Transcriptions(this._client);\n    this.translations = new TranslationsAPI.Translations(this._client);\n    this.speech = new SpeechAPI.Speech(this._client);\n  }\n}\n(function (Audio) {\n  Audio.Transcriptions = TranscriptionsAPI.Transcriptions;\n  Audio.Translations = TranslationsAPI.Translations;\n  Audio.Speech = SpeechAPI.Speech;\n})(Audio || (Audio = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nimport { isRequestOptions } from \"../core.mjs\";\nimport * as BatchesAPI from \"./batches.mjs\";\nimport { CursorPage } from \"../pagination.mjs\";\nexport class Batches extends APIResource {\n  /**\n   * Creates and executes a batch from an uploaded file of requests\n   */\n  create(body, options) {\n    return this._client.post('/batches', {\n      body,\n      ...options\n    });\n  }\n  /**\n   * Retrieves a batch.\n   */\n  retrieve(batchId, options) {\n    return this._client.get(`/batches/${batchId}`, options);\n  }\n  list(query = {}, options) {\n    if (isRequestOptions(query)) {\n      return this.list({}, query);\n    }\n    return this._client.getAPIList('/batches', BatchesPage, {\n      query,\n      ...options\n    });\n  }\n  /**\n   * Cancels an in-progress batch. The batch will be in status `cancelling` for up to\n   * 10 minutes, before changing to `cancelled`, where it will have partial results\n   * (if any) available in the output file.\n   */\n  cancel(batchId, options) {\n    return this._client.post(`/batches/${batchId}/cancel`, options);\n  }\n}\nexport class BatchesPage extends CursorPage {}\n(function (Batches) {\n  Batches.BatchesPage = BatchesAPI.BatchesPage;\n})(Batches || (Batches = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport { isRequestOptions } from \"../../core.mjs\";\nimport * as AssistantsAPI from \"./assistants.mjs\";\nimport { CursorPage } from \"../../pagination.mjs\";\nexport class Assistants extends APIResource {\n  /**\n   * Create an assistant with a model and instructions.\n   */\n  create(body, options) {\n    return this._client.post('/assistants', {\n      body,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Retrieves an assistant.\n   */\n  retrieve(assistantId, options) {\n    return this._client.get(`/assistants/${assistantId}`, {\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Modifies an assistant.\n   */\n  update(assistantId, body, options) {\n    return this._client.post(`/assistants/${assistantId}`, {\n      body,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n  list(query = {}, options) {\n    if (isRequestOptions(query)) {\n      return this.list({}, query);\n    }\n    return this._client.getAPIList('/assistants', AssistantsPage, {\n      query,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Delete an assistant.\n   */\n  del(assistantId, options) {\n    return this._client.delete(`/assistants/${assistantId}`, {\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n}\nexport class AssistantsPage extends CursorPage {}\n(function (Assistants) {\n  Assistants.AssistantsPage = AssistantsAPI.AssistantsPage;\n})(Assistants || (Assistants = {}));\n", "export function isRunnableFunctionWithParse(fn) {\n  return typeof fn.parse === 'function';\n}\n/**\n * This is helper class for passing a `function` and `parse` where the `function`\n * argument type matches the `parse` return type.\n *\n * @deprecated - please use ParsingToolFunction instead.\n */\nexport class ParsingFunction {\n  constructor(input) {\n    this.function = input.function;\n    this.parse = input.parse;\n    this.parameters = input.parameters;\n    this.description = input.description;\n    this.name = input.name;\n  }\n}\n/**\n * This is helper class for passing a `function` and `parse` where the `function`\n * argument type matches the `parse` return type.\n */\nexport class ParsingToolFunction {\n  constructor(input) {\n    this.type = 'function';\n    this.function = input;\n  }\n}\n", "export const isAssistantMessage = message => {\n  return message?.role === 'assistant';\n};\nexport const isFunctionMessage = message => {\n  return message?.role === 'function';\n};\nexport const isToolMessage = message => {\n  return message?.role === 'tool';\n};\nexport function isPresent(obj) {\n  return obj != null;\n}\n", "var __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _EventStream_instances, _EventStream_connectedPromise, _EventStream_resolveConnectedPromise, _EventStream_rejectConnectedPromise, _EventStream_endPromise, _EventStream_resolveEndPromise, _EventStream_rejectEndPromise, _EventStream_listeners, _EventStream_ended, _EventStream_errored, _EventStream_aborted, _EventStream_catchingPromiseCreated, _EventStream_handleError;\nimport { APIUserAbortError, OpenAIError } from 'openai/error';\nexport class EventStream {\n  constructor() {\n    _EventStream_instances.add(this);\n    this.controller = new AbortController();\n    _EventStream_connectedPromise.set(this, void 0);\n    _EventStream_resolveConnectedPromise.set(this, () => {});\n    _EventStream_rejectConnectedPromise.set(this, () => {});\n    _EventStream_endPromise.set(this, void 0);\n    _EventStream_resolveEndPromise.set(this, () => {});\n    _EventStream_rejectEndPromise.set(this, () => {});\n    _EventStream_listeners.set(this, {});\n    _EventStream_ended.set(this, false);\n    _EventStream_errored.set(this, false);\n    _EventStream_aborted.set(this, false);\n    _EventStream_catchingPromiseCreated.set(this, false);\n    __classPrivateFieldSet(this, _EventStream_connectedPromise, new Promise((resolve, reject) => {\n      __classPrivateFieldSet(this, _EventStream_resolveConnectedPromise, resolve, \"f\");\n      __classPrivateFieldSet(this, _EventStream_rejectConnectedPromise, reject, \"f\");\n    }), \"f\");\n    __classPrivateFieldSet(this, _EventStream_endPromise, new Promise((resolve, reject) => {\n      __classPrivateFieldSet(this, _EventStream_resolveEndPromise, resolve, \"f\");\n      __classPrivateFieldSet(this, _EventStream_rejectEndPromise, reject, \"f\");\n    }), \"f\");\n    // Don't let these promises cause unhandled rejection errors.\n    // we will manually cause an unhandled rejection error later\n    // if the user hasn't registered any error listener or called\n    // any promise-returning method.\n    __classPrivateFieldGet(this, _EventStream_connectedPromise, \"f\").catch(() => {});\n    __classPrivateFieldGet(this, _EventStream_endPromise, \"f\").catch(() => {});\n  }\n  _run(executor) {\n    // Unfortunately if we call `executor()` immediately we get runtime errors about\n    // references to `this` before the `super()` constructor call returns.\n    setTimeout(() => {\n      executor().then(() => {\n        this._emitFinal();\n        this._emit('end');\n      }, __classPrivateFieldGet(this, _EventStream_instances, \"m\", _EventStream_handleError).bind(this));\n    }, 0);\n  }\n  _connected() {\n    if (this.ended) return;\n    __classPrivateFieldGet(this, _EventStream_resolveConnectedPromise, \"f\").call(this);\n    this._emit('connect');\n  }\n  get ended() {\n    return __classPrivateFieldGet(this, _EventStream_ended, \"f\");\n  }\n  get errored() {\n    return __classPrivateFieldGet(this, _EventStream_errored, \"f\");\n  }\n  get aborted() {\n    return __classPrivateFieldGet(this, _EventStream_aborted, \"f\");\n  }\n  abort() {\n    this.controller.abort();\n  }\n  /**\n   * Adds the listener function to the end of the listeners array for the event.\n   * No checks are made to see if the listener has already been added. Multiple calls passing\n   * the same combination of event and listener will result in the listener being added, and\n   * called, multiple times.\n   * @returns this ChatCompletionStream, so that calls can be chained\n   */\n  on(event, listener) {\n    const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] || (__classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] = []);\n    listeners.push({\n      listener\n    });\n    return this;\n  }\n  /**\n   * Removes the specified listener from the listener array for the event.\n   * off() will remove, at most, one instance of a listener from the listener array. If any single\n   * listener has been added multiple times to the listener array for the specified event, then\n   * off() must be called multiple times to remove each instance.\n   * @returns this ChatCompletionStream, so that calls can be chained\n   */\n  off(event, listener) {\n    const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event];\n    if (!listeners) return this;\n    const index = listeners.findIndex(l => l.listener === listener);\n    if (index >= 0) listeners.splice(index, 1);\n    return this;\n  }\n  /**\n   * Adds a one-time listener function for the event. The next time the event is triggered,\n   * this listener is removed and then invoked.\n   * @returns this ChatCompletionStream, so that calls can be chained\n   */\n  once(event, listener) {\n    const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] || (__classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] = []);\n    listeners.push({\n      listener,\n      once: true\n    });\n    return this;\n  }\n  /**\n   * This is similar to `.once()`, but returns a Promise that resolves the next time\n   * the event is triggered, instead of calling a listener callback.\n   * @returns a Promise that resolves the next time given event is triggered,\n   * or rejects if an error is emitted.  (If you request the 'error' event,\n   * returns a promise that resolves with the error).\n   *\n   * Example:\n   *\n   *   const message = await stream.emitted('message') // rejects if the stream errors\n   */\n  emitted(event) {\n    return new Promise((resolve, reject) => {\n      __classPrivateFieldSet(this, _EventStream_catchingPromiseCreated, true, \"f\");\n      if (event !== 'error') this.once('error', reject);\n      this.once(event, resolve);\n    });\n  }\n  async done() {\n    __classPrivateFieldSet(this, _EventStream_catchingPromiseCreated, true, \"f\");\n    await __classPrivateFieldGet(this, _EventStream_endPromise, \"f\");\n  }\n  _emit(event, ...args) {\n    // make sure we don't emit any events after end\n    if (__classPrivateFieldGet(this, _EventStream_ended, \"f\")) {\n      return;\n    }\n    if (event === 'end') {\n      __classPrivateFieldSet(this, _EventStream_ended, true, \"f\");\n      __classPrivateFieldGet(this, _EventStream_resolveEndPromise, \"f\").call(this);\n    }\n    const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event];\n    if (listeners) {\n      __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] = listeners.filter(l => !l.once);\n      listeners.forEach(({\n        listener\n      }) => listener(...args));\n    }\n    if (event === 'abort') {\n      const error = args[0];\n      if (!__classPrivateFieldGet(this, _EventStream_catchingPromiseCreated, \"f\") && !listeners?.length) {\n        Promise.reject(error);\n      }\n      __classPrivateFieldGet(this, _EventStream_rejectConnectedPromise, \"f\").call(this, error);\n      __classPrivateFieldGet(this, _EventStream_rejectEndPromise, \"f\").call(this, error);\n      this._emit('end');\n      return;\n    }\n    if (event === 'error') {\n      // NOTE: _emit('error', error) should only be called from #handleError().\n      const error = args[0];\n      if (!__classPrivateFieldGet(this, _EventStream_catchingPromiseCreated, \"f\") && !listeners?.length) {\n        // Trigger an unhandled rejection if the user hasn't registered any error handlers.\n        // If you are seeing stack traces here, make sure to handle errors via either:\n        // - runner.on('error', () => ...)\n        // - await runner.done()\n        // - await runner.finalChatCompletion()\n        // - etc.\n        Promise.reject(error);\n      }\n      __classPrivateFieldGet(this, _EventStream_rejectConnectedPromise, \"f\").call(this, error);\n      __classPrivateFieldGet(this, _EventStream_rejectEndPromise, \"f\").call(this, error);\n      this._emit('end');\n    }\n  }\n  _emitFinal() {}\n}\n_EventStream_connectedPromise = new WeakMap(), _EventStream_resolveConnectedPromise = new WeakMap(), _EventStream_rejectConnectedPromise = new WeakMap(), _EventStream_endPromise = new WeakMap(), _EventStream_resolveEndPromise = new WeakMap(), _EventStream_rejectEndPromise = new WeakMap(), _EventStream_listeners = new WeakMap(), _EventStream_ended = new WeakMap(), _EventStream_errored = new WeakMap(), _EventStream_aborted = new WeakMap(), _EventStream_catchingPromiseCreated = new WeakMap(), _EventStream_instances = new WeakSet(), _EventStream_handleError = function _EventStream_handleError(error) {\n  __classPrivateFieldSet(this, _EventStream_errored, true, \"f\");\n  if (error instanceof Error && error.name === 'AbortError') {\n    error = new APIUserAbortError();\n  }\n  if (error instanceof APIUserAbortError) {\n    __classPrivateFieldSet(this, _EventStream_aborted, true, \"f\");\n    return this._emit('abort', error);\n  }\n  if (error instanceof OpenAIError) {\n    return this._emit('error', error);\n  }\n  if (error instanceof Error) {\n    const openAIError = new OpenAIError(error.message);\n    // @ts-ignore\n    openAIError.cause = error;\n    return this._emit('error', openAIError);\n  }\n  return this._emit('error', new OpenAIError(String(error)));\n};\n", "import { ContentFilterFinishReasonError, LengthFinishReasonError, OpenAIError } from 'openai/error';\nexport function makeParseableResponseFormat(response_format, parser) {\n  const obj = {\n    ...response_format\n  };\n  Object.defineProperties(obj, {\n    $brand: {\n      value: 'auto-parseable-response-format',\n      enumerable: false\n    },\n    $parseRaw: {\n      value: parser,\n      enumerable: false\n    }\n  });\n  return obj;\n}\nexport function isAutoParsableResponseFormat(response_format) {\n  return response_format?.['$brand'] === 'auto-parseable-response-format';\n}\nexport function makeParseableTool(tool, {\n  parser,\n  callback\n}) {\n  const obj = {\n    ...tool\n  };\n  Object.defineProperties(obj, {\n    $brand: {\n      value: 'auto-parseable-tool',\n      enumerable: false\n    },\n    $parseRaw: {\n      value: parser,\n      enumerable: false\n    },\n    $callback: {\n      value: callback,\n      enumerable: false\n    }\n  });\n  return obj;\n}\nexport function isAutoParsableTool(tool) {\n  return tool?.['$brand'] === 'auto-parseable-tool';\n}\nexport function maybeParseChatCompletion(completion, params) {\n  if (!params || !hasAutoParseableInput(params)) {\n    return {\n      ...completion,\n      choices: completion.choices.map(choice => ({\n        ...choice,\n        message: {\n          ...choice.message,\n          parsed: null,\n          tool_calls: choice.message.tool_calls ?? []\n        }\n      }))\n    };\n  }\n  return parseChatCompletion(completion, params);\n}\nexport function parseChatCompletion(completion, params) {\n  const choices = completion.choices.map(choice => {\n    if (choice.finish_reason === 'length') {\n      throw new LengthFinishReasonError();\n    }\n    if (choice.finish_reason === 'content_filter') {\n      throw new ContentFilterFinishReasonError();\n    }\n    return {\n      ...choice,\n      message: {\n        ...choice.message,\n        tool_calls: choice.message.tool_calls?.map(toolCall => parseToolCall(params, toolCall)) ?? [],\n        parsed: choice.message.content && !choice.message.refusal ? parseResponseFormat(params, choice.message.content) : null\n      }\n    };\n  });\n  return {\n    ...completion,\n    choices\n  };\n}\nfunction parseResponseFormat(params, content) {\n  if (params.response_format?.type !== 'json_schema') {\n    return null;\n  }\n  if (params.response_format?.type === 'json_schema') {\n    if ('$parseRaw' in params.response_format) {\n      const response_format = params.response_format;\n      return response_format.$parseRaw(content);\n    }\n    return JSON.parse(content);\n  }\n  return null;\n}\nfunction parseToolCall(params, toolCall) {\n  const inputTool = params.tools?.find(inputTool => inputTool.function?.name === toolCall.function.name);\n  return {\n    ...toolCall,\n    function: {\n      ...toolCall.function,\n      parsed_arguments: isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCall.function.arguments) : inputTool?.function.strict ? JSON.parse(toolCall.function.arguments) : null\n    }\n  };\n}\nexport function shouldParseToolCall(params, toolCall) {\n  if (!params) {\n    return false;\n  }\n  const inputTool = params.tools?.find(inputTool => inputTool.function?.name === toolCall.function.name);\n  return isAutoParsableTool(inputTool) || inputTool?.function.strict || false;\n}\nexport function hasAutoParseableInput(params) {\n  if (isAutoParsableResponseFormat(params.response_format)) {\n    return true;\n  }\n  return params.tools?.some(t => isAutoParsableTool(t) || t.type === 'function' && t.function.strict === true) ?? false;\n}\nexport function validateInputTools(tools) {\n  for (const tool of tools ?? []) {\n    if (tool.type !== 'function') {\n      throw new OpenAIError(`Currently only \\`function\\` tool types support auto-parsing; Received \\`${tool.type}\\``);\n    }\n    if (tool.function.strict !== true) {\n      throw new OpenAIError(`The \\`${tool.function.name}\\` tool is not marked with \\`strict: true\\`. Only strict function tools can be auto-parsed`);\n    }\n  }\n}\n", "var __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AbstractChatCompletionRunner_instances, _AbstractChatCompletionRunner_getFinalContent, _AbstractChatCompletionRunner_getFinalMessage, _AbstractChatCompletionRunner_getFinalFunctionCall, _AbstractChatCompletionRunner_getFinalFunctionCallResult, _AbstractChatCompletionRunner_calculateTotalUsage, _AbstractChatCompletionRunner_validateParams, _AbstractChatCompletionRunner_stringifyFunctionCallResult;\nimport { OpenAIError } from 'openai/error';\nimport { isRunnableFunctionWithParse } from \"./RunnableFunction.mjs\";\nimport { isAssistantMessage, isFunctionMessage, isToolMessage } from \"./chatCompletionUtils.mjs\";\nimport { EventStream } from \"./EventStream.mjs\";\nimport { isAutoParsableTool, parseChatCompletion } from 'openai/lib/parser';\nconst DEFAULT_MAX_CHAT_COMPLETIONS = 10;\nexport class AbstractChatCompletionRunner extends EventStream {\n  constructor() {\n    super(...arguments);\n    _AbstractChatCompletionRunner_instances.add(this);\n    this._chatCompletions = [];\n    this.messages = [];\n  }\n  _addChatCompletion(chatCompletion) {\n    this._chatCompletions.push(chatCompletion);\n    this._emit('chatCompletion', chatCompletion);\n    const message = chatCompletion.choices[0]?.message;\n    if (message) this._addMessage(message);\n    return chatCompletion;\n  }\n  _addMessage(message, emit = true) {\n    if (!('content' in message)) message.content = null;\n    this.messages.push(message);\n    if (emit) {\n      this._emit('message', message);\n      if ((isFunctionMessage(message) || isToolMessage(message)) && message.content) {\n        // Note, this assumes that {role: 'tool', content: â€¦} is always the result of a call of tool of type=function.\n        this._emit('functionCallResult', message.content);\n      } else if (isAssistantMessage(message) && message.function_call) {\n        this._emit('functionCall', message.function_call);\n      } else if (isAssistantMessage(message) && message.tool_calls) {\n        for (const tool_call of message.tool_calls) {\n          if (tool_call.type === 'function') {\n            this._emit('functionCall', tool_call.function);\n          }\n        }\n      }\n    }\n  }\n  /**\n   * @returns a promise that resolves with the final ChatCompletion, or rejects\n   * if an error occurred or the stream ended prematurely without producing a ChatCompletion.\n   */\n  async finalChatCompletion() {\n    await this.done();\n    const completion = this._chatCompletions[this._chatCompletions.length - 1];\n    if (!completion) throw new OpenAIError('stream ended without producing a ChatCompletion');\n    return completion;\n  }\n  /**\n   * @returns a promise that resolves with the content of the final ChatCompletionMessage, or rejects\n   * if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n   */\n  async finalContent() {\n    await this.done();\n    return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalContent).call(this);\n  }\n  /**\n   * @returns a promise that resolves with the the final assistant ChatCompletionMessage response,\n   * or rejects if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n   */\n  async finalMessage() {\n    await this.done();\n    return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this);\n  }\n  /**\n   * @returns a promise that resolves with the content of the final FunctionCall, or rejects\n   * if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n   */\n  async finalFunctionCall() {\n    await this.done();\n    return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCall).call(this);\n  }\n  async finalFunctionCallResult() {\n    await this.done();\n    return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCallResult).call(this);\n  }\n  async totalUsage() {\n    await this.done();\n    return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_calculateTotalUsage).call(this);\n  }\n  allChatCompletions() {\n    return [...this._chatCompletions];\n  }\n  _emitFinal() {\n    const completion = this._chatCompletions[this._chatCompletions.length - 1];\n    if (completion) this._emit('finalChatCompletion', completion);\n    const finalMessage = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this);\n    if (finalMessage) this._emit('finalMessage', finalMessage);\n    const finalContent = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalContent).call(this);\n    if (finalContent) this._emit('finalContent', finalContent);\n    const finalFunctionCall = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCall).call(this);\n    if (finalFunctionCall) this._emit('finalFunctionCall', finalFunctionCall);\n    const finalFunctionCallResult = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCallResult).call(this);\n    if (finalFunctionCallResult != null) this._emit('finalFunctionCallResult', finalFunctionCallResult);\n    if (this._chatCompletions.some(c => c.usage)) {\n      this._emit('totalUsage', __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_calculateTotalUsage).call(this));\n    }\n  }\n  async _createChatCompletion(client, params, options) {\n    const signal = options?.signal;\n    if (signal) {\n      if (signal.aborted) this.controller.abort();\n      signal.addEventListener('abort', () => this.controller.abort());\n    }\n    __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_validateParams).call(this, params);\n    const chatCompletion = await client.chat.completions.create({\n      ...params,\n      stream: false\n    }, {\n      ...options,\n      signal: this.controller.signal\n    });\n    this._connected();\n    return this._addChatCompletion(parseChatCompletion(chatCompletion, params));\n  }\n  async _runChatCompletion(client, params, options) {\n    for (const message of params.messages) {\n      this._addMessage(message, false);\n    }\n    return await this._createChatCompletion(client, params, options);\n  }\n  async _runFunctions(client, params, options) {\n    const role = 'function';\n    const {\n      function_call = 'auto',\n      stream,\n      ...restParams\n    } = params;\n    const singleFunctionToCall = typeof function_call !== 'string' && function_call?.name;\n    const {\n      maxChatCompletions = DEFAULT_MAX_CHAT_COMPLETIONS\n    } = options || {};\n    const functionsByName = {};\n    for (const f of params.functions) {\n      functionsByName[f.name || f.function.name] = f;\n    }\n    const functions = params.functions.map(f => ({\n      name: f.name || f.function.name,\n      parameters: f.parameters,\n      description: f.description\n    }));\n    for (const message of params.messages) {\n      this._addMessage(message, false);\n    }\n    for (let i = 0; i < maxChatCompletions; ++i) {\n      const chatCompletion = await this._createChatCompletion(client, {\n        ...restParams,\n        function_call,\n        functions,\n        messages: [...this.messages]\n      }, options);\n      const message = chatCompletion.choices[0]?.message;\n      if (!message) {\n        throw new OpenAIError(`missing message in ChatCompletion response`);\n      }\n      if (!message.function_call) return;\n      const {\n        name,\n        arguments: args\n      } = message.function_call;\n      const fn = functionsByName[name];\n      if (!fn) {\n        const content = `Invalid function_call: ${JSON.stringify(name)}. Available options are: ${functions.map(f => JSON.stringify(f.name)).join(', ')}. Please try again`;\n        this._addMessage({\n          role,\n          name,\n          content\n        });\n        continue;\n      } else if (singleFunctionToCall && singleFunctionToCall !== name) {\n        const content = `Invalid function_call: ${JSON.stringify(name)}. ${JSON.stringify(singleFunctionToCall)} requested. Please try again`;\n        this._addMessage({\n          role,\n          name,\n          content\n        });\n        continue;\n      }\n      let parsed;\n      try {\n        parsed = isRunnableFunctionWithParse(fn) ? await fn.parse(args) : args;\n      } catch (error) {\n        this._addMessage({\n          role,\n          name,\n          content: error instanceof Error ? error.message : String(error)\n        });\n        continue;\n      }\n      // @ts-expect-error it can't rule out `never` type.\n      const rawContent = await fn.function(parsed, this);\n      const content = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_stringifyFunctionCallResult).call(this, rawContent);\n      this._addMessage({\n        role,\n        name,\n        content\n      });\n      if (singleFunctionToCall) return;\n    }\n  }\n  async _runTools(client, params, options) {\n    const role = 'tool';\n    const {\n      tool_choice = 'auto',\n      stream,\n      ...restParams\n    } = params;\n    const singleFunctionToCall = typeof tool_choice !== 'string' && tool_choice?.function?.name;\n    const {\n      maxChatCompletions = DEFAULT_MAX_CHAT_COMPLETIONS\n    } = options || {};\n    // TODO(someday): clean this logic up\n    const inputTools = params.tools.map(tool => {\n      if (isAutoParsableTool(tool)) {\n        if (!tool.$callback) {\n          throw new OpenAIError('Tool given to `.runTools()` that does not have an associated function');\n        }\n        return {\n          type: 'function',\n          function: {\n            function: tool.$callback,\n            name: tool.function.name,\n            description: tool.function.description || '',\n            parameters: tool.function.parameters,\n            parse: tool.$parseRaw,\n            strict: true\n          }\n        };\n      }\n      return tool;\n    });\n    const functionsByName = {};\n    for (const f of inputTools) {\n      if (f.type === 'function') {\n        functionsByName[f.function.name || f.function.function.name] = f.function;\n      }\n    }\n    const tools = 'tools' in params ? inputTools.map(t => t.type === 'function' ? {\n      type: 'function',\n      function: {\n        name: t.function.name || t.function.function.name,\n        parameters: t.function.parameters,\n        description: t.function.description,\n        strict: t.function.strict\n      }\n    } : t) : undefined;\n    for (const message of params.messages) {\n      this._addMessage(message, false);\n    }\n    for (let i = 0; i < maxChatCompletions; ++i) {\n      const chatCompletion = await this._createChatCompletion(client, {\n        ...restParams,\n        tool_choice,\n        tools,\n        messages: [...this.messages]\n      }, options);\n      const message = chatCompletion.choices[0]?.message;\n      if (!message) {\n        throw new OpenAIError(`missing message in ChatCompletion response`);\n      }\n      if (!message.tool_calls?.length) {\n        return;\n      }\n      for (const tool_call of message.tool_calls) {\n        if (tool_call.type !== 'function') continue;\n        const tool_call_id = tool_call.id;\n        const {\n          name,\n          arguments: args\n        } = tool_call.function;\n        const fn = functionsByName[name];\n        if (!fn) {\n          const content = `Invalid tool_call: ${JSON.stringify(name)}. Available options are: ${Object.keys(functionsByName).map(name => JSON.stringify(name)).join(', ')}. Please try again`;\n          this._addMessage({\n            role,\n            tool_call_id,\n            content\n          });\n          continue;\n        } else if (singleFunctionToCall && singleFunctionToCall !== name) {\n          const content = `Invalid tool_call: ${JSON.stringify(name)}. ${JSON.stringify(singleFunctionToCall)} requested. Please try again`;\n          this._addMessage({\n            role,\n            tool_call_id,\n            content\n          });\n          continue;\n        }\n        let parsed;\n        try {\n          parsed = isRunnableFunctionWithParse(fn) ? await fn.parse(args) : args;\n        } catch (error) {\n          const content = error instanceof Error ? error.message : String(error);\n          this._addMessage({\n            role,\n            tool_call_id,\n            content\n          });\n          continue;\n        }\n        // @ts-expect-error it can't rule out `never` type.\n        const rawContent = await fn.function(parsed, this);\n        const content = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_stringifyFunctionCallResult).call(this, rawContent);\n        this._addMessage({\n          role,\n          tool_call_id,\n          content\n        });\n        if (singleFunctionToCall) {\n          return;\n        }\n      }\n    }\n    return;\n  }\n}\n_AbstractChatCompletionRunner_instances = new WeakSet(), _AbstractChatCompletionRunner_getFinalContent = function _AbstractChatCompletionRunner_getFinalContent() {\n  return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this).content ?? null;\n}, _AbstractChatCompletionRunner_getFinalMessage = function _AbstractChatCompletionRunner_getFinalMessage() {\n  let i = this.messages.length;\n  while (i-- > 0) {\n    const message = this.messages[i];\n    if (isAssistantMessage(message)) {\n      const {\n        function_call,\n        ...rest\n      } = message;\n      // TODO: support audio here\n      const ret = {\n        ...rest,\n        content: message.content ?? null,\n        refusal: message.refusal ?? null\n      };\n      if (function_call) {\n        ret.function_call = function_call;\n      }\n      return ret;\n    }\n  }\n  throw new OpenAIError('stream ended without producing a ChatCompletionMessage with role=assistant');\n}, _AbstractChatCompletionRunner_getFinalFunctionCall = function _AbstractChatCompletionRunner_getFinalFunctionCall() {\n  for (let i = this.messages.length - 1; i >= 0; i--) {\n    const message = this.messages[i];\n    if (isAssistantMessage(message) && message?.function_call) {\n      return message.function_call;\n    }\n    if (isAssistantMessage(message) && message?.tool_calls?.length) {\n      return message.tool_calls.at(-1)?.function;\n    }\n  }\n  return;\n}, _AbstractChatCompletionRunner_getFinalFunctionCallResult = function _AbstractChatCompletionRunner_getFinalFunctionCallResult() {\n  for (let i = this.messages.length - 1; i >= 0; i--) {\n    const message = this.messages[i];\n    if (isFunctionMessage(message) && message.content != null) {\n      return message.content;\n    }\n    if (isToolMessage(message) && message.content != null && typeof message.content === 'string' && this.messages.some(x => x.role === 'assistant' && x.tool_calls?.some(y => y.type === 'function' && y.id === message.tool_call_id))) {\n      return message.content;\n    }\n  }\n  return;\n}, _AbstractChatCompletionRunner_calculateTotalUsage = function _AbstractChatCompletionRunner_calculateTotalUsage() {\n  const total = {\n    completion_tokens: 0,\n    prompt_tokens: 0,\n    total_tokens: 0\n  };\n  for (const {\n    usage\n  } of this._chatCompletions) {\n    if (usage) {\n      total.completion_tokens += usage.completion_tokens;\n      total.prompt_tokens += usage.prompt_tokens;\n      total.total_tokens += usage.total_tokens;\n    }\n  }\n  return total;\n}, _AbstractChatCompletionRunner_validateParams = function _AbstractChatCompletionRunner_validateParams(params) {\n  if (params.n != null && params.n > 1) {\n    throw new OpenAIError('ChatCompletion convenience helpers only support n=1 at this time. To use n>1, please use chat.completions.create() directly.');\n  }\n}, _AbstractChatCompletionRunner_stringifyFunctionCallResult = function _AbstractChatCompletionRunner_stringifyFunctionCallResult(rawContent) {\n  return typeof rawContent === 'string' ? rawContent : rawContent === undefined ? 'undefined' : JSON.stringify(rawContent);\n};\n", "import { AbstractChatCompletionRunner } from \"./AbstractChatCompletionRunner.mjs\";\nimport { isAssistantMessage } from \"./chatCompletionUtils.mjs\";\nexport class ChatCompletionRunner extends AbstractChatCompletionRunner {\n  /** @deprecated - please use `runTools` instead. */\n  static runFunctions(client, params, options) {\n    const runner = new ChatCompletionRunner();\n    const opts = {\n      ...options,\n      headers: {\n        ...options?.headers,\n        'X-Stainless-Helper-Method': 'runFunctions'\n      }\n    };\n    runner._run(() => runner._runFunctions(client, params, opts));\n    return runner;\n  }\n  static runTools(client, params, options) {\n    const runner = new ChatCompletionRunner();\n    const opts = {\n      ...options,\n      headers: {\n        ...options?.headers,\n        'X-Stainless-Helper-Method': 'runTools'\n      }\n    };\n    runner._run(() => runner._runTools(client, params, opts));\n    return runner;\n  }\n  _addMessage(message, emit = true) {\n    super._addMessage(message, emit);\n    if (isAssistantMessage(message) && message.content) {\n      this._emit('content', message.content);\n    }\n  }\n}\n", "const STR = 0b000000001;\nconst NUM = 0b000000010;\nconst ARR = 0b000000100;\nconst OBJ = 0b000001000;\nconst NULL = 0b000010000;\nconst BOOL = 0b000100000;\nconst NAN = 0b001000000;\nconst INFINITY = 0b010000000;\nconst MINUS_INFINITY = 0b100000000;\nconst INF = INFINITY | MINUS_INFINITY;\nconst SPECIAL = NULL | BOOL | INF | NAN;\nconst ATOM = STR | NUM | SPECIAL;\nconst COLLECTION = ARR | OBJ;\nconst ALL = ATOM | COLLECTION;\nconst Allow = {\n  STR,\n  NUM,\n  ARR,\n  OBJ,\n  NULL,\n  BOOL,\n  NAN,\n  INFINITY,\n  MINUS_INFINITY,\n  INF,\n  SPECIAL,\n  ATOM,\n  COLLECTION,\n  ALL\n};\n// The JSON string segment was unable to be parsed completely\nclass PartialJSON extends Error {}\nclass MalformedJSON extends Error {}\n/**\n * Parse incomplete JSON\n * @param {string} jsonString Partial JSON to be parsed\n * @param {number} allowPartial Specify what types are allowed to be partial, see {@link Allow} for details\n * @returns The parsed JSON\n * @throws {PartialJSON} If the JSON is incomplete (related to the `allow` parameter)\n * @throws {MalformedJSON} If the JSON is malformed\n */\nfunction parseJSON(jsonString, allowPartial = Allow.ALL) {\n  if (typeof jsonString !== 'string') {\n    throw new TypeError(`expecting str, got ${typeof jsonString}`);\n  }\n  if (!jsonString.trim()) {\n    throw new Error(`${jsonString} is empty`);\n  }\n  return _parseJSON(jsonString.trim(), allowPartial);\n}\nconst _parseJSON = (jsonString, allow) => {\n  const length = jsonString.length;\n  let index = 0;\n  const markPartialJSON = msg => {\n    throw new PartialJSON(`${msg} at position ${index}`);\n  };\n  const throwMalformedError = msg => {\n    throw new MalformedJSON(`${msg} at position ${index}`);\n  };\n  const parseAny = () => {\n    skipBlank();\n    if (index >= length) markPartialJSON('Unexpected end of input');\n    if (jsonString[index] === '\"') return parseStr();\n    if (jsonString[index] === '{') return parseObj();\n    if (jsonString[index] === '[') return parseArr();\n    if (jsonString.substring(index, index + 4) === 'null' || Allow.NULL & allow && length - index < 4 && 'null'.startsWith(jsonString.substring(index))) {\n      index += 4;\n      return null;\n    }\n    if (jsonString.substring(index, index + 4) === 'true' || Allow.BOOL & allow && length - index < 4 && 'true'.startsWith(jsonString.substring(index))) {\n      index += 4;\n      return true;\n    }\n    if (jsonString.substring(index, index + 5) === 'false' || Allow.BOOL & allow && length - index < 5 && 'false'.startsWith(jsonString.substring(index))) {\n      index += 5;\n      return false;\n    }\n    if (jsonString.substring(index, index + 8) === 'Infinity' || Allow.INFINITY & allow && length - index < 8 && 'Infinity'.startsWith(jsonString.substring(index))) {\n      index += 8;\n      return Infinity;\n    }\n    if (jsonString.substring(index, index + 9) === '-Infinity' || Allow.MINUS_INFINITY & allow && 1 < length - index && length - index < 9 && '-Infinity'.startsWith(jsonString.substring(index))) {\n      index += 9;\n      return -Infinity;\n    }\n    if (jsonString.substring(index, index + 3) === 'NaN' || Allow.NAN & allow && length - index < 3 && 'NaN'.startsWith(jsonString.substring(index))) {\n      index += 3;\n      return NaN;\n    }\n    return parseNum();\n  };\n  const parseStr = () => {\n    const start = index;\n    let escape = false;\n    index++; // skip initial quote\n    while (index < length && (jsonString[index] !== '\"' || escape && jsonString[index - 1] === '\\\\')) {\n      escape = jsonString[index] === '\\\\' ? !escape : false;\n      index++;\n    }\n    if (jsonString.charAt(index) == '\"') {\n      try {\n        return JSON.parse(jsonString.substring(start, ++index - Number(escape)));\n      } catch (e) {\n        throwMalformedError(String(e));\n      }\n    } else if (Allow.STR & allow) {\n      try {\n        return JSON.parse(jsonString.substring(start, index - Number(escape)) + '\"');\n      } catch (e) {\n        // SyntaxError: Invalid escape sequence\n        return JSON.parse(jsonString.substring(start, jsonString.lastIndexOf('\\\\')) + '\"');\n      }\n    }\n    markPartialJSON('Unterminated string literal');\n  };\n  const parseObj = () => {\n    index++; // skip initial brace\n    skipBlank();\n    const obj = {};\n    try {\n      while (jsonString[index] !== '}') {\n        skipBlank();\n        if (index >= length && Allow.OBJ & allow) return obj;\n        const key = parseStr();\n        skipBlank();\n        index++; // skip colon\n        try {\n          const value = parseAny();\n          Object.defineProperty(obj, key, {\n            value,\n            writable: true,\n            enumerable: true,\n            configurable: true\n          });\n        } catch (e) {\n          if (Allow.OBJ & allow) return obj;else throw e;\n        }\n        skipBlank();\n        if (jsonString[index] === ',') index++; // skip comma\n      }\n    } catch (e) {\n      if (Allow.OBJ & allow) return obj;else markPartialJSON(\"Expected '}' at end of object\");\n    }\n    index++; // skip final brace\n    return obj;\n  };\n  const parseArr = () => {\n    index++; // skip initial bracket\n    const arr = [];\n    try {\n      while (jsonString[index] !== ']') {\n        arr.push(parseAny());\n        skipBlank();\n        if (jsonString[index] === ',') {\n          index++; // skip comma\n        }\n      }\n    } catch (e) {\n      if (Allow.ARR & allow) {\n        return arr;\n      }\n      markPartialJSON(\"Expected ']' at end of array\");\n    }\n    index++; // skip final bracket\n    return arr;\n  };\n  const parseNum = () => {\n    if (index === 0) {\n      if (jsonString === '-' && Allow.NUM & allow) markPartialJSON(\"Not sure what '-' is\");\n      try {\n        return JSON.parse(jsonString);\n      } catch (e) {\n        if (Allow.NUM & allow) {\n          try {\n            if ('.' === jsonString[jsonString.length - 1]) return JSON.parse(jsonString.substring(0, jsonString.lastIndexOf('.')));\n            return JSON.parse(jsonString.substring(0, jsonString.lastIndexOf('e')));\n          } catch (e) {}\n        }\n        throwMalformedError(String(e));\n      }\n    }\n    const start = index;\n    if (jsonString[index] === '-') index++;\n    while (jsonString[index] && !',]}'.includes(jsonString[index])) index++;\n    if (index == length && !(Allow.NUM & allow)) markPartialJSON('Unterminated number literal');\n    try {\n      return JSON.parse(jsonString.substring(start, index));\n    } catch (e) {\n      if (jsonString.substring(start, index) === '-' && Allow.NUM & allow) markPartialJSON(\"Not sure what '-' is\");\n      try {\n        return JSON.parse(jsonString.substring(start, jsonString.lastIndexOf('e')));\n      } catch (e) {\n        throwMalformedError(String(e));\n      }\n    }\n  };\n  const skipBlank = () => {\n    while (index < length && ' \\n\\r\\t'.includes(jsonString[index])) {\n      index++;\n    }\n  };\n  return parseAny();\n};\n// using this function with malformed JSON is undefined behavior\nconst partialParse = input => parseJSON(input, Allow.ALL ^ Allow.NUM);\nexport { partialParse, PartialJSON, MalformedJSON };\n", "var __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _ChatCompletionStream_instances, _ChatCompletionStream_params, _ChatCompletionStream_choiceEventStates, _ChatCompletionStream_currentChatCompletionSnapshot, _ChatCompletionStream_beginRequest, _ChatCompletionStream_getChoiceEventState, _ChatCompletionStream_addChunk, _ChatCompletionStream_emitToolCallDoneEvent, _ChatCompletionStream_emitContentDoneEvents, _ChatCompletionStream_endRequest, _ChatCompletionStream_getAutoParseableResponseFormat, _ChatCompletionStream_accumulateChatCompletion;\nimport { OpenAIError, APIUserAbortError, LengthFinishReasonError, ContentFilterFinishReasonError } from 'openai/error';\nimport { AbstractChatCompletionRunner } from \"./AbstractChatCompletionRunner.mjs\";\nimport { Stream } from 'openai/streaming';\nimport { hasAutoParseableInput, isAutoParsableResponseFormat, isAutoParsableTool, maybeParseChatCompletion, shouldParseToolCall } from 'openai/lib/parser';\nimport { partialParse } from \"../_vendor/partial-json-parser/parser.mjs\";\nexport class ChatCompletionStream extends AbstractChatCompletionRunner {\n  constructor(params) {\n    super();\n    _ChatCompletionStream_instances.add(this);\n    _ChatCompletionStream_params.set(this, void 0);\n    _ChatCompletionStream_choiceEventStates.set(this, void 0);\n    _ChatCompletionStream_currentChatCompletionSnapshot.set(this, void 0);\n    __classPrivateFieldSet(this, _ChatCompletionStream_params, params, \"f\");\n    __classPrivateFieldSet(this, _ChatCompletionStream_choiceEventStates, [], \"f\");\n  }\n  get currentChatCompletionSnapshot() {\n    return __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n  }\n  /**\n   * Intended for use on the frontend, consuming a stream produced with\n   * `.toReadableStream()` on the backend.\n   *\n   * Note that messages sent to the model do not appear in `.on('message')`\n   * in this context.\n   */\n  static fromReadableStream(stream) {\n    const runner = new ChatCompletionStream(null);\n    runner._run(() => runner._fromReadableStream(stream));\n    return runner;\n  }\n  static createChatCompletion(client, params, options) {\n    const runner = new ChatCompletionStream(params);\n    runner._run(() => runner._runChatCompletion(client, {\n      ...params,\n      stream: true\n    }, {\n      ...options,\n      headers: {\n        ...options?.headers,\n        'X-Stainless-Helper-Method': 'stream'\n      }\n    }));\n    return runner;\n  }\n  async _createChatCompletion(client, params, options) {\n    super._createChatCompletion;\n    const signal = options?.signal;\n    if (signal) {\n      if (signal.aborted) this.controller.abort();\n      signal.addEventListener('abort', () => this.controller.abort());\n    }\n    __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_beginRequest).call(this);\n    const stream = await client.chat.completions.create({\n      ...params,\n      stream: true\n    }, {\n      ...options,\n      signal: this.controller.signal\n    });\n    this._connected();\n    for await (const chunk of stream) {\n      __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_addChunk).call(this, chunk);\n    }\n    if (stream.controller.signal?.aborted) {\n      throw new APIUserAbortError();\n    }\n    return this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n  }\n  async _fromReadableStream(readableStream, options) {\n    const signal = options?.signal;\n    if (signal) {\n      if (signal.aborted) this.controller.abort();\n      signal.addEventListener('abort', () => this.controller.abort());\n    }\n    __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_beginRequest).call(this);\n    this._connected();\n    const stream = Stream.fromReadableStream(readableStream, this.controller);\n    let chatId;\n    for await (const chunk of stream) {\n      if (chatId && chatId !== chunk.id) {\n        // A new request has been made.\n        this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n      }\n      __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_addChunk).call(this, chunk);\n      chatId = chunk.id;\n    }\n    if (stream.controller.signal?.aborted) {\n      throw new APIUserAbortError();\n    }\n    return this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n  }\n  [(_ChatCompletionStream_params = new WeakMap(), _ChatCompletionStream_choiceEventStates = new WeakMap(), _ChatCompletionStream_currentChatCompletionSnapshot = new WeakMap(), _ChatCompletionStream_instances = new WeakSet(), _ChatCompletionStream_beginRequest = function _ChatCompletionStream_beginRequest() {\n    if (this.ended) return;\n    __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, undefined, \"f\");\n  }, _ChatCompletionStream_getChoiceEventState = function _ChatCompletionStream_getChoiceEventState(choice) {\n    let state = __classPrivateFieldGet(this, _ChatCompletionStream_choiceEventStates, \"f\")[choice.index];\n    if (state) {\n      return state;\n    }\n    state = {\n      content_done: false,\n      refusal_done: false,\n      logprobs_content_done: false,\n      logprobs_refusal_done: false,\n      done_tool_calls: new Set(),\n      current_tool_call_index: null\n    };\n    __classPrivateFieldGet(this, _ChatCompletionStream_choiceEventStates, \"f\")[choice.index] = state;\n    return state;\n  }, _ChatCompletionStream_addChunk = function _ChatCompletionStream_addChunk(chunk) {\n    if (this.ended) return;\n    const completion = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_accumulateChatCompletion).call(this, chunk);\n    this._emit('chunk', chunk, completion);\n    for (const choice of chunk.choices) {\n      const choiceSnapshot = completion.choices[choice.index];\n      if (choice.delta.content != null && choiceSnapshot.message?.role === 'assistant' && choiceSnapshot.message?.content) {\n        this._emit('content', choice.delta.content, choiceSnapshot.message.content);\n        this._emit('content.delta', {\n          delta: choice.delta.content,\n          snapshot: choiceSnapshot.message.content,\n          parsed: choiceSnapshot.message.parsed\n        });\n      }\n      if (choice.delta.refusal != null && choiceSnapshot.message?.role === 'assistant' && choiceSnapshot.message?.refusal) {\n        this._emit('refusal.delta', {\n          delta: choice.delta.refusal,\n          snapshot: choiceSnapshot.message.refusal\n        });\n      }\n      if (choice.logprobs?.content != null && choiceSnapshot.message?.role === 'assistant') {\n        this._emit('logprobs.content.delta', {\n          content: choice.logprobs?.content,\n          snapshot: choiceSnapshot.logprobs?.content ?? []\n        });\n      }\n      if (choice.logprobs?.refusal != null && choiceSnapshot.message?.role === 'assistant') {\n        this._emit('logprobs.refusal.delta', {\n          refusal: choice.logprobs?.refusal,\n          snapshot: choiceSnapshot.logprobs?.refusal ?? []\n        });\n      }\n      const state = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n      if (choiceSnapshot.finish_reason) {\n        __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitContentDoneEvents).call(this, choiceSnapshot);\n        if (state.current_tool_call_index != null) {\n          __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitToolCallDoneEvent).call(this, choiceSnapshot, state.current_tool_call_index);\n        }\n      }\n      for (const toolCall of choice.delta.tool_calls ?? []) {\n        if (state.current_tool_call_index !== toolCall.index) {\n          __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitContentDoneEvents).call(this, choiceSnapshot);\n          // new tool call started, the previous one is done\n          if (state.current_tool_call_index != null) {\n            __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitToolCallDoneEvent).call(this, choiceSnapshot, state.current_tool_call_index);\n          }\n        }\n        state.current_tool_call_index = toolCall.index;\n      }\n      for (const toolCallDelta of choice.delta.tool_calls ?? []) {\n        const toolCallSnapshot = choiceSnapshot.message.tool_calls?.[toolCallDelta.index];\n        if (!toolCallSnapshot?.type) {\n          continue;\n        }\n        if (toolCallSnapshot?.type === 'function') {\n          this._emit('tool_calls.function.arguments.delta', {\n            name: toolCallSnapshot.function?.name,\n            index: toolCallDelta.index,\n            arguments: toolCallSnapshot.function.arguments,\n            parsed_arguments: toolCallSnapshot.function.parsed_arguments,\n            arguments_delta: toolCallDelta.function?.arguments ?? ''\n          });\n        } else {\n          assertNever(toolCallSnapshot?.type);\n        }\n      }\n    }\n  }, _ChatCompletionStream_emitToolCallDoneEvent = function _ChatCompletionStream_emitToolCallDoneEvent(choiceSnapshot, toolCallIndex) {\n    const state = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n    if (state.done_tool_calls.has(toolCallIndex)) {\n      // we've already fired the done event\n      return;\n    }\n    const toolCallSnapshot = choiceSnapshot.message.tool_calls?.[toolCallIndex];\n    if (!toolCallSnapshot) {\n      throw new Error('no tool call snapshot');\n    }\n    if (!toolCallSnapshot.type) {\n      throw new Error('tool call snapshot missing `type`');\n    }\n    if (toolCallSnapshot.type === 'function') {\n      const inputTool = __classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\")?.tools?.find(tool => tool.type === 'function' && tool.function.name === toolCallSnapshot.function.name);\n      this._emit('tool_calls.function.arguments.done', {\n        name: toolCallSnapshot.function.name,\n        index: toolCallIndex,\n        arguments: toolCallSnapshot.function.arguments,\n        parsed_arguments: isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCallSnapshot.function.arguments) : inputTool?.function.strict ? JSON.parse(toolCallSnapshot.function.arguments) : null\n      });\n    } else {\n      assertNever(toolCallSnapshot.type);\n    }\n  }, _ChatCompletionStream_emitContentDoneEvents = function _ChatCompletionStream_emitContentDoneEvents(choiceSnapshot) {\n    const state = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n    if (choiceSnapshot.message.content && !state.content_done) {\n      state.content_done = true;\n      const responseFormat = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getAutoParseableResponseFormat).call(this);\n      this._emit('content.done', {\n        content: choiceSnapshot.message.content,\n        parsed: responseFormat ? responseFormat.$parseRaw(choiceSnapshot.message.content) : null\n      });\n    }\n    if (choiceSnapshot.message.refusal && !state.refusal_done) {\n      state.refusal_done = true;\n      this._emit('refusal.done', {\n        refusal: choiceSnapshot.message.refusal\n      });\n    }\n    if (choiceSnapshot.logprobs?.content && !state.logprobs_content_done) {\n      state.logprobs_content_done = true;\n      this._emit('logprobs.content.done', {\n        content: choiceSnapshot.logprobs.content\n      });\n    }\n    if (choiceSnapshot.logprobs?.refusal && !state.logprobs_refusal_done) {\n      state.logprobs_refusal_done = true;\n      this._emit('logprobs.refusal.done', {\n        refusal: choiceSnapshot.logprobs.refusal\n      });\n    }\n  }, _ChatCompletionStream_endRequest = function _ChatCompletionStream_endRequest() {\n    if (this.ended) {\n      throw new OpenAIError(`stream has ended, this shouldn't happen`);\n    }\n    const snapshot = __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n    if (!snapshot) {\n      throw new OpenAIError(`request ended without sending any chunks`);\n    }\n    __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, undefined, \"f\");\n    __classPrivateFieldSet(this, _ChatCompletionStream_choiceEventStates, [], \"f\");\n    return finalizeChatCompletion(snapshot, __classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\"));\n  }, _ChatCompletionStream_getAutoParseableResponseFormat = function _ChatCompletionStream_getAutoParseableResponseFormat() {\n    const responseFormat = __classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\")?.response_format;\n    if (isAutoParsableResponseFormat(responseFormat)) {\n      return responseFormat;\n    }\n    return null;\n  }, _ChatCompletionStream_accumulateChatCompletion = function _ChatCompletionStream_accumulateChatCompletion(chunk) {\n    var _a, _b, _c, _d;\n    let snapshot = __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n    const {\n      choices,\n      ...rest\n    } = chunk;\n    if (!snapshot) {\n      snapshot = __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, {\n        ...rest,\n        choices: []\n      }, \"f\");\n    } else {\n      Object.assign(snapshot, rest);\n    }\n    for (const {\n      delta,\n      finish_reason,\n      index,\n      logprobs = null,\n      ...other\n    } of chunk.choices) {\n      let choice = snapshot.choices[index];\n      if (!choice) {\n        choice = snapshot.choices[index] = {\n          finish_reason,\n          index,\n          message: {},\n          logprobs,\n          ...other\n        };\n      }\n      if (logprobs) {\n        if (!choice.logprobs) {\n          choice.logprobs = Object.assign({}, logprobs);\n        } else {\n          const {\n            content,\n            refusal,\n            ...rest\n          } = logprobs;\n          assertIsEmpty(rest);\n          Object.assign(choice.logprobs, rest);\n          if (content) {\n            (_a = choice.logprobs).content ?? (_a.content = []);\n            choice.logprobs.content.push(...content);\n          }\n          if (refusal) {\n            (_b = choice.logprobs).refusal ?? (_b.refusal = []);\n            choice.logprobs.refusal.push(...refusal);\n          }\n        }\n      }\n      if (finish_reason) {\n        choice.finish_reason = finish_reason;\n        if (__classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\") && hasAutoParseableInput(__classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\"))) {\n          if (finish_reason === 'length') {\n            throw new LengthFinishReasonError();\n          }\n          if (finish_reason === 'content_filter') {\n            throw new ContentFilterFinishReasonError();\n          }\n        }\n      }\n      Object.assign(choice, other);\n      if (!delta) continue; // Shouldn't happen; just in case.\n      const {\n        content,\n        refusal,\n        function_call,\n        role,\n        tool_calls,\n        ...rest\n      } = delta;\n      assertIsEmpty(rest);\n      Object.assign(choice.message, rest);\n      if (refusal) {\n        choice.message.refusal = (choice.message.refusal || '') + refusal;\n      }\n      if (role) choice.message.role = role;\n      if (function_call) {\n        if (!choice.message.function_call) {\n          choice.message.function_call = function_call;\n        } else {\n          if (function_call.name) choice.message.function_call.name = function_call.name;\n          if (function_call.arguments) {\n            (_c = choice.message.function_call).arguments ?? (_c.arguments = '');\n            choice.message.function_call.arguments += function_call.arguments;\n          }\n        }\n      }\n      if (content) {\n        choice.message.content = (choice.message.content || '') + content;\n        if (!choice.message.refusal && __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getAutoParseableResponseFormat).call(this)) {\n          choice.message.parsed = partialParse(choice.message.content);\n        }\n      }\n      if (tool_calls) {\n        if (!choice.message.tool_calls) choice.message.tool_calls = [];\n        for (const {\n          index,\n          id,\n          type,\n          function: fn,\n          ...rest\n        } of tool_calls) {\n          const tool_call = (_d = choice.message.tool_calls)[index] ?? (_d[index] = {});\n          Object.assign(tool_call, rest);\n          if (id) tool_call.id = id;\n          if (type) tool_call.type = type;\n          if (fn) tool_call.function ?? (tool_call.function = {\n            name: fn.name ?? '',\n            arguments: ''\n          });\n          if (fn?.name) tool_call.function.name = fn.name;\n          if (fn?.arguments) {\n            tool_call.function.arguments += fn.arguments;\n            if (shouldParseToolCall(__classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\"), tool_call)) {\n              tool_call.function.parsed_arguments = partialParse(tool_call.function.arguments);\n            }\n          }\n        }\n      }\n    }\n    return snapshot;\n  }, Symbol.asyncIterator)]() {\n    const pushQueue = [];\n    const readQueue = [];\n    let done = false;\n    this.on('chunk', chunk => {\n      const reader = readQueue.shift();\n      if (reader) {\n        reader.resolve(chunk);\n      } else {\n        pushQueue.push(chunk);\n      }\n    });\n    this.on('end', () => {\n      done = true;\n      for (const reader of readQueue) {\n        reader.resolve(undefined);\n      }\n      readQueue.length = 0;\n    });\n    this.on('abort', err => {\n      done = true;\n      for (const reader of readQueue) {\n        reader.reject(err);\n      }\n      readQueue.length = 0;\n    });\n    this.on('error', err => {\n      done = true;\n      for (const reader of readQueue) {\n        reader.reject(err);\n      }\n      readQueue.length = 0;\n    });\n    return {\n      next: async () => {\n        if (!pushQueue.length) {\n          if (done) {\n            return {\n              value: undefined,\n              done: true\n            };\n          }\n          return new Promise((resolve, reject) => readQueue.push({\n            resolve,\n            reject\n          })).then(chunk => chunk ? {\n            value: chunk,\n            done: false\n          } : {\n            value: undefined,\n            done: true\n          });\n        }\n        const chunk = pushQueue.shift();\n        return {\n          value: chunk,\n          done: false\n        };\n      },\n      return: async () => {\n        this.abort();\n        return {\n          value: undefined,\n          done: true\n        };\n      }\n    };\n  }\n  toReadableStream() {\n    const stream = new Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n    return stream.toReadableStream();\n  }\n}\nfunction finalizeChatCompletion(snapshot, params) {\n  const {\n    id,\n    choices,\n    created,\n    model,\n    system_fingerprint,\n    ...rest\n  } = snapshot;\n  const completion = {\n    ...rest,\n    id,\n    choices: choices.map(({\n      message,\n      finish_reason,\n      index,\n      logprobs,\n      ...choiceRest\n    }) => {\n      if (!finish_reason) {\n        throw new OpenAIError(`missing finish_reason for choice ${index}`);\n      }\n      const {\n        content = null,\n        function_call,\n        tool_calls,\n        ...messageRest\n      } = message;\n      const role = message.role; // this is what we expect; in theory it could be different which would make our types a slight lie but would be fine.\n      if (!role) {\n        throw new OpenAIError(`missing role for choice ${index}`);\n      }\n      if (function_call) {\n        const {\n          arguments: args,\n          name\n        } = function_call;\n        if (args == null) {\n          throw new OpenAIError(`missing function_call.arguments for choice ${index}`);\n        }\n        if (!name) {\n          throw new OpenAIError(`missing function_call.name for choice ${index}`);\n        }\n        return {\n          ...choiceRest,\n          message: {\n            content,\n            function_call: {\n              arguments: args,\n              name\n            },\n            role,\n            refusal: message.refusal ?? null\n          },\n          finish_reason,\n          index,\n          logprobs\n        };\n      }\n      if (tool_calls) {\n        return {\n          ...choiceRest,\n          index,\n          finish_reason,\n          logprobs,\n          message: {\n            ...messageRest,\n            role,\n            content,\n            refusal: message.refusal ?? null,\n            tool_calls: tool_calls.map((tool_call, i) => {\n              const {\n                function: fn,\n                type,\n                id,\n                ...toolRest\n              } = tool_call;\n              const {\n                arguments: args,\n                name,\n                ...fnRest\n              } = fn || {};\n              if (id == null) {\n                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].id\\n${str(snapshot)}`);\n              }\n              if (type == null) {\n                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].type\\n${str(snapshot)}`);\n              }\n              if (name == null) {\n                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].function.name\\n${str(snapshot)}`);\n              }\n              if (args == null) {\n                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].function.arguments\\n${str(snapshot)}`);\n              }\n              return {\n                ...toolRest,\n                id,\n                type,\n                function: {\n                  ...fnRest,\n                  name,\n                  arguments: args\n                }\n              };\n            })\n          }\n        };\n      }\n      return {\n        ...choiceRest,\n        message: {\n          ...messageRest,\n          content,\n          role,\n          refusal: message.refusal ?? null\n        },\n        finish_reason,\n        index,\n        logprobs\n      };\n    }),\n    created,\n    model,\n    object: 'chat.completion',\n    ...(system_fingerprint ? {\n      system_fingerprint\n    } : {})\n  };\n  return maybeParseChatCompletion(completion, params);\n}\nfunction str(x) {\n  return JSON.stringify(x);\n}\n/**\n * Ensures the given argument is an empty object, useful for\n * asserting that all known properties on an object have been\n * destructured.\n */\nfunction assertIsEmpty(obj) {\n  return;\n}\nfunction assertNever(_x) {}\n", "import { ChatCompletionStream } from \"./ChatCompletionStream.mjs\";\nexport class ChatCompletionStreamingRunner extends ChatCompletionStream {\n  static fromReadableStream(stream) {\n    const runner = new ChatCompletionStreamingRunner(null);\n    runner._run(() => runner._fromReadableStream(stream));\n    return runner;\n  }\n  /** @deprecated - please use `runTools` instead. */\n  static runFunctions(client, params, options) {\n    const runner = new ChatCompletionStreamingRunner(null);\n    const opts = {\n      ...options,\n      headers: {\n        ...options?.headers,\n        'X-Stainless-Helper-Method': 'runFunctions'\n      }\n    };\n    runner._run(() => runner._runFunctions(client, params, opts));\n    return runner;\n  }\n  static runTools(client, params, options) {\n    const runner = new ChatCompletionStreamingRunner(\n    // @ts-expect-error TODO these types are incompatible\n    params);\n    const opts = {\n      ...options,\n      headers: {\n        ...options?.headers,\n        'X-Stainless-Helper-Method': 'runTools'\n      }\n    };\n    runner._run(() => runner._runTools(client, params, opts));\n    return runner;\n  }\n}\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { ChatCompletionRunner } from \"../../../lib/ChatCompletionRunner.mjs\";\nexport { ChatCompletionRunner } from \"../../../lib/ChatCompletionRunner.mjs\";\nimport { ChatCompletionStreamingRunner } from \"../../../lib/ChatCompletionStreamingRunner.mjs\";\nexport { ChatCompletionStreamingRunner } from \"../../../lib/ChatCompletionStreamingRunner.mjs\";\nexport { ParsingFunction, ParsingToolFunction } from \"../../../lib/RunnableFunction.mjs\";\nimport { ChatCompletionStream } from \"../../../lib/ChatCompletionStream.mjs\";\nimport { parseChatCompletion, validateInputTools } from \"../../../lib/parser.mjs\";\nexport { ChatCompletionStream } from \"../../../lib/ChatCompletionStream.mjs\";\nexport class Completions extends APIResource {\n  parse(body, options) {\n    validateInputTools(body.tools);\n    return this._client.chat.completions.create(body, {\n      ...options,\n      headers: {\n        ...options?.headers,\n        'X-Stainless-Helper-Method': 'beta.chat.completions.parse'\n      }\n    })._thenUnwrap(completion => parseChatCompletion(completion, body));\n  }\n  runFunctions(body, options) {\n    if (body.stream) {\n      return ChatCompletionStreamingRunner.runFunctions(this._client, body, options);\n    }\n    return ChatCompletionRunner.runFunctions(this._client, body, options);\n  }\n  runTools(body, options) {\n    if (body.stream) {\n      return ChatCompletionStreamingRunner.runTools(this._client, body, options);\n    }\n    return ChatCompletionRunner.runTools(this._client, body, options);\n  }\n  /**\n   * Creates a chat completion stream\n   */\n  stream(body, options) {\n    return ChatCompletionStream.createChatCompletion(this._client, body, options);\n  }\n}\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport * as CompletionsAPI from \"./completions.mjs\";\nexport class Chat extends APIResource {\n  constructor() {\n    super(...arguments);\n    this.completions = new CompletionsAPI.Completions(this._client);\n  }\n}\n(function (Chat) {\n  Chat.Completions = CompletionsAPI.Completions;\n})(Chat || (Chat = {}));\n", "var __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar _AssistantStream_instances, _AssistantStream_events, _AssistantStream_runStepSnapshots, _AssistantStream_messageSnapshots, _AssistantStream_messageSnapshot, _AssistantStream_finalRun, _AssistantStream_currentContentIndex, _AssistantStream_currentContent, _AssistantStream_currentToolCallIndex, _AssistantStream_currentToolCall, _AssistantStream_currentEvent, _AssistantStream_currentRunSnapshot, _AssistantStream_currentRunStepSnapshot, _AssistantStream_addEvent, _AssistantStream_endRequest, _AssistantStream_handleMessage, _AssistantStream_handleRunStep, _AssistantStream_handleEvent, _AssistantStream_accumulateRunStep, _AssistantStream_accumulateMessage, _AssistantStream_accumulateContent, _AssistantStream_handleRun;\nimport * as Core from 'openai/core';\nimport { Stream } from 'openai/streaming';\nimport { APIUserAbortError, OpenAIError } from 'openai/error';\nimport { EventStream } from \"./EventStream.mjs\";\nexport class AssistantStream extends EventStream {\n  constructor() {\n    super(...arguments);\n    _AssistantStream_instances.add(this);\n    //Track all events in a single list for reference\n    _AssistantStream_events.set(this, []);\n    //Used to accumulate deltas\n    //We are accumulating many types so the value here is not strict\n    _AssistantStream_runStepSnapshots.set(this, {});\n    _AssistantStream_messageSnapshots.set(this, {});\n    _AssistantStream_messageSnapshot.set(this, void 0);\n    _AssistantStream_finalRun.set(this, void 0);\n    _AssistantStream_currentContentIndex.set(this, void 0);\n    _AssistantStream_currentContent.set(this, void 0);\n    _AssistantStream_currentToolCallIndex.set(this, void 0);\n    _AssistantStream_currentToolCall.set(this, void 0);\n    //For current snapshot methods\n    _AssistantStream_currentEvent.set(this, void 0);\n    _AssistantStream_currentRunSnapshot.set(this, void 0);\n    _AssistantStream_currentRunStepSnapshot.set(this, void 0);\n  }\n  [(_AssistantStream_events = new WeakMap(), _AssistantStream_runStepSnapshots = new WeakMap(), _AssistantStream_messageSnapshots = new WeakMap(), _AssistantStream_messageSnapshot = new WeakMap(), _AssistantStream_finalRun = new WeakMap(), _AssistantStream_currentContentIndex = new WeakMap(), _AssistantStream_currentContent = new WeakMap(), _AssistantStream_currentToolCallIndex = new WeakMap(), _AssistantStream_currentToolCall = new WeakMap(), _AssistantStream_currentEvent = new WeakMap(), _AssistantStream_currentRunSnapshot = new WeakMap(), _AssistantStream_currentRunStepSnapshot = new WeakMap(), _AssistantStream_instances = new WeakSet(), Symbol.asyncIterator)]() {\n    const pushQueue = [];\n    const readQueue = [];\n    let done = false;\n    //Catch all for passing along all events\n    this.on('event', event => {\n      const reader = readQueue.shift();\n      if (reader) {\n        reader.resolve(event);\n      } else {\n        pushQueue.push(event);\n      }\n    });\n    this.on('end', () => {\n      done = true;\n      for (const reader of readQueue) {\n        reader.resolve(undefined);\n      }\n      readQueue.length = 0;\n    });\n    this.on('abort', err => {\n      done = true;\n      for (const reader of readQueue) {\n        reader.reject(err);\n      }\n      readQueue.length = 0;\n    });\n    this.on('error', err => {\n      done = true;\n      for (const reader of readQueue) {\n        reader.reject(err);\n      }\n      readQueue.length = 0;\n    });\n    return {\n      next: async () => {\n        if (!pushQueue.length) {\n          if (done) {\n            return {\n              value: undefined,\n              done: true\n            };\n          }\n          return new Promise((resolve, reject) => readQueue.push({\n            resolve,\n            reject\n          })).then(chunk => chunk ? {\n            value: chunk,\n            done: false\n          } : {\n            value: undefined,\n            done: true\n          });\n        }\n        const chunk = pushQueue.shift();\n        return {\n          value: chunk,\n          done: false\n        };\n      },\n      return: async () => {\n        this.abort();\n        return {\n          value: undefined,\n          done: true\n        };\n      }\n    };\n  }\n  static fromReadableStream(stream) {\n    const runner = new AssistantStream();\n    runner._run(() => runner._fromReadableStream(stream));\n    return runner;\n  }\n  async _fromReadableStream(readableStream, options) {\n    const signal = options?.signal;\n    if (signal) {\n      if (signal.aborted) this.controller.abort();\n      signal.addEventListener('abort', () => this.controller.abort());\n    }\n    this._connected();\n    const stream = Stream.fromReadableStream(readableStream, this.controller);\n    for await (const event of stream) {\n      __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n    }\n    if (stream.controller.signal?.aborted) {\n      throw new APIUserAbortError();\n    }\n    return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n  }\n  toReadableStream() {\n    const stream = new Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n    return stream.toReadableStream();\n  }\n  static createToolAssistantStream(threadId, runId, runs, params, options) {\n    const runner = new AssistantStream();\n    runner._run(() => runner._runToolAssistantStream(threadId, runId, runs, params, {\n      ...options,\n      headers: {\n        ...options?.headers,\n        'X-Stainless-Helper-Method': 'stream'\n      }\n    }));\n    return runner;\n  }\n  async _createToolAssistantStream(run, threadId, runId, params, options) {\n    const signal = options?.signal;\n    if (signal) {\n      if (signal.aborted) this.controller.abort();\n      signal.addEventListener('abort', () => this.controller.abort());\n    }\n    const body = {\n      ...params,\n      stream: true\n    };\n    const stream = await run.submitToolOutputs(threadId, runId, body, {\n      ...options,\n      signal: this.controller.signal\n    });\n    this._connected();\n    for await (const event of stream) {\n      __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n    }\n    if (stream.controller.signal?.aborted) {\n      throw new APIUserAbortError();\n    }\n    return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n  }\n  static createThreadAssistantStream(params, thread, options) {\n    const runner = new AssistantStream();\n    runner._run(() => runner._threadAssistantStream(params, thread, {\n      ...options,\n      headers: {\n        ...options?.headers,\n        'X-Stainless-Helper-Method': 'stream'\n      }\n    }));\n    return runner;\n  }\n  static createAssistantStream(threadId, runs, params, options) {\n    const runner = new AssistantStream();\n    runner._run(() => runner._runAssistantStream(threadId, runs, params, {\n      ...options,\n      headers: {\n        ...options?.headers,\n        'X-Stainless-Helper-Method': 'stream'\n      }\n    }));\n    return runner;\n  }\n  currentEvent() {\n    return __classPrivateFieldGet(this, _AssistantStream_currentEvent, \"f\");\n  }\n  currentRun() {\n    return __classPrivateFieldGet(this, _AssistantStream_currentRunSnapshot, \"f\");\n  }\n  currentMessageSnapshot() {\n    return __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\");\n  }\n  currentRunStepSnapshot() {\n    return __classPrivateFieldGet(this, _AssistantStream_currentRunStepSnapshot, \"f\");\n  }\n  async finalRunSteps() {\n    await this.done();\n    return Object.values(__classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\"));\n  }\n  async finalMessages() {\n    await this.done();\n    return Object.values(__classPrivateFieldGet(this, _AssistantStream_messageSnapshots, \"f\"));\n  }\n  async finalRun() {\n    await this.done();\n    if (!__classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\")) throw Error('Final run was not received.');\n    return __classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\");\n  }\n  async _createThreadAssistantStream(thread, params, options) {\n    const signal = options?.signal;\n    if (signal) {\n      if (signal.aborted) this.controller.abort();\n      signal.addEventListener('abort', () => this.controller.abort());\n    }\n    const body = {\n      ...params,\n      stream: true\n    };\n    const stream = await thread.createAndRun(body, {\n      ...options,\n      signal: this.controller.signal\n    });\n    this._connected();\n    for await (const event of stream) {\n      __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n    }\n    if (stream.controller.signal?.aborted) {\n      throw new APIUserAbortError();\n    }\n    return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n  }\n  async _createAssistantStream(run, threadId, params, options) {\n    const signal = options?.signal;\n    if (signal) {\n      if (signal.aborted) this.controller.abort();\n      signal.addEventListener('abort', () => this.controller.abort());\n    }\n    const body = {\n      ...params,\n      stream: true\n    };\n    const stream = await run.create(threadId, body, {\n      ...options,\n      signal: this.controller.signal\n    });\n    this._connected();\n    for await (const event of stream) {\n      __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n    }\n    if (stream.controller.signal?.aborted) {\n      throw new APIUserAbortError();\n    }\n    return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n  }\n  static accumulateDelta(acc, delta) {\n    for (const [key, deltaValue] of Object.entries(delta)) {\n      if (!acc.hasOwnProperty(key)) {\n        acc[key] = deltaValue;\n        continue;\n      }\n      let accValue = acc[key];\n      if (accValue === null || accValue === undefined) {\n        acc[key] = deltaValue;\n        continue;\n      }\n      // We don't accumulate these special properties\n      if (key === 'index' || key === 'type') {\n        acc[key] = deltaValue;\n        continue;\n      }\n      // Type-specific accumulation logic\n      if (typeof accValue === 'string' && typeof deltaValue === 'string') {\n        accValue += deltaValue;\n      } else if (typeof accValue === 'number' && typeof deltaValue === 'number') {\n        accValue += deltaValue;\n      } else if (Core.isObj(accValue) && Core.isObj(deltaValue)) {\n        accValue = this.accumulateDelta(accValue, deltaValue);\n      } else if (Array.isArray(accValue) && Array.isArray(deltaValue)) {\n        if (accValue.every(x => typeof x === 'string' || typeof x === 'number')) {\n          accValue.push(...deltaValue); // Use spread syntax for efficient addition\n          continue;\n        }\n        for (const deltaEntry of deltaValue) {\n          if (!Core.isObj(deltaEntry)) {\n            throw new Error(`Expected array delta entry to be an object but got: ${deltaEntry}`);\n          }\n          const index = deltaEntry['index'];\n          if (index == null) {\n            console.error(deltaEntry);\n            throw new Error('Expected array delta entry to have an `index` property');\n          }\n          if (typeof index !== 'number') {\n            throw new Error(`Expected array delta entry \\`index\\` property to be a number but got ${index}`);\n          }\n          const accEntry = accValue[index];\n          if (accEntry == null) {\n            accValue.push(deltaEntry);\n          } else {\n            accValue[index] = this.accumulateDelta(accEntry, deltaEntry);\n          }\n        }\n        continue;\n      } else {\n        throw Error(`Unhandled record type: ${key}, deltaValue: ${deltaValue}, accValue: ${accValue}`);\n      }\n      acc[key] = accValue;\n    }\n    return acc;\n  }\n  _addRun(run) {\n    return run;\n  }\n  async _threadAssistantStream(params, thread, options) {\n    return await this._createThreadAssistantStream(thread, params, options);\n  }\n  async _runAssistantStream(threadId, runs, params, options) {\n    return await this._createAssistantStream(runs, threadId, params, options);\n  }\n  async _runToolAssistantStream(threadId, runId, runs, params, options) {\n    return await this._createToolAssistantStream(runs, threadId, runId, params, options);\n  }\n}\n_AssistantStream_addEvent = function _AssistantStream_addEvent(event) {\n  if (this.ended) return;\n  __classPrivateFieldSet(this, _AssistantStream_currentEvent, event, \"f\");\n  __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleEvent).call(this, event);\n  switch (event.event) {\n    case 'thread.created':\n      //No action on this event.\n      break;\n    case 'thread.run.created':\n    case 'thread.run.queued':\n    case 'thread.run.in_progress':\n    case 'thread.run.requires_action':\n    case 'thread.run.completed':\n    case 'thread.run.failed':\n    case 'thread.run.cancelling':\n    case 'thread.run.cancelled':\n    case 'thread.run.expired':\n      __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleRun).call(this, event);\n      break;\n    case 'thread.run.step.created':\n    case 'thread.run.step.in_progress':\n    case 'thread.run.step.delta':\n    case 'thread.run.step.completed':\n    case 'thread.run.step.failed':\n    case 'thread.run.step.cancelled':\n    case 'thread.run.step.expired':\n      __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleRunStep).call(this, event);\n      break;\n    case 'thread.message.created':\n    case 'thread.message.in_progress':\n    case 'thread.message.delta':\n    case 'thread.message.completed':\n    case 'thread.message.incomplete':\n      __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleMessage).call(this, event);\n      break;\n    case 'error':\n      //This is included for completeness, but errors are processed in the SSE event processing so this should not occur\n      throw new Error('Encountered an error event in event processing - errors should be processed earlier');\n  }\n}, _AssistantStream_endRequest = function _AssistantStream_endRequest() {\n  if (this.ended) {\n    throw new OpenAIError(`stream has ended, this shouldn't happen`);\n  }\n  if (!__classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\")) throw Error('Final run has not been received');\n  return __classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\");\n}, _AssistantStream_handleMessage = function _AssistantStream_handleMessage(event) {\n  const [accumulatedMessage, newContent] = __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateMessage).call(this, event, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n  __classPrivateFieldSet(this, _AssistantStream_messageSnapshot, accumulatedMessage, \"f\");\n  __classPrivateFieldGet(this, _AssistantStream_messageSnapshots, \"f\")[accumulatedMessage.id] = accumulatedMessage;\n  for (const content of newContent) {\n    const snapshotContent = accumulatedMessage.content[content.index];\n    if (snapshotContent?.type == 'text') {\n      this._emit('textCreated', snapshotContent.text);\n    }\n  }\n  switch (event.event) {\n    case 'thread.message.created':\n      this._emit('messageCreated', event.data);\n      break;\n    case 'thread.message.in_progress':\n      break;\n    case 'thread.message.delta':\n      this._emit('messageDelta', event.data.delta, accumulatedMessage);\n      if (event.data.delta.content) {\n        for (const content of event.data.delta.content) {\n          //If it is text delta, emit a text delta event\n          if (content.type == 'text' && content.text) {\n            let textDelta = content.text;\n            let snapshot = accumulatedMessage.content[content.index];\n            if (snapshot && snapshot.type == 'text') {\n              this._emit('textDelta', textDelta, snapshot.text);\n            } else {\n              throw Error('The snapshot associated with this text delta is not text or missing');\n            }\n          }\n          if (content.index != __classPrivateFieldGet(this, _AssistantStream_currentContentIndex, \"f\")) {\n            //See if we have in progress content\n            if (__classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\")) {\n              switch (__classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\").type) {\n                case 'text':\n                  this._emit('textDone', __classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\").text, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                  break;\n                case 'image_file':\n                  this._emit('imageFileDone', __classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\").image_file, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                  break;\n              }\n            }\n            __classPrivateFieldSet(this, _AssistantStream_currentContentIndex, content.index, \"f\");\n          }\n          __classPrivateFieldSet(this, _AssistantStream_currentContent, accumulatedMessage.content[content.index], \"f\");\n        }\n      }\n      break;\n    case 'thread.message.completed':\n    case 'thread.message.incomplete':\n      //We emit the latest content we were working on on completion (including incomplete)\n      if (__classPrivateFieldGet(this, _AssistantStream_currentContentIndex, \"f\") !== undefined) {\n        const currentContent = event.data.content[__classPrivateFieldGet(this, _AssistantStream_currentContentIndex, \"f\")];\n        if (currentContent) {\n          switch (currentContent.type) {\n            case 'image_file':\n              this._emit('imageFileDone', currentContent.image_file, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n              break;\n            case 'text':\n              this._emit('textDone', currentContent.text, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n              break;\n          }\n        }\n      }\n      if (__classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\")) {\n        this._emit('messageDone', event.data);\n      }\n      __classPrivateFieldSet(this, _AssistantStream_messageSnapshot, undefined, \"f\");\n  }\n}, _AssistantStream_handleRunStep = function _AssistantStream_handleRunStep(event) {\n  const accumulatedRunStep = __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateRunStep).call(this, event);\n  __classPrivateFieldSet(this, _AssistantStream_currentRunStepSnapshot, accumulatedRunStep, \"f\");\n  switch (event.event) {\n    case 'thread.run.step.created':\n      this._emit('runStepCreated', event.data);\n      break;\n    case 'thread.run.step.delta':\n      const delta = event.data.delta;\n      if (delta.step_details && delta.step_details.type == 'tool_calls' && delta.step_details.tool_calls && accumulatedRunStep.step_details.type == 'tool_calls') {\n        for (const toolCall of delta.step_details.tool_calls) {\n          if (toolCall.index == __classPrivateFieldGet(this, _AssistantStream_currentToolCallIndex, \"f\")) {\n            this._emit('toolCallDelta', toolCall, accumulatedRunStep.step_details.tool_calls[toolCall.index]);\n          } else {\n            if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\")) {\n              this._emit('toolCallDone', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n            }\n            __classPrivateFieldSet(this, _AssistantStream_currentToolCallIndex, toolCall.index, \"f\");\n            __classPrivateFieldSet(this, _AssistantStream_currentToolCall, accumulatedRunStep.step_details.tool_calls[toolCall.index], \"f\");\n            if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\")) this._emit('toolCallCreated', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n          }\n        }\n      }\n      this._emit('runStepDelta', event.data.delta, accumulatedRunStep);\n      break;\n    case 'thread.run.step.completed':\n    case 'thread.run.step.failed':\n    case 'thread.run.step.cancelled':\n    case 'thread.run.step.expired':\n      __classPrivateFieldSet(this, _AssistantStream_currentRunStepSnapshot, undefined, \"f\");\n      const details = event.data.step_details;\n      if (details.type == 'tool_calls') {\n        if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\")) {\n          this._emit('toolCallDone', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n          __classPrivateFieldSet(this, _AssistantStream_currentToolCall, undefined, \"f\");\n        }\n      }\n      this._emit('runStepDone', event.data, accumulatedRunStep);\n      break;\n    case 'thread.run.step.in_progress':\n      break;\n  }\n}, _AssistantStream_handleEvent = function _AssistantStream_handleEvent(event) {\n  __classPrivateFieldGet(this, _AssistantStream_events, \"f\").push(event);\n  this._emit('event', event);\n}, _AssistantStream_accumulateRunStep = function _AssistantStream_accumulateRunStep(event) {\n  switch (event.event) {\n    case 'thread.run.step.created':\n      __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = event.data;\n      return event.data;\n    case 'thread.run.step.delta':\n      let snapshot = __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n      if (!snapshot) {\n        throw Error('Received a RunStepDelta before creation of a snapshot');\n      }\n      let data = event.data;\n      if (data.delta) {\n        const accumulated = AssistantStream.accumulateDelta(snapshot, data.delta);\n        __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = accumulated;\n      }\n      return __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n    case 'thread.run.step.completed':\n    case 'thread.run.step.failed':\n    case 'thread.run.step.cancelled':\n    case 'thread.run.step.expired':\n    case 'thread.run.step.in_progress':\n      __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = event.data;\n      break;\n  }\n  if (__classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id]) return __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n  throw new Error('No snapshot available');\n}, _AssistantStream_accumulateMessage = function _AssistantStream_accumulateMessage(event, snapshot) {\n  let newContent = [];\n  switch (event.event) {\n    case 'thread.message.created':\n      //On creation the snapshot is just the initial message\n      return [event.data, newContent];\n    case 'thread.message.delta':\n      if (!snapshot) {\n        throw Error('Received a delta with no existing snapshot (there should be one from message creation)');\n      }\n      let data = event.data;\n      //If this delta does not have content, nothing to process\n      if (data.delta.content) {\n        for (const contentElement of data.delta.content) {\n          if (contentElement.index in snapshot.content) {\n            let currentContent = snapshot.content[contentElement.index];\n            snapshot.content[contentElement.index] = __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateContent).call(this, contentElement, currentContent);\n          } else {\n            snapshot.content[contentElement.index] = contentElement;\n            // This is a new element\n            newContent.push(contentElement);\n          }\n        }\n      }\n      return [snapshot, newContent];\n    case 'thread.message.in_progress':\n    case 'thread.message.completed':\n    case 'thread.message.incomplete':\n      //No changes on other thread events\n      if (snapshot) {\n        return [snapshot, newContent];\n      } else {\n        throw Error('Received thread message event with no existing snapshot');\n      }\n  }\n  throw Error('Tried to accumulate a non-message event');\n}, _AssistantStream_accumulateContent = function _AssistantStream_accumulateContent(contentElement, currentContent) {\n  return AssistantStream.accumulateDelta(currentContent, contentElement);\n}, _AssistantStream_handleRun = function _AssistantStream_handleRun(event) {\n  __classPrivateFieldSet(this, _AssistantStream_currentRunSnapshot, event.data, \"f\");\n  switch (event.event) {\n    case 'thread.run.created':\n      break;\n    case 'thread.run.queued':\n      break;\n    case 'thread.run.in_progress':\n      break;\n    case 'thread.run.requires_action':\n    case 'thread.run.cancelled':\n    case 'thread.run.failed':\n    case 'thread.run.completed':\n    case 'thread.run.expired':\n      __classPrivateFieldSet(this, _AssistantStream_finalRun, event.data, \"f\");\n      if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\")) {\n        this._emit('toolCallDone', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n        __classPrivateFieldSet(this, _AssistantStream_currentToolCall, undefined, \"f\");\n      }\n      break;\n    case 'thread.run.cancelling':\n      break;\n  }\n};\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport * as MessagesAPI from \"./messages.mjs\";\nimport { CursorPage } from \"../../../pagination.mjs\";\nexport class Messages extends APIResource {\n  /**\n   * Create a message.\n   */\n  create(threadId, body, options) {\n    return this._client.post(`/threads/${threadId}/messages`, {\n      body,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Retrieve a message.\n   */\n  retrieve(threadId, messageId, options) {\n    return this._client.get(`/threads/${threadId}/messages/${messageId}`, {\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Modifies a message.\n   */\n  update(threadId, messageId, body, options) {\n    return this._client.post(`/threads/${threadId}/messages/${messageId}`, {\n      body,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n  list(threadId, query = {}, options) {\n    if (isRequestOptions(query)) {\n      return this.list(threadId, {}, query);\n    }\n    return this._client.getAPIList(`/threads/${threadId}/messages`, MessagesPage, {\n      query,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Deletes a message.\n   */\n  del(threadId, messageId, options) {\n    return this._client.delete(`/threads/${threadId}/messages/${messageId}`, {\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n}\nexport class MessagesPage extends CursorPage {}\n(function (Messages) {\n  Messages.MessagesPage = MessagesAPI.MessagesPage;\n})(Messages || (Messages = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../../core.mjs\";\nimport * as StepsAPI from \"./steps.mjs\";\nimport { CursorPage } from \"../../../../pagination.mjs\";\nexport class Steps extends APIResource {\n  retrieve(threadId, runId, stepId, query = {}, options) {\n    if (isRequestOptions(query)) {\n      return this.retrieve(threadId, runId, stepId, {}, query);\n    }\n    return this._client.get(`/threads/${threadId}/runs/${runId}/steps/${stepId}`, {\n      query,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n  list(threadId, runId, query = {}, options) {\n    if (isRequestOptions(query)) {\n      return this.list(threadId, runId, {}, query);\n    }\n    return this._client.getAPIList(`/threads/${threadId}/runs/${runId}/steps`, RunStepsPage, {\n      query,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n}\nexport class RunStepsPage extends CursorPage {}\n(function (Steps) {\n  Steps.RunStepsPage = StepsAPI.RunStepsPage;\n})(Steps || (Steps = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../../core.mjs\";\nimport { AssistantStream } from \"../../../../lib/AssistantStream.mjs\";\nimport { sleep } from \"../../../../core.mjs\";\nimport * as RunsAPI from \"./runs.mjs\";\nimport * as StepsAPI from \"./steps.mjs\";\nimport { CursorPage } from \"../../../../pagination.mjs\";\nexport class Runs extends APIResource {\n  constructor() {\n    super(...arguments);\n    this.steps = new StepsAPI.Steps(this._client);\n  }\n  create(threadId, params, options) {\n    const {\n      include,\n      ...body\n    } = params;\n    return this._client.post(`/threads/${threadId}/runs`, {\n      query: {\n        include\n      },\n      body,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      },\n      stream: params.stream ?? false\n    });\n  }\n  /**\n   * Retrieves a run.\n   */\n  retrieve(threadId, runId, options) {\n    return this._client.get(`/threads/${threadId}/runs/${runId}`, {\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Modifies a run.\n   */\n  update(threadId, runId, body, options) {\n    return this._client.post(`/threads/${threadId}/runs/${runId}`, {\n      body,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n  list(threadId, query = {}, options) {\n    if (isRequestOptions(query)) {\n      return this.list(threadId, {}, query);\n    }\n    return this._client.getAPIList(`/threads/${threadId}/runs`, RunsPage, {\n      query,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Cancels a run that is `in_progress`.\n   */\n  cancel(threadId, runId, options) {\n    return this._client.post(`/threads/${threadId}/runs/${runId}/cancel`, {\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * A helper to create a run an poll for a terminal state. More information on Run\n   * lifecycles can be found here:\n   * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n   */\n  async createAndPoll(threadId, body, options) {\n    const run = await this.create(threadId, body, options);\n    return await this.poll(threadId, run.id, options);\n  }\n  /**\n   * Create a Run stream\n   *\n   * @deprecated use `stream` instead\n   */\n  createAndStream(threadId, body, options) {\n    return AssistantStream.createAssistantStream(threadId, this._client.beta.threads.runs, body, options);\n  }\n  /**\n   * A helper to poll a run status until it reaches a terminal state. More\n   * information on Run lifecycles can be found here:\n   * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n   */\n  async poll(threadId, runId, options) {\n    const headers = {\n      ...options?.headers,\n      'X-Stainless-Poll-Helper': 'true'\n    };\n    if (options?.pollIntervalMs) {\n      headers['X-Stainless-Custom-Poll-Interval'] = options.pollIntervalMs.toString();\n    }\n    while (true) {\n      const {\n        data: run,\n        response\n      } = await this.retrieve(threadId, runId, {\n        ...options,\n        headers: {\n          ...options?.headers,\n          ...headers\n        }\n      }).withResponse();\n      switch (run.status) {\n        //If we are in any sort of intermediate state we poll\n        case 'queued':\n        case 'in_progress':\n        case 'cancelling':\n          let sleepInterval = 5000;\n          if (options?.pollIntervalMs) {\n            sleepInterval = options.pollIntervalMs;\n          } else {\n            const headerInterval = response.headers.get('openai-poll-after-ms');\n            if (headerInterval) {\n              const headerIntervalMs = parseInt(headerInterval);\n              if (!isNaN(headerIntervalMs)) {\n                sleepInterval = headerIntervalMs;\n              }\n            }\n          }\n          await sleep(sleepInterval);\n          break;\n        //We return the run in any terminal state.\n        case 'requires_action':\n        case 'incomplete':\n        case 'cancelled':\n        case 'completed':\n        case 'failed':\n        case 'expired':\n          return run;\n      }\n    }\n  }\n  /**\n   * Create a Run stream\n   */\n  stream(threadId, body, options) {\n    return AssistantStream.createAssistantStream(threadId, this._client.beta.threads.runs, body, options);\n  }\n  submitToolOutputs(threadId, runId, body, options) {\n    return this._client.post(`/threads/${threadId}/runs/${runId}/submit_tool_outputs`, {\n      body,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      },\n      stream: body.stream ?? false\n    });\n  }\n  /**\n   * A helper to submit a tool output to a run and poll for a terminal run state.\n   * More information on Run lifecycles can be found here:\n   * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n   */\n  async submitToolOutputsAndPoll(threadId, runId, body, options) {\n    const run = await this.submitToolOutputs(threadId, runId, body, options);\n    return await this.poll(threadId, run.id, options);\n  }\n  /**\n   * Submit the tool outputs from a previous run and stream the run to a terminal\n   * state. More information on Run lifecycles can be found here:\n   * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n   */\n  submitToolOutputsStream(threadId, runId, body, options) {\n    return AssistantStream.createToolAssistantStream(threadId, runId, this._client.beta.threads.runs, body, options);\n  }\n}\nexport class RunsPage extends CursorPage {}\n(function (Runs) {\n  Runs.RunsPage = RunsAPI.RunsPage;\n  Runs.Steps = StepsAPI.Steps;\n  Runs.RunStepsPage = StepsAPI.RunStepsPage;\n})(Runs || (Runs = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport { AssistantStream } from \"../../../lib/AssistantStream.mjs\";\nimport * as MessagesAPI from \"./messages.mjs\";\nimport * as RunsAPI from \"./runs/runs.mjs\";\nexport class Threads extends APIResource {\n  constructor() {\n    super(...arguments);\n    this.runs = new RunsAPI.Runs(this._client);\n    this.messages = new MessagesAPI.Messages(this._client);\n  }\n  create(body = {}, options) {\n    if (isRequestOptions(body)) {\n      return this.create({}, body);\n    }\n    return this._client.post('/threads', {\n      body,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Retrieves a thread.\n   */\n  retrieve(threadId, options) {\n    return this._client.get(`/threads/${threadId}`, {\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Modifies a thread.\n   */\n  update(threadId, body, options) {\n    return this._client.post(`/threads/${threadId}`, {\n      body,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Delete a thread.\n   */\n  del(threadId, options) {\n    return this._client.delete(`/threads/${threadId}`, {\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n  createAndRun(body, options) {\n    return this._client.post('/threads/runs', {\n      body,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      },\n      stream: body.stream ?? false\n    });\n  }\n  /**\n   * A helper to create a thread, start a run and then poll for a terminal state.\n   * More information on Run lifecycles can be found here:\n   * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n   */\n  async createAndRunPoll(body, options) {\n    const run = await this.createAndRun(body, options);\n    return await this.runs.poll(run.thread_id, run.id, options);\n  }\n  /**\n   * Create a thread and stream the run back\n   */\n  createAndRunStream(body, options) {\n    return AssistantStream.createThreadAssistantStream(body, this._client.beta.threads, options);\n  }\n}\n(function (Threads) {\n  Threads.Runs = RunsAPI.Runs;\n  Threads.RunsPage = RunsAPI.RunsPage;\n  Threads.Messages = MessagesAPI.Messages;\n  Threads.MessagesPage = MessagesAPI.MessagesPage;\n})(Threads || (Threads = {}));\n", "/**\n * Like `Promise.allSettled()` but throws an error if any promises are rejected.\n */\nexport const allSettledWithThrow = async promises => {\n  const results = await Promise.allSettled(promises);\n  const rejected = results.filter(result => result.status === 'rejected');\n  if (rejected.length) {\n    for (const result of rejected) {\n      console.error(result.reason);\n    }\n    throw new Error(`${rejected.length} promise(s) failed - see the above errors`);\n  }\n  // Note: TS was complaining about using `.filter().map()` here for some reason\n  const values = [];\n  for (const result of results) {\n    if (result.status === 'fulfilled') {\n      values.push(result.value);\n    }\n  }\n  return values;\n};\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { sleep, isRequestOptions } from \"../../../core.mjs\";\nimport * as FilesAPI from \"./files.mjs\";\nimport { CursorPage } from \"../../../pagination.mjs\";\nexport class Files extends APIResource {\n  /**\n   * Create a vector store file by attaching a\n   * [File](https://platform.openai.com/docs/api-reference/files) to a\n   * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object).\n   */\n  create(vectorStoreId, body, options) {\n    return this._client.post(`/vector_stores/${vectorStoreId}/files`, {\n      body,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Retrieves a vector store file.\n   */\n  retrieve(vectorStoreId, fileId, options) {\n    return this._client.get(`/vector_stores/${vectorStoreId}/files/${fileId}`, {\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n  list(vectorStoreId, query = {}, options) {\n    if (isRequestOptions(query)) {\n      return this.list(vectorStoreId, {}, query);\n    }\n    return this._client.getAPIList(`/vector_stores/${vectorStoreId}/files`, VectorStoreFilesPage, {\n      query,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Delete a vector store file. This will remove the file from the vector store but\n   * the file itself will not be deleted. To delete the file, use the\n   * [delete file](https://platform.openai.com/docs/api-reference/files/delete)\n   * endpoint.\n   */\n  del(vectorStoreId, fileId, options) {\n    return this._client.delete(`/vector_stores/${vectorStoreId}/files/${fileId}`, {\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Attach a file to the given vector store and wait for it to be processed.\n   */\n  async createAndPoll(vectorStoreId, body, options) {\n    const file = await this.create(vectorStoreId, body, options);\n    return await this.poll(vectorStoreId, file.id, options);\n  }\n  /**\n   * Wait for the vector store file to finish processing.\n   *\n   * Note: this will return even if the file failed to process, you need to check\n   * file.last_error and file.status to handle these cases\n   */\n  async poll(vectorStoreId, fileId, options) {\n    const headers = {\n      ...options?.headers,\n      'X-Stainless-Poll-Helper': 'true'\n    };\n    if (options?.pollIntervalMs) {\n      headers['X-Stainless-Custom-Poll-Interval'] = options.pollIntervalMs.toString();\n    }\n    while (true) {\n      const fileResponse = await this.retrieve(vectorStoreId, fileId, {\n        ...options,\n        headers\n      }).withResponse();\n      const file = fileResponse.data;\n      switch (file.status) {\n        case 'in_progress':\n          let sleepInterval = 5000;\n          if (options?.pollIntervalMs) {\n            sleepInterval = options.pollIntervalMs;\n          } else {\n            const headerInterval = fileResponse.response.headers.get('openai-poll-after-ms');\n            if (headerInterval) {\n              const headerIntervalMs = parseInt(headerInterval);\n              if (!isNaN(headerIntervalMs)) {\n                sleepInterval = headerIntervalMs;\n              }\n            }\n          }\n          await sleep(sleepInterval);\n          break;\n        case 'failed':\n        case 'completed':\n          return file;\n      }\n    }\n  }\n  /**\n   * Upload a file to the `files` API and then attach it to the given vector store.\n   *\n   * Note the file will be asynchronously processed (you can use the alternative\n   * polling helper method to wait for processing to complete).\n   */\n  async upload(vectorStoreId, file, options) {\n    const fileInfo = await this._client.files.create({\n      file: file,\n      purpose: 'assistants'\n    }, options);\n    return this.create(vectorStoreId, {\n      file_id: fileInfo.id\n    }, options);\n  }\n  /**\n   * Add a file to a vector store and poll until processing is complete.\n   */\n  async uploadAndPoll(vectorStoreId, file, options) {\n    const fileInfo = await this.upload(vectorStoreId, file, options);\n    return await this.poll(vectorStoreId, fileInfo.id, options);\n  }\n}\nexport class VectorStoreFilesPage extends CursorPage {}\n(function (Files) {\n  Files.VectorStoreFilesPage = FilesAPI.VectorStoreFilesPage;\n})(Files || (Files = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport { sleep } from \"../../../core.mjs\";\nimport { allSettledWithThrow } from \"../../../lib/Util.mjs\";\nimport { VectorStoreFilesPage } from \"./files.mjs\";\nexport class FileBatches extends APIResource {\n  /**\n   * Create a vector store file batch.\n   */\n  create(vectorStoreId, body, options) {\n    return this._client.post(`/vector_stores/${vectorStoreId}/file_batches`, {\n      body,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Retrieves a vector store file batch.\n   */\n  retrieve(vectorStoreId, batchId, options) {\n    return this._client.get(`/vector_stores/${vectorStoreId}/file_batches/${batchId}`, {\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Cancel a vector store file batch. This attempts to cancel the processing of\n   * files in this batch as soon as possible.\n   */\n  cancel(vectorStoreId, batchId, options) {\n    return this._client.post(`/vector_stores/${vectorStoreId}/file_batches/${batchId}/cancel`, {\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Create a vector store batch and poll until all files have been processed.\n   */\n  async createAndPoll(vectorStoreId, body, options) {\n    const batch = await this.create(vectorStoreId, body);\n    return await this.poll(vectorStoreId, batch.id, options);\n  }\n  listFiles(vectorStoreId, batchId, query = {}, options) {\n    if (isRequestOptions(query)) {\n      return this.listFiles(vectorStoreId, batchId, {}, query);\n    }\n    return this._client.getAPIList(`/vector_stores/${vectorStoreId}/file_batches/${batchId}/files`, VectorStoreFilesPage, {\n      query,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Wait for the given file batch to be processed.\n   *\n   * Note: this will return even if one of the files failed to process, you need to\n   * check batch.file_counts.failed_count to handle this case.\n   */\n  async poll(vectorStoreId, batchId, options) {\n    const headers = {\n      ...options?.headers,\n      'X-Stainless-Poll-Helper': 'true'\n    };\n    if (options?.pollIntervalMs) {\n      headers['X-Stainless-Custom-Poll-Interval'] = options.pollIntervalMs.toString();\n    }\n    while (true) {\n      const {\n        data: batch,\n        response\n      } = await this.retrieve(vectorStoreId, batchId, {\n        ...options,\n        headers\n      }).withResponse();\n      switch (batch.status) {\n        case 'in_progress':\n          let sleepInterval = 5000;\n          if (options?.pollIntervalMs) {\n            sleepInterval = options.pollIntervalMs;\n          } else {\n            const headerInterval = response.headers.get('openai-poll-after-ms');\n            if (headerInterval) {\n              const headerIntervalMs = parseInt(headerInterval);\n              if (!isNaN(headerIntervalMs)) {\n                sleepInterval = headerIntervalMs;\n              }\n            }\n          }\n          await sleep(sleepInterval);\n          break;\n        case 'failed':\n        case 'cancelled':\n        case 'completed':\n          return batch;\n      }\n    }\n  }\n  /**\n   * Uploads the given files concurrently and then creates a vector store file batch.\n   *\n   * The concurrency limit is configurable using the `maxConcurrency` parameter.\n   */\n  async uploadAndPoll(vectorStoreId, {\n    files,\n    fileIds = []\n  }, options) {\n    if (files == null || files.length == 0) {\n      throw new Error(`No \\`files\\` provided to process. If you've already uploaded files you should use \\`.createAndPoll()\\` instead`);\n    }\n    const configuredConcurrency = options?.maxConcurrency ?? 5;\n    // We cap the number of workers at the number of files (so we don't start any unnecessary workers)\n    const concurrencyLimit = Math.min(configuredConcurrency, files.length);\n    const client = this._client;\n    const fileIterator = files.values();\n    const allFileIds = [...fileIds];\n    // This code is based on this design. The libraries don't accommodate our environment limits.\n    // https://stackoverflow.com/questions/40639432/what-is-the-best-way-to-limit-concurrency-when-using-es6s-promise-all\n    async function processFiles(iterator) {\n      for (let item of iterator) {\n        const fileObj = await client.files.create({\n          file: item,\n          purpose: 'assistants'\n        }, options);\n        allFileIds.push(fileObj.id);\n      }\n    }\n    // Start workers to process results\n    const workers = Array(concurrencyLimit).fill(fileIterator).map(processFiles);\n    // Wait for all processing to complete.\n    await allSettledWithThrow(workers);\n    return await this.createAndPoll(vectorStoreId, {\n      file_ids: allFileIds\n    });\n  }\n}\n(function (FileBatches) {})(FileBatches || (FileBatches = {}));\nexport { VectorStoreFilesPage };\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport * as VectorStoresAPI from \"./vector-stores.mjs\";\nimport * as FileBatchesAPI from \"./file-batches.mjs\";\nimport * as FilesAPI from \"./files.mjs\";\nimport { CursorPage } from \"../../../pagination.mjs\";\nexport class VectorStores extends APIResource {\n  constructor() {\n    super(...arguments);\n    this.files = new FilesAPI.Files(this._client);\n    this.fileBatches = new FileBatchesAPI.FileBatches(this._client);\n  }\n  /**\n   * Create a vector store.\n   */\n  create(body, options) {\n    return this._client.post('/vector_stores', {\n      body,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Retrieves a vector store.\n   */\n  retrieve(vectorStoreId, options) {\n    return this._client.get(`/vector_stores/${vectorStoreId}`, {\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Modifies a vector store.\n   */\n  update(vectorStoreId, body, options) {\n    return this._client.post(`/vector_stores/${vectorStoreId}`, {\n      body,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n  list(query = {}, options) {\n    if (isRequestOptions(query)) {\n      return this.list({}, query);\n    }\n    return this._client.getAPIList('/vector_stores', VectorStoresPage, {\n      query,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Delete a vector store.\n   */\n  del(vectorStoreId, options) {\n    return this._client.delete(`/vector_stores/${vectorStoreId}`, {\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v2',\n        ...options?.headers\n      }\n    });\n  }\n}\nexport class VectorStoresPage extends CursorPage {}\n(function (VectorStores) {\n  VectorStores.VectorStoresPage = VectorStoresAPI.VectorStoresPage;\n  VectorStores.Files = FilesAPI.Files;\n  VectorStores.VectorStoreFilesPage = FilesAPI.VectorStoreFilesPage;\n  VectorStores.FileBatches = FileBatchesAPI.FileBatches;\n})(VectorStores || (VectorStores = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as AssistantsAPI from \"./assistants.mjs\";\nimport * as ChatAPI from \"./chat/chat.mjs\";\nimport * as ThreadsAPI from \"./threads/threads.mjs\";\nimport * as VectorStoresAPI from \"./vector-stores/vector-stores.mjs\";\nexport class Beta extends APIResource {\n  constructor() {\n    super(...arguments);\n    this.vectorStores = new VectorStoresAPI.VectorStores(this._client);\n    this.chat = new ChatAPI.Chat(this._client);\n    this.assistants = new AssistantsAPI.Assistants(this._client);\n    this.threads = new ThreadsAPI.Threads(this._client);\n  }\n}\n(function (Beta) {\n  Beta.VectorStores = VectorStoresAPI.VectorStores;\n  Beta.VectorStoresPage = VectorStoresAPI.VectorStoresPage;\n  Beta.Chat = ChatAPI.Chat;\n  Beta.Assistants = AssistantsAPI.Assistants;\n  Beta.AssistantsPage = AssistantsAPI.AssistantsPage;\n  Beta.Threads = ThreadsAPI.Threads;\n})(Beta || (Beta = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nexport class Completions extends APIResource {\n  create(body, options) {\n    return this._client.post('/completions', {\n      body,\n      ...options,\n      stream: body.stream ?? false\n    });\n  }\n}\n(function (Completions) {})(Completions || (Completions = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nexport class Embeddings extends APIResource {\n  /**\n   * Creates an embedding vector representing the input text.\n   */\n  create(body, options) {\n    return this._client.post('/embeddings', {\n      body,\n      ...options\n    });\n  }\n}\n(function (Embeddings) {})(Embeddings || (Embeddings = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nimport { isRequestOptions } from \"../core.mjs\";\nimport { sleep } from \"../core.mjs\";\nimport { APIConnectionTimeoutError } from \"../error.mjs\";\nimport * as Core from \"../core.mjs\";\nimport * as FilesAPI from \"./files.mjs\";\nimport { Page } from \"../pagination.mjs\";\nexport class Files extends APIResource {\n  /**\n   * Upload a file that can be used across various endpoints. Individual files can be\n   * up to 512 MB, and the size of all files uploaded by one organization can be up\n   * to 100 GB.\n   *\n   * The Assistants API supports files up to 2 million tokens and of specific file\n   * types. See the\n   * [Assistants Tools guide](https://platform.openai.com/docs/assistants/tools) for\n   * details.\n   *\n   * The Fine-tuning API only supports `.jsonl` files. The input also has certain\n   * required formats for fine-tuning\n   * [chat](https://platform.openai.com/docs/api-reference/fine-tuning/chat-input) or\n   * [completions](https://platform.openai.com/docs/api-reference/fine-tuning/completions-input)\n   * models.\n   *\n   * The Batch API only supports `.jsonl` files up to 100 MB in size. The input also\n   * has a specific required\n   * [format](https://platform.openai.com/docs/api-reference/batch/request-input).\n   *\n   * Please [contact us](https://help.openai.com/) if you need to increase these\n   * storage limits.\n   */\n  create(body, options) {\n    return this._client.post('/files', Core.multipartFormRequestOptions({\n      body,\n      ...options\n    }));\n  }\n  /**\n   * Returns information about a specific file.\n   */\n  retrieve(fileId, options) {\n    return this._client.get(`/files/${fileId}`, options);\n  }\n  list(query = {}, options) {\n    if (isRequestOptions(query)) {\n      return this.list({}, query);\n    }\n    return this._client.getAPIList('/files', FileObjectsPage, {\n      query,\n      ...options\n    });\n  }\n  /**\n   * Delete a file.\n   */\n  del(fileId, options) {\n    return this._client.delete(`/files/${fileId}`, options);\n  }\n  /**\n   * Returns the contents of the specified file.\n   */\n  content(fileId, options) {\n    return this._client.get(`/files/${fileId}/content`, {\n      ...options,\n      __binaryResponse: true\n    });\n  }\n  /**\n   * Returns the contents of the specified file.\n   *\n   * @deprecated The `.content()` method should be used instead\n   */\n  retrieveContent(fileId, options) {\n    return this._client.get(`/files/${fileId}/content`, {\n      ...options,\n      headers: {\n        Accept: 'application/json',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Waits for the given file to be processed, default timeout is 30 mins.\n   */\n  async waitForProcessing(id, {\n    pollInterval = 5000,\n    maxWait = 30 * 60 * 1000\n  } = {}) {\n    const TERMINAL_STATES = new Set(['processed', 'error', 'deleted']);\n    const start = Date.now();\n    let file = await this.retrieve(id);\n    while (!file.status || !TERMINAL_STATES.has(file.status)) {\n      await sleep(pollInterval);\n      file = await this.retrieve(id);\n      if (Date.now() - start > maxWait) {\n        throw new APIConnectionTimeoutError({\n          message: `Giving up on waiting for file ${id} to finish processing after ${maxWait} milliseconds.`\n        });\n      }\n    }\n    return file;\n  }\n}\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class FileObjectsPage extends Page {}\n(function (Files) {\n  Files.FileObjectsPage = FilesAPI.FileObjectsPage;\n})(Files || (Files = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport * as CheckpointsAPI from \"./checkpoints.mjs\";\nimport { CursorPage } from \"../../../pagination.mjs\";\nexport class Checkpoints extends APIResource {\n  list(fineTuningJobId, query = {}, options) {\n    if (isRequestOptions(query)) {\n      return this.list(fineTuningJobId, {}, query);\n    }\n    return this._client.getAPIList(`/fine_tuning/jobs/${fineTuningJobId}/checkpoints`, FineTuningJobCheckpointsPage, {\n      query,\n      ...options\n    });\n  }\n}\nexport class FineTuningJobCheckpointsPage extends CursorPage {}\n(function (Checkpoints) {\n  Checkpoints.FineTuningJobCheckpointsPage = CheckpointsAPI.FineTuningJobCheckpointsPage;\n})(Checkpoints || (Checkpoints = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport * as JobsAPI from \"./jobs.mjs\";\nimport * as CheckpointsAPI from \"./checkpoints.mjs\";\nimport { CursorPage } from \"../../../pagination.mjs\";\nexport class Jobs extends APIResource {\n  constructor() {\n    super(...arguments);\n    this.checkpoints = new CheckpointsAPI.Checkpoints(this._client);\n  }\n  /**\n   * Creates a fine-tuning job which begins the process of creating a new model from\n   * a given dataset.\n   *\n   * Response includes details of the enqueued job including job status and the name\n   * of the fine-tuned models once complete.\n   *\n   * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/fine-tuning)\n   */\n  create(body, options) {\n    return this._client.post('/fine_tuning/jobs', {\n      body,\n      ...options\n    });\n  }\n  /**\n   * Get info about a fine-tuning job.\n   *\n   * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/fine-tuning)\n   */\n  retrieve(fineTuningJobId, options) {\n    return this._client.get(`/fine_tuning/jobs/${fineTuningJobId}`, options);\n  }\n  list(query = {}, options) {\n    if (isRequestOptions(query)) {\n      return this.list({}, query);\n    }\n    return this._client.getAPIList('/fine_tuning/jobs', FineTuningJobsPage, {\n      query,\n      ...options\n    });\n  }\n  /**\n   * Immediately cancel a fine-tune job.\n   */\n  cancel(fineTuningJobId, options) {\n    return this._client.post(`/fine_tuning/jobs/${fineTuningJobId}/cancel`, options);\n  }\n  listEvents(fineTuningJobId, query = {}, options) {\n    if (isRequestOptions(query)) {\n      return this.listEvents(fineTuningJobId, {}, query);\n    }\n    return this._client.getAPIList(`/fine_tuning/jobs/${fineTuningJobId}/events`, FineTuningJobEventsPage, {\n      query,\n      ...options\n    });\n  }\n}\nexport class FineTuningJobsPage extends CursorPage {}\nexport class FineTuningJobEventsPage extends CursorPage {}\n(function (Jobs) {\n  Jobs.FineTuningJobsPage = JobsAPI.FineTuningJobsPage;\n  Jobs.FineTuningJobEventsPage = JobsAPI.FineTuningJobEventsPage;\n  Jobs.Checkpoints = CheckpointsAPI.Checkpoints;\n  Jobs.FineTuningJobCheckpointsPage = CheckpointsAPI.FineTuningJobCheckpointsPage;\n})(Jobs || (Jobs = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as JobsAPI from \"./jobs/jobs.mjs\";\nexport class FineTuning extends APIResource {\n  constructor() {\n    super(...arguments);\n    this.jobs = new JobsAPI.Jobs(this._client);\n  }\n}\n(function (FineTuning) {\n  FineTuning.Jobs = JobsAPI.Jobs;\n  FineTuning.FineTuningJobsPage = JobsAPI.FineTuningJobsPage;\n  FineTuning.FineTuningJobEventsPage = JobsAPI.FineTuningJobEventsPage;\n})(FineTuning || (FineTuning = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nimport * as Core from \"../core.mjs\";\nexport class Images extends APIResource {\n  /**\n   * Creates a variation of a given image.\n   */\n  createVariation(body, options) {\n    return this._client.post('/images/variations', Core.multipartFormRequestOptions({\n      body,\n      ...options\n    }));\n  }\n  /**\n   * Creates an edited or extended image given an original image and a prompt.\n   */\n  edit(body, options) {\n    return this._client.post('/images/edits', Core.multipartFormRequestOptions({\n      body,\n      ...options\n    }));\n  }\n  /**\n   * Creates an image given a prompt.\n   */\n  generate(body, options) {\n    return this._client.post('/images/generations', {\n      body,\n      ...options\n    });\n  }\n}\n(function (Images) {})(Images || (Images = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nimport * as ModelsAPI from \"./models.mjs\";\nimport { Page } from \"../pagination.mjs\";\nexport class Models extends APIResource {\n  /**\n   * Retrieves a model instance, providing basic information about the model such as\n   * the owner and permissioning.\n   */\n  retrieve(model, options) {\n    return this._client.get(`/models/${model}`, options);\n  }\n  /**\n   * Lists the currently available models, and provides basic information about each\n   * one such as the owner and availability.\n   */\n  list(options) {\n    return this._client.getAPIList('/models', ModelsPage, options);\n  }\n  /**\n   * Delete a fine-tuned model. You must have the Owner role in your organization to\n   * delete a model.\n   */\n  del(model, options) {\n    return this._client.delete(`/models/${model}`, options);\n  }\n}\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class ModelsPage extends Page {}\n(function (Models) {\n  Models.ModelsPage = ModelsAPI.ModelsPage;\n})(Models || (Models = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nexport class Moderations extends APIResource {\n  /**\n   * Classifies if text and/or image inputs are potentially harmful. Learn more in\n   * the [moderation guide](https://platform.openai.com/docs/guides/moderation).\n   */\n  create(body, options) {\n    return this._client.post('/moderations', {\n      body,\n      ...options\n    });\n  }\n}\n(function (Moderations) {})(Moderations || (Moderations = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as Core from \"../../core.mjs\";\nexport class Parts extends APIResource {\n  /**\n   * Adds a\n   * [Part](https://platform.openai.com/docs/api-reference/uploads/part-object) to an\n   * [Upload](https://platform.openai.com/docs/api-reference/uploads/object) object.\n   * A Part represents a chunk of bytes from the file you are trying to upload.\n   *\n   * Each Part can be at most 64 MB, and you can add Parts until you hit the Upload\n   * maximum of 8 GB.\n   *\n   * It is possible to add multiple Parts in parallel. You can decide the intended\n   * order of the Parts when you\n   * [complete the Upload](https://platform.openai.com/docs/api-reference/uploads/complete).\n   */\n  create(uploadId, body, options) {\n    return this._client.post(`/uploads/${uploadId}/parts`, Core.multipartFormRequestOptions({\n      body,\n      ...options\n    }));\n  }\n}\n(function (Parts) {})(Parts || (Parts = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as PartsAPI from \"./parts.mjs\";\nexport class Uploads extends APIResource {\n  constructor() {\n    super(...arguments);\n    this.parts = new PartsAPI.Parts(this._client);\n  }\n  /**\n   * Creates an intermediate\n   * [Upload](https://platform.openai.com/docs/api-reference/uploads/object) object\n   * that you can add\n   * [Parts](https://platform.openai.com/docs/api-reference/uploads/part-object) to.\n   * Currently, an Upload can accept at most 8 GB in total and expires after an hour\n   * after you create it.\n   *\n   * Once you complete the Upload, we will create a\n   * [File](https://platform.openai.com/docs/api-reference/files/object) object that\n   * contains all the parts you uploaded. This File is usable in the rest of our\n   * platform as a regular File object.\n   *\n   * For certain `purpose`s, the correct `mime_type` must be specified. Please refer\n   * to documentation for the supported MIME types for your use case:\n   *\n   * - [Assistants](https://platform.openai.com/docs/assistants/tools/file-search/supported-files)\n   *\n   * For guidance on the proper filename extensions for each purpose, please follow\n   * the documentation on\n   * [creating a File](https://platform.openai.com/docs/api-reference/files/create).\n   */\n  create(body, options) {\n    return this._client.post('/uploads', {\n      body,\n      ...options\n    });\n  }\n  /**\n   * Cancels the Upload. No Parts may be added after an Upload is cancelled.\n   */\n  cancel(uploadId, options) {\n    return this._client.post(`/uploads/${uploadId}/cancel`, options);\n  }\n  /**\n   * Completes the\n   * [Upload](https://platform.openai.com/docs/api-reference/uploads/object).\n   *\n   * Within the returned Upload object, there is a nested\n   * [File](https://platform.openai.com/docs/api-reference/files/object) object that\n   * is ready to use in the rest of the platform.\n   *\n   * You can specify the order of the Parts by passing in an ordered list of the Part\n   * IDs.\n   *\n   * The number of bytes uploaded upon completion must match the number of bytes\n   * initially specified when creating the Upload object. No Parts may be added after\n   * an Upload is completed.\n   */\n  complete(uploadId, body, options) {\n    return this._client.post(`/uploads/${uploadId}/complete`, {\n      body,\n      ...options\n    });\n  }\n}\n(function (Uploads) {\n  Uploads.Parts = PartsAPI.Parts;\n})(Uploads || (Uploads = {}));\n", "// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _a;\nimport * as Errors from \"./error.mjs\";\nimport * as Uploads from \"./uploads.mjs\";\nimport * as qs from \"./internal/qs/index.mjs\";\nimport * as Core from \"./core.mjs\";\nimport * as Pagination from \"./pagination.mjs\";\nimport * as API from \"./resources/index.mjs\";\n/**\n * API Client for interfacing with the OpenAI API.\n */\nexport class OpenAI extends Core.APIClient {\n  /**\n   * API Client for interfacing with the OpenAI API.\n   *\n   * @param {string | undefined} [opts.apiKey=process.env['OPENAI_API_KEY'] ?? undefined]\n   * @param {string | null | undefined} [opts.organization=process.env['OPENAI_ORG_ID'] ?? null]\n   * @param {string | null | undefined} [opts.project=process.env['OPENAI_PROJECT_ID'] ?? null]\n   * @param {string} [opts.baseURL=process.env['OPENAI_BASE_URL'] ?? https://api.openai.com/v1] - Override the default base URL for the API.\n   * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n   * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n   * @param {Core.Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n   * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n   * @param {Core.Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n   * @param {Core.DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n   * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n   */\n  constructor({\n    baseURL = Core.readEnv('OPENAI_BASE_URL'),\n    apiKey = Core.readEnv('OPENAI_API_KEY'),\n    organization = Core.readEnv('OPENAI_ORG_ID') ?? null,\n    project = Core.readEnv('OPENAI_PROJECT_ID') ?? null,\n    ...opts\n  } = {}) {\n    if (apiKey === undefined) {\n      throw new Errors.OpenAIError(\"The OPENAI_API_KEY environment variable is missing or empty; either provide it, or instantiate the OpenAI client with an apiKey option, like new OpenAI({ apiKey: 'My API Key' }).\");\n    }\n    const options = {\n      apiKey,\n      organization,\n      project,\n      ...opts,\n      baseURL: baseURL || `https://api.openai.com/v1`\n    };\n    if (!options.dangerouslyAllowBrowser && Core.isRunningInBrowser()) {\n      throw new Errors.OpenAIError(\"It looks like you're running in a browser-like environment.\\n\\nThis is disabled by default, as it risks exposing your secret API credentials to attackers.\\nIf you understand the risks and have appropriate mitigations in place,\\nyou can set the `dangerouslyAllowBrowser` option to `true`, e.g.,\\n\\nnew OpenAI({ apiKey, dangerouslyAllowBrowser: true });\\n\\nhttps://help.openai.com/en/articles/5112595-best-practices-for-api-key-safety\\n\");\n    }\n    super({\n      baseURL: options.baseURL,\n      timeout: options.timeout ?? 600000 /* 10 minutes */,\n      httpAgent: options.httpAgent,\n      maxRetries: options.maxRetries,\n      fetch: options.fetch\n    });\n    this.completions = new API.Completions(this);\n    this.chat = new API.Chat(this);\n    this.embeddings = new API.Embeddings(this);\n    this.files = new API.Files(this);\n    this.images = new API.Images(this);\n    this.audio = new API.Audio(this);\n    this.moderations = new API.Moderations(this);\n    this.models = new API.Models(this);\n    this.fineTuning = new API.FineTuning(this);\n    this.beta = new API.Beta(this);\n    this.batches = new API.Batches(this);\n    this.uploads = new API.Uploads(this);\n    this._options = options;\n    this.apiKey = apiKey;\n    this.organization = organization;\n    this.project = project;\n  }\n  defaultQuery() {\n    return this._options.defaultQuery;\n  }\n  defaultHeaders(opts) {\n    return {\n      ...super.defaultHeaders(opts),\n      'OpenAI-Organization': this.organization,\n      'OpenAI-Project': this.project,\n      ...this._options.defaultHeaders\n    };\n  }\n  authHeaders(opts) {\n    return {\n      Authorization: `Bearer ${this.apiKey}`\n    };\n  }\n  stringifyQuery(query) {\n    return qs.stringify(query, {\n      arrayFormat: 'brackets'\n    });\n  }\n}\n_a = OpenAI;\nOpenAI.OpenAI = _a;\nOpenAI.DEFAULT_TIMEOUT = 600000; // 10 minutes\nOpenAI.OpenAIError = Errors.OpenAIError;\nOpenAI.APIError = Errors.APIError;\nOpenAI.APIConnectionError = Errors.APIConnectionError;\nOpenAI.APIConnectionTimeoutError = Errors.APIConnectionTimeoutError;\nOpenAI.APIUserAbortError = Errors.APIUserAbortError;\nOpenAI.NotFoundError = Errors.NotFoundError;\nOpenAI.ConflictError = Errors.ConflictError;\nOpenAI.RateLimitError = Errors.RateLimitError;\nOpenAI.BadRequestError = Errors.BadRequestError;\nOpenAI.AuthenticationError = Errors.AuthenticationError;\nOpenAI.InternalServerError = Errors.InternalServerError;\nOpenAI.PermissionDeniedError = Errors.PermissionDeniedError;\nOpenAI.UnprocessableEntityError = Errors.UnprocessableEntityError;\nOpenAI.toFile = Uploads.toFile;\nOpenAI.fileFromPath = Uploads.fileFromPath;\nexport const {\n  OpenAIError,\n  APIError,\n  APIConnectionError,\n  APIConnectionTimeoutError,\n  APIUserAbortError,\n  NotFoundError,\n  ConflictError,\n  RateLimitError,\n  BadRequestError,\n  AuthenticationError,\n  InternalServerError,\n  PermissionDeniedError,\n  UnprocessableEntityError\n} = Errors;\nexport var toFile = Uploads.toFile;\nexport var fileFromPath = Uploads.fileFromPath;\n(function (OpenAI) {\n  OpenAI.Page = Pagination.Page;\n  OpenAI.CursorPage = Pagination.CursorPage;\n  OpenAI.Completions = API.Completions;\n  OpenAI.Chat = API.Chat;\n  OpenAI.Embeddings = API.Embeddings;\n  OpenAI.Files = API.Files;\n  OpenAI.FileObjectsPage = API.FileObjectsPage;\n  OpenAI.Images = API.Images;\n  OpenAI.Audio = API.Audio;\n  OpenAI.Moderations = API.Moderations;\n  OpenAI.Models = API.Models;\n  OpenAI.ModelsPage = API.ModelsPage;\n  OpenAI.FineTuning = API.FineTuning;\n  OpenAI.Beta = API.Beta;\n  OpenAI.Batches = API.Batches;\n  OpenAI.BatchesPage = API.BatchesPage;\n  OpenAI.Uploads = API.Uploads;\n})(OpenAI || (OpenAI = {}));\n/** API Client for interfacing with the Azure OpenAI API. */\nexport class AzureOpenAI extends OpenAI {\n  /**\n   * API Client for interfacing with the Azure OpenAI API.\n   *\n   * @param {string | undefined} [opts.apiVersion=process.env['OPENAI_API_VERSION'] ?? undefined]\n   * @param {string | undefined} [opts.endpoint=process.env['AZURE_OPENAI_ENDPOINT'] ?? undefined] - Your Azure endpoint, including the resource, e.g. `https://example-resource.azure.openai.com/`\n   * @param {string | undefined} [opts.apiKey=process.env['AZURE_OPENAI_API_KEY'] ?? undefined]\n   * @param {string | undefined} opts.deployment - A model deployment, if given, sets the base client URL to include `/deployments/{deployment}`.\n   * @param {string | null | undefined} [opts.organization=process.env['OPENAI_ORG_ID'] ?? null]\n   * @param {string} [opts.baseURL=process.env['OPENAI_BASE_URL']] - Sets the base URL for the API, e.g. `https://example-resource.azure.openai.com/openai/`.\n   * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n   * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n   * @param {Core.Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n   * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n   * @param {Core.Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n   * @param {Core.DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n   * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n   */\n  constructor({\n    baseURL = Core.readEnv('OPENAI_BASE_URL'),\n    apiKey = Core.readEnv('AZURE_OPENAI_API_KEY'),\n    apiVersion = Core.readEnv('OPENAI_API_VERSION'),\n    endpoint,\n    deployment,\n    azureADTokenProvider,\n    dangerouslyAllowBrowser,\n    ...opts\n  } = {}) {\n    if (!apiVersion) {\n      throw new Errors.OpenAIError(\"The OPENAI_API_VERSION environment variable is missing or empty; either provide it, or instantiate the AzureOpenAI client with an apiVersion option, like new AzureOpenAI({ apiVersion: 'My API Version' }).\");\n    }\n    if (typeof azureADTokenProvider === 'function') {\n      dangerouslyAllowBrowser = true;\n    }\n    if (!azureADTokenProvider && !apiKey) {\n      throw new Errors.OpenAIError('Missing credentials. Please pass one of `apiKey` and `azureADTokenProvider`, or set the `AZURE_OPENAI_API_KEY` environment variable.');\n    }\n    if (azureADTokenProvider && apiKey) {\n      throw new Errors.OpenAIError('The `apiKey` and `azureADTokenProvider` arguments are mutually exclusive; only one can be passed at a time.');\n    }\n    // define a sentinel value to avoid any typing issues\n    apiKey ?? (apiKey = API_KEY_SENTINEL);\n    opts.defaultQuery = {\n      ...opts.defaultQuery,\n      'api-version': apiVersion\n    };\n    if (!baseURL) {\n      if (!endpoint) {\n        endpoint = process.env['AZURE_OPENAI_ENDPOINT'];\n      }\n      if (!endpoint) {\n        throw new Errors.OpenAIError('Must provide one of the `baseURL` or `endpoint` arguments, or the `AZURE_OPENAI_ENDPOINT` environment variable');\n      }\n      baseURL = `${endpoint}/openai`;\n    } else {\n      if (endpoint) {\n        throw new Errors.OpenAIError('baseURL and endpoint are mutually exclusive');\n      }\n    }\n    super({\n      apiKey,\n      baseURL,\n      ...opts,\n      ...(dangerouslyAllowBrowser !== undefined ? {\n        dangerouslyAllowBrowser\n      } : {})\n    });\n    this.apiVersion = '';\n    this._azureADTokenProvider = azureADTokenProvider;\n    this.apiVersion = apiVersion;\n    this._deployment = deployment;\n  }\n  buildRequest(options) {\n    if (_deployments_endpoints.has(options.path) && options.method === 'post' && options.body !== undefined) {\n      if (!Core.isObj(options.body)) {\n        throw new Error('Expected request body to be an object');\n      }\n      const model = this._deployment || options.body['model'];\n      if (model !== undefined && !this.baseURL.includes('/deployments')) {\n        options.path = `/deployments/${model}${options.path}`;\n      }\n    }\n    return super.buildRequest(options);\n  }\n  async _getAzureADToken() {\n    if (typeof this._azureADTokenProvider === 'function') {\n      const token = await this._azureADTokenProvider();\n      if (!token || typeof token !== 'string') {\n        throw new Errors.OpenAIError(`Expected 'azureADTokenProvider' argument to return a string but it returned ${token}`);\n      }\n      return token;\n    }\n    return undefined;\n  }\n  authHeaders(opts) {\n    return {};\n  }\n  async prepareOptions(opts) {\n    /**\n     * The user should provide a bearer token provider if they want\n     * to use Azure AD authentication. The user shouldn't set the\n     * Authorization header manually because the header is overwritten\n     * with the Azure AD token if a bearer token provider is provided.\n     */\n    if (opts.headers?.['api-key']) {\n      return super.prepareOptions(opts);\n    }\n    const token = await this._getAzureADToken();\n    opts.headers ?? (opts.headers = {});\n    if (token) {\n      opts.headers['Authorization'] = `Bearer ${token}`;\n    } else if (this.apiKey !== API_KEY_SENTINEL) {\n      opts.headers['api-key'] = this.apiKey;\n    } else {\n      throw new Errors.OpenAIError('Unable to handle auth');\n    }\n    return super.prepareOptions(opts);\n  }\n}\nconst _deployments_endpoints = new Set(['/completions', '/chat/completions', '/embeddings', '/audio/transcriptions', '/audio/translations', '/audio/speech', '/images/generations']);\nconst API_KEY_SENTINEL = '<Missing Key>';\n// ---------------------- End Azure ----------------------\nexport default OpenAI;\n"],
  "mappings": "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",
  "names": ["fetch", "Request", "Response", "Headers", "FormData", "Blob", "File", "ReadableStream", "iter", "ReadableStream", "str", "File", "FormData", "kind", "fetch", "opts", "Page", "retryMessage", "_a", "str", "is_array", "Completions", "Chat", "Speech", "Transcriptions", "Translations", "Audio", "Batches", "Assistants", "__classPrivateFieldSet", "kind", "__classPrivateFieldGet", "_EventStream_handleError", "inputTool", "__classPrivateFieldGet", "kind", "_a", "content", "name", "_AbstractChatCompletionRunner_getFinalContent", "_AbstractChatCompletionRunner_getFinalMessage", "_AbstractChatCompletionRunner_getFinalFunctionCall", "_AbstractChatCompletionRunner_getFinalFunctionCallResult", "_AbstractChatCompletionRunner_calculateTotalUsage", "_AbstractChatCompletionRunner_validateParams", "_AbstractChatCompletionRunner_stringifyFunctionCallResult", "escape", "e", "__classPrivateFieldSet", "kind", "__classPrivateFieldGet", "_ChatCompletionStream_beginRequest", "_ChatCompletionStream_getChoiceEventState", "_ChatCompletionStream_addChunk", "_ChatCompletionStream_emitToolCallDoneEvent", "_ChatCompletionStream_emitContentDoneEvents", "_ChatCompletionStream_endRequest", "_ChatCompletionStream_getAutoParseableResponseFormat", "_ChatCompletionStream_accumulateChatCompletion", "_a", "_b", "content", "refusal", "rest", "_c", "_d", "index", "chunk", "id", "Completions", "Chat", "Completions", "__classPrivateFieldGet", "kind", "__classPrivateFieldSet", "chunk", "_AssistantStream_addEvent", "_AssistantStream_endRequest", "_AssistantStream_handleMessage", "_AssistantStream_handleRunStep", "_AssistantStream_handleEvent", "_AssistantStream_accumulateRunStep", "_AssistantStream_accumulateMessage", "_AssistantStream_accumulateContent", "_AssistantStream_handleRun", "Messages", "Steps", "_a", "Runs", "Threads", "Files", "FileBatches", "VectorStores", "Chat", "Beta", "Completions", "Embeddings", "Files", "Checkpoints", "Jobs", "FineTuning", "Images", "Models", "Moderations", "Parts", "Uploads", "_a", "Completions", "Files", "OpenAIError", "APIError", "APIConnectionError", "APIConnectionTimeoutError", "APIUserAbortError", "NotFoundError", "ConflictError", "RateLimitError", "BadRequestError", "AuthenticationError", "InternalServerError", "PermissionDeniedError", "UnprocessableEntityError", "toFile", "fileFromPath", "OpenAI"]
}
